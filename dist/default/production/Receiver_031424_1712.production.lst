

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 18 17:50:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F2221 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _SSPCON1bits	set	4038
    69   000000                     _SSPADD	set	4040
    70   000000                     _SSPSTATbits	set	4039
    71   000000                     _TMR1L	set	4046
    72   000000                     _TMR1H	set	4047
    73   000000                     _TMR0L	set	4054
    74   000000                     _TMR0H	set	4055
    75   000000                     _INTCONbits	set	4082
    76   000000                     _T1CONbits	set	4045
    77   000000                     _T0CONbits	set	4053
    78   000000                     _PORTB	set	3969
    79   000000                     _T0CON	set	4053
    80   000000                     _INTCON2bits	set	4081
    81   000000                     _TRISB	set	3987
    82   000000                     _OSCTUNEbits	set	3995
    83   000000                     _PIE1bits	set	3997
    84   000000                     _T1CON	set	4045
    85   000000                     _ADCON1bits	set	4033
    86   000000                     _SSPCON2bits	set	4037
    87   000000                     _SSPBUF	set	4041
    88   000000                     _PIR1bits	set	3998
    89   000000                     _RCONbits	set	4048
    90   000000                     _OSCCONbits	set	4051
    91   000000                     _TRISCbits	set	3988
    92                           
    93                           	psect	smallconst
    94   000200                     __psmallconst:
    95                           	callstack 0
    96   000200  00                 	db	0
    97   000201                     STR_2:
    98   000201  43                 	db	67	;'C'
    99   000202  61                 	db	97	;'a'
   100   000203  70                 	db	112	;'p'
   101   000204  73                 	db	115	;'s'
   102   000205  74                 	db	116	;'t'
   103   000206  6F                 	db	111	;'o'
   104   000207  6E                 	db	110	;'n'
   105   000208  65                 	db	101	;'e'
   106   000209  00                 	db	0
   107   00020A                     STR_1:
   108   00020A  53                 	db	83	;'S'
   109   00020B  65                 	db	101	;'e'
   110   00020C  6E                 	db	110	;'n'
   111   00020D  69                 	db	105	;'i'
   112   00020E  6F                 	db	111	;'o'
   113   00020F  72                 	db	114	;'r'
   114   000210  00                 	db	0
   115   000211  20                 	db	32
   116   000212  00                 	db	0
   117   000213  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   000950                     __pcinit:
   123                           	callstack 0
   124   000950                     start_initialization:
   125                           	callstack 0
   126   000950                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Clear objects allocated to COMRAM (16 bytes)
   130   000950  EE00  F046         	lfsr	0,__pbssCOMRAM
   131   000954  0E10               	movlw	16
   132   000956                     clear_0:
   133   000956  6AEE               	clrf	postinc0,c
   134   000958  06E8               	decf	wreg,f,c
   135   00095A  E1FD               	bnz	clear_0
   136   00095C                     end_of_initialization:
   137                           	callstack 0
   138   00095C                     __end_of__initialization:
   139                           	callstack 0
   140   00095C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   141   00095E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   142   000960  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143   000962  6EF8               	movwf	tblptru,c
   144   000964  0100               	movlb	0
   145   000966  EFF6  F001         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	bssCOMRAM
   148   000046                     __pbssCOMRAM:
   149                           	callstack 0
   150   000046                     _Time_out:
   151                           	callstack 0
   152   000046                     	ds	1
   153   000047                     _Buffer_index:
   154                           	callstack 0
   155   000047                     	ds	1
   156   000048                     _character_match_cnt:
   157                           	callstack 0
   158   000048                     	ds	1
   159   000049                     _new_input:
   160                           	callstack 0
   161   000049                     	ds	1
   162   00004A                     _previous_character:
   163                           	callstack 0
   164   00004A                     	ds	1
   165   00004B                     _current_character:
   166                           	callstack 0
   167   00004B                     	ds	1
   168   00004C                     _Receiver_buffer:
   169                           	callstack 0
   170   00004C                     	ds	10
   171                           
   172                           	psect	cstackCOMRAM
   173   000001                     __pcstackCOMRAM:
   174                           	callstack 0
   175   000001                     ?i2___lmul:
   176                           	callstack 0
   177   000001                     i2i2c_data_tx@data:
   178                           	callstack 0
   179   000001                     i2i2c_start_and_addr@address:
   180                           	callstack 0
   181   000001                     i2___lmul@multiplier:
   182                           	callstack 0
   183                           
   184                           ; 4 bytes @ 0x0
   185   000001                     	ds	4
   186   000005                     i2___lmul@multiplicand:
   187                           	callstack 0
   188                           
   189                           ; 4 bytes @ 0x4
   190   000005                     	ds	4
   191   000009                     i2___lmul@product:
   192                           	callstack 0
   193                           
   194                           ; 4 bytes @ 0x8
   195   000009                     	ds	4
   196   00000D                     i2delay@milliseconds:
   197                           	callstack 0
   198                           
   199                           ; 4 bytes @ 0xC
   200   00000D                     	ds	4
   201   000011                     i2delay@timer_value:
   202                           	callstack 0
   203                           
   204                           ; 8 bytes @ 0x10
   205   000011                     	ds	8
   206   000019                     ??_ISR:
   207   000019                     
   208                           ; 1 bytes @ 0x18
   209   000019                     	ds	3
   210   00001C                     ISR@i:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x1B
   214   00001C                     	ds	2
   215   00001E                     ISR@i_729:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x1D
   219   00001E                     	ds	2
   220   000020                     ISR@i_730:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x1F
   224   000020                     	ds	2
   225   000022                     ?___lmul:
   226                           	callstack 0
   227   000022                     i2c_data_tx@data:
   228                           	callstack 0
   229   000022                     i2c_start_and_addr@address:
   230                           	callstack 0
   231   000022                     ___lmul@multiplier:
   232                           	callstack 0
   233                           
   234                           ; 4 bytes @ 0x21
   235   000022                     	ds	1
   236   000023                     ??_lcd_char:
   237                           
   238                           ; 1 bytes @ 0x22
   239   000023                     	ds	1
   240   000024                     lcd_char@letter:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x23
   244   000024                     	ds	1
   245   000025                     lcd_message@message:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x24
   249   000025                     	ds	1
   250   000026                     ___lmul@multiplicand:
   251                           	callstack 0
   252                           
   253                           ; 4 bytes @ 0x25
   254   000026                     	ds	1
   255   000027                     
   256                           ; 1 bytes @ 0x26
   257   000027                     	ds	3
   258   00002A                     ___lmul@product:
   259                           	callstack 0
   260                           
   261                           ; 4 bytes @ 0x29
   262   00002A                     	ds	4
   263   00002E                     delay@milliseconds:
   264                           	callstack 0
   265                           
   266                           ; 4 bytes @ 0x2D
   267   00002E                     	ds	4
   268   000032                     delay@timer_value:
   269                           	callstack 0
   270                           
   271                           ; 8 bytes @ 0x31
   272   000032                     	ds	8
   273   00003A                     lcd_command@lt:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x39
   277   00003A                     	ds	1
   278   00003B                     lcd_command@rw:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x3A
   282   00003B                     	ds	1
   283   00003C                     lcd_command@rs:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x3B
   287   00003C                     	ds	1
   288   00003D                     ??_lcd_command:
   289                           
   290                           ; 1 bytes @ 0x3C
   291   00003D                     	ds	3
   292   000040                     lcd_command@data:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x3F
   296   000040                     	ds	1
   297   000041                     lcd_move_cursor@position:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x40
   301   000041                     	ds	1
   302   000042                     lcd_move_cursor@line:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x41
   306   000042                     	ds	1
   307   000043                     ??_main:
   308                           
   309                           ; 1 bytes @ 0x42
   310   000043                     	ds	1
   311   000044                     main@i:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x43
   315   000044                     	ds	2
   316                           
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 34 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  i               2   67[COMRAM] int 
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1
   336 ;;      Params:         0       0       0
   337 ;;      Locals:         2       0       0
   338 ;;      Temps:          1       0       0
   339 ;;      Totals:         3       0       0
   340 ;;Total ram usage:        3 bytes
   341 ;; Hardware stack levels required when called: 9
   342 ;; This function calls:
   343 ;;		_lcd_init
   344 ;;		_lcd_message
   345 ;;		_system_init
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352   0003EC                     __ptext0:
   353                           	callstack 0
   354   0003EC                     _main:
   355                           	callstack 22
   356   0003EC                     
   357                           ;main.c: 38:     system_init();
   358   0003EC  ECEC  F003         	call	_system_init	;wreg free
   359   0003F0                     
   360                           ;main.c: 40:     lcd_init();
   361   0003F0  ECB4  F002         	call	_lcd_init	;wreg free
   362   0003F4                     
   363                           ;main.c: 43:     T0CON = 0b00000111;
   364   0003F4  0E07               	movlw	7
   365   0003F6  6ED5               	movwf	213,c	;volatile
   366   0003F8                     
   367                           ;main.c: 44:     INTCONbits.TMR0IF = 0;
   368   0003F8  94F2               	bcf	242,2,c	;volatile
   369   0003FA                     
   370                           ;main.c: 45:     TMR0H = 0x00;
   371   0003FA  0E00               	movlw	0
   372   0003FC  6ED7               	movwf	215,c	;volatile
   373   0003FE                     
   374                           ;main.c: 46:     TMR0L = 0x00;
   375   0003FE  0E00               	movlw	0
   376   000400  6ED6               	movwf	214,c	;volatile
   377   000402                     
   378                           ;main.c: 47:     INTCONbits.TMR0IE = 1;
   379   000402  8AF2               	bsf	242,5,c	;volatile
   380   000404                     
   381                           ;main.c: 48:     T0CONbits.TMR0ON = 1;
   382   000404  8ED5               	bsf	213,7,c	;volatile
   383   000406                     l1358:
   384                           
   385                           ;main.c: 51:     {;main.c: 52:        if(new_input)
   386   000406  5049               	movf	_new_input^0,w,c
   387   000408  B4D8               	btfsc	status,2,c
   388   00040A  EF09  F002         	goto	u631
   389   00040E  EF0B  F002         	goto	u630
   390   000412                     u631:
   391   000412  EF03  F002         	goto	l1358
   392   000416                     u630:
   393   000416                     
   394                           ;main.c: 53:        {;main.c: 54:            if(previous_character == 0)
   395   000416  504A               	movf	_previous_character^0,w,c
   396   000418  A4D8               	btfss	status,2,c
   397   00041A  EF11  F002         	goto	u641
   398   00041E  EF13  F002         	goto	u640
   399   000422                     u641:
   400   000422  EF1D  F002         	goto	l1366
   401   000426                     u640:
   402   000426                     
   403                           ;main.c: 55:            {;main.c: 56:                previous_character = Receiver_buffe
      +                          r[Buffer_index-1];
   404   000426  5047               	movf	_Buffer_index^0,w,c
   405   000428  0F4B               	addlw	low (_Receiver_buffer+255)
   406   00042A  6ED9               	movwf	fsr2l,c
   407   00042C  6ADA               	clrf	fsr2h,c
   408   00042E  50DF               	movf	indf2,w,c
   409   000430  6E4A               	movwf	_previous_character^0,c
   410   000432                     l1364:
   411                           
   412                           ;main.c: 57:                new_input = 0;
   413   000432  0E00               	movlw	0
   414   000434  6E49               	movwf	_new_input^0,c
   415                           
   416                           ;main.c: 58:            }
   417   000436  EF2D  F002         	goto	l1372
   418   00043A                     l1366:
   419   00043A  5047               	movf	_Buffer_index^0,w,c
   420   00043C  0F4B               	addlw	low (_Receiver_buffer+255)
   421   00043E  6ED9               	movwf	fsr2l,c
   422   000440  6ADA               	clrf	fsr2h,c
   423   000442  504A               	movf	_previous_character^0,w,c
   424   000444  18DE               	xorwf	postinc2,w,c
   425   000446  A4D8               	btfss	status,2,c
   426   000448  EF28  F002         	goto	u651
   427   00044C  EF2A  F002         	goto	u650
   428   000450                     u651:
   429   000450  EF2D  F002         	goto	l1372
   430   000454                     u650:
   431   000454                     
   432                           ;main.c: 60:            {;main.c: 61:                character_match_cnt++;
   433   000454  2A48               	incf	_character_match_cnt^0,f,c
   434   000456  EF19  F002         	goto	l1364
   435   00045A                     l1372:
   436                           
   437                           ;main.c: 64:            if(character_match_cnt == 2)
   438   00045A  0E02               	movlw	2
   439   00045C  1848               	xorwf	_character_match_cnt^0,w,c
   440   00045E  A4D8               	btfss	status,2,c
   441   000460  EF34  F002         	goto	u661
   442   000464  EF36  F002         	goto	u660
   443   000468                     u661:
   444   000468  EF03  F002         	goto	l1358
   445   00046C                     u660:
   446   00046C                     
   447                           ;main.c: 65:            {;main.c: 66:                 lcd_message(Receiver_buffer + (Buf
      +                          fer_index - 1));
   448   00046C  5047               	movf	_Buffer_index^0,w,c
   449   00046E  0F4B               	addlw	low (_Receiver_buffer+-1)
   450   000470  6E43               	movwf	??_main^0,c
   451   000472  C043  F025         	movff	??_main,lcd_message@message
   452   000476  6A26               	clrf	(lcd_message@message+1)^0,c
   453   000478  EC58  F003         	call	_lcd_message	;wreg free
   454   00047C                     
   455                           ;main.c: 67:                 new_input = 0;
   456   00047C  0E00               	movlw	0
   457   00047E  6E49               	movwf	_new_input^0,c
   458   000480                     
   459                           ;main.c: 68:                 previous_character = 0;
   460   000480  0E00               	movlw	0
   461   000482  6E4A               	movwf	_previous_character^0,c
   462   000484                     
   463                           ;main.c: 69:                 character_match_cnt = 0;
   464   000484  0E00               	movlw	0
   465   000486  6E48               	movwf	_character_match_cnt^0,c
   466   000488                     
   467                           ;main.c: 70:                 Buffer_index = 0;
   468   000488  0E00               	movlw	0
   469   00048A  6E47               	movwf	_Buffer_index^0,c
   470   00048C                     
   471                           ;main.c: 71:                 Time_out = 0;
   472   00048C  0E00               	movlw	0
   473   00048E  6E46               	movwf	_Time_out^0,c
   474   000490                     
   475                           ;main.c: 72:                 for(int i = 0; i < 10;i++)
   476   000490  0E00               	movlw	0
   477   000492  6E45               	movwf	(main@i+1)^0,c
   478   000494  0E00               	movlw	0
   479   000496  6E44               	movwf	main@i^0,c
   480   000498                     l1392:
   481                           
   482                           ;main.c: 73:                 {;main.c: 74:                     Receiver_buffer[i] = '\0'
      +                          ;
   483   000498  5044               	movf	main@i^0,w,c
   484   00049A  0F4C               	addlw	low _Receiver_buffer
   485   00049C  6ED9               	movwf	fsr2l,c
   486   00049E  6ADA               	clrf	fsr2h,c
   487   0004A0  6ADF               	clrf	indf2,c
   488   0004A2                     
   489                           ;main.c: 75:                 }
   490   0004A2  4A44               	infsnz	main@i^0,f,c
   491   0004A4  2A45               	incf	(main@i+1)^0,f,c
   492   0004A6  BE45               	btfsc	(main@i+1)^0,7,c
   493   0004A8  EF5F  F002         	goto	u671
   494   0004AC  5045               	movf	(main@i+1)^0,w,c
   495   0004AE  E109               	bnz	u670
   496   0004B0  0E0A               	movlw	10
   497   0004B2  5C44               	subwf	main@i^0,w,c
   498   0004B4  A0D8               	btfss	status,0,c
   499   0004B6  EF5F  F002         	goto	u671
   500   0004BA  EF61  F002         	goto	u670
   501   0004BE                     u671:
   502   0004BE  EF4C  F002         	goto	l1392
   503   0004C2                     u670:
   504   0004C2  EF03  F002         	goto	l1358
   505   0004C6  EFEA  F000         	goto	start
   506   0004CA                     __end_of_main:
   507                           	callstack 0
   508                           
   509 ;; *************** function _system_init *****************
   510 ;; Defined at:
   511 ;;		line 336 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1
   525 ;;      Params:         0       0       0
   526 ;;      Locals:         0       0       0
   527 ;;      Temps:          0       0       0
   528 ;;      Totals:         0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 4
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text1
   540   0007D8                     __ptext1:
   541                           	callstack 0
   542   0007D8                     _system_init:
   543                           	callstack 26
   544   0007D8                     
   545                           ;main.c: 339:     OSCCONbits.SCS = 0;
   546   0007D8  0EFC               	movlw	-4
   547   0007DA  16D3               	andwf	211,f,c	;volatile
   548   0007DC                     
   549                           ;main.c: 340:     OSCCONbits.IDLEN = 1;
   550   0007DC  8ED3               	bsf	211,7,c	;volatile
   551                           
   552                           ;main.c: 341:     OSCCONbits.IRCF = 7;
   553   0007DE  0E70               	movlw	112
   554   0007E0  12D3               	iorwf	211,f,c	;volatile
   555   0007E2                     
   556                           ;main.c: 342:     OSCTUNEbits.PLLEN = 1;
   557   0007E2  8C9B               	bsf	155,6,c	;volatile
   558   0007E4                     
   559                           ;main.c: 345:     INTCONbits.GIE = 1;
   560   0007E4  8EF2               	bsf	242,7,c	;volatile
   561   0007E6                     
   562                           ;main.c: 346:     INTCONbits.PEIE = 1;
   563   0007E6  8CF2               	bsf	242,6,c	;volatile
   564   0007E8                     
   565                           ;main.c: 348:     INTCON2bits.RBPU = 0;
   566   0007E8  9EF1               	bcf	241,7,c	;volatile
   567                           
   568                           ;main.c: 351:     ADCON1bits.PCFG = 15;
   569   0007EA  0E0F               	movlw	15
   570   0007EC  12C1               	iorwf	193,f,c	;volatile
   571   0007EE                     
   572                           ;main.c: 354:     RCONbits.IPEN = 0;
   573   0007EE  9ED0               	bcf	208,7,c	;volatile
   574   0007F0                     
   575                           ;main.c: 357:     TRISB = TRISB | 0x1F;
   576   0007F0  5093               	movf	147,w,c	;volatile
   577   0007F2  091F               	iorlw	31
   578   0007F4  6E93               	movwf	147,c	;volatile
   579   0007F6                     
   580                           ;main.c: 358:     PORTB = PORTB & 0xE0;
   581   0007F6  5081               	movf	129,w,c	;volatile
   582   0007F8  0BE0               	andlw	224
   583   0007FA  6E81               	movwf	129,c	;volatile
   584   0007FC                     
   585                           ;main.c: 359:     INTCONbits.INT0IE = 1;
   586   0007FC  88F2               	bsf	242,4,c	;volatile
   587   0007FE                     
   588                           ;main.c: 360:     INTCON2bits.INTEDG0 = 1;
   589   0007FE  8CF1               	bsf	241,6,c	;volatile
   590   000800                     
   591                           ;main.c: 363:     SSPSTATbits.SMP = 1;
   592   000800  8EC7               	bsf	199,7,c	;volatile
   593   000802                     
   594                           ;main.c: 364:     SSPSTATbits.CKE = 0;
   595   000802  9CC7               	bcf	199,6,c	;volatile
   596                           
   597                           ;main.c: 365:     SSPADD = 0x50;
   598   000804  0E50               	movlw	80
   599   000806  6EC8               	movwf	200,c	;volatile
   600   000808                     
   601                           ;main.c: 366:     SSPCON1bits.SSPEN = 1;
   602   000808  8AC6               	bsf	198,5,c	;volatile
   603                           
   604                           ;main.c: 367:     SSPCON1bits.SSPM = 0b1000;
   605   00080A  50C6               	movf	198,w,c	;volatile
   606   00080C  0BF0               	andlw	-16
   607   00080E  0908               	iorlw	8
   608   000810  6EC6               	movwf	198,c	;volatile
   609   000812                     
   610                           ;main.c: 368:     TRISCbits.RC3 = 1;
   611   000812  8694               	bsf	148,3,c	;volatile
   612   000814                     
   613                           ;main.c: 369:     TRISCbits.RC4 = 1;
   614   000814  8894               	bsf	148,4,c	;volatile
   615   000816  0012               	return		;funcret
   616   000818                     __end_of_system_init:
   617                           	callstack 0
   618                           
   619 ;; *************** function _lcd_init *****************
   620 ;; Defined at:
   621 ;;		line 190 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1
   635 ;;      Params:         0       0       0
   636 ;;      Locals:         0       0       0
   637 ;;      Temps:          0       0       0
   638 ;;      Totals:         0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 8
   642 ;; This function calls:
   643 ;;		_lcd_clear
   644 ;;		_lcd_command
   645 ;;		_lcd_message
   646 ;;		_lcd_move_cursor
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text2
   653   000568                     __ptext2:
   654                           	callstack 0
   655   000568                     _lcd_init:
   656                           	callstack 22
   657   000568                     
   658                           ;main.c: 197:     lcd_command(0x02, 1, 0, 0);
   659   000568  0E01               	movlw	1
   660   00056A  6E3A               	movwf	lcd_command@lt^0,c
   661   00056C  0E00               	movlw	0
   662   00056E  6E3B               	movwf	lcd_command@rw^0,c
   663   000570  0E00               	movlw	0
   664   000572  6E3C               	movwf	lcd_command@rs^0,c
   665   000574  0E02               	movlw	2
   666   000576  EC65  F002         	call	_lcd_command
   667                           
   668                           ;main.c: 198:     lcd_command(0x28, 1, 0, 0);
   669   00057A  0E01               	movlw	1
   670   00057C  6E3A               	movwf	lcd_command@lt^0,c
   671   00057E  0E00               	movlw	0
   672   000580  6E3B               	movwf	lcd_command@rw^0,c
   673   000582  0E00               	movlw	0
   674   000584  6E3C               	movwf	lcd_command@rs^0,c
   675   000586  0E28               	movlw	40
   676   000588  EC65  F002         	call	_lcd_command
   677                           
   678                           ;main.c: 200:     lcd_clear();
   679   00058C  EC8C  F003         	call	_lcd_clear	;wreg free
   680                           
   681                           ;main.c: 203:     lcd_command(0x0F, 1, 0, 0);
   682   000590  0E01               	movlw	1
   683   000592  6E3A               	movwf	lcd_command@lt^0,c
   684   000594  0E00               	movlw	0
   685   000596  6E3B               	movwf	lcd_command@rw^0,c
   686   000598  0E00               	movlw	0
   687   00059A  6E3C               	movwf	lcd_command@rs^0,c
   688   00059C  0E0F               	movlw	15
   689   00059E  EC65  F002         	call	_lcd_command
   690                           
   691                           ;main.c: 208:     lcd_move_cursor(0, 5);
   692   0005A2  0E05               	movlw	5
   693   0005A4  6E41               	movwf	lcd_move_cursor@position^0,c
   694   0005A6  0E00               	movlw	0
   695   0005A8  EC0C  F004         	call	_lcd_move_cursor
   696   0005AC                     
   697                           ;main.c: 209:     lcd_message("Senior");
   698   0005AC  0E0A               	movlw	low STR_1
   699   0005AE  6E25               	movwf	lcd_message@message^0,c
   700   0005B0  5025               	movf	lcd_message@message^0,w,c
   701   0005B2  A4D8               	btfss	status,2,c
   702   0005B4  0E02               	movlw	high __smallconst
   703   0005B6  6E26               	movwf	(lcd_message@message+1)^0,c
   704   0005B8  EC58  F003         	call	_lcd_message	;wreg free
   705   0005BC                     
   706                           ;main.c: 210:     lcd_move_cursor(1, 4);
   707   0005BC  0E04               	movlw	4
   708   0005BE  6E41               	movwf	lcd_move_cursor@position^0,c
   709   0005C0  0E01               	movlw	1
   710   0005C2  EC0C  F004         	call	_lcd_move_cursor
   711                           
   712                           ;main.c: 211:     lcd_message("Capstone");
   713   0005C6  0E01               	movlw	low STR_2
   714   0005C8  6E25               	movwf	lcd_message@message^0,c
   715   0005CA  5025               	movf	lcd_message@message^0,w,c
   716   0005CC  A4D8               	btfss	status,2,c
   717   0005CE  0E02               	movlw	high __smallconst
   718   0005D0  6E26               	movwf	(lcd_message@message+1)^0,c
   719   0005D2  EC58  F003         	call	_lcd_message	;wreg free
   720   0005D6                     
   721                           ;main.c: 213:     lcd_clear();
   722   0005D6  EC8C  F003         	call	_lcd_clear	;wreg free
   723   0005DA  0012               	return		;funcret
   724   0005DC                     __end_of_lcd_init:
   725                           	callstack 0
   726                           
   727 ;; *************** function _lcd_move_cursor *****************
   728 ;; Defined at:
   729 ;;		line 231 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  line            1    wreg     unsigned char 
   732 ;;  position        1   64[COMRAM] unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  line            1   65[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1
   744 ;;      Params:         1       0       0
   745 ;;      Locals:         1       0       0
   746 ;;      Temps:          0       0       0
   747 ;;      Totals:         2       0       0
   748 ;;Total ram usage:        2 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 7
   751 ;; This function calls:
   752 ;;		_lcd_command
   753 ;; This function is called by:
   754 ;;		_lcd_init
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text3
   759   000818                     __ptext3:
   760                           	callstack 0
   761   000818                     _lcd_move_cursor:
   762                           	callstack 22
   763                           
   764                           ;incstack = 0
   765                           ;lcd_move_cursor@line stored from wreg
   766   000818  6E42               	movwf	lcd_move_cursor@line^0,c
   767   00081A                     
   768                           ;main.c: 231: void lcd_move_cursor(char line, char position);main.c: 232: {;main.c: 233:
      +                               if(!line)
   769   00081A  5042               	movf	lcd_move_cursor@line^0,w,c
   770   00081C  A4D8               	btfss	status,2,c
   771   00081E  EF13  F004         	goto	u541
   772   000822  EF15  F004         	goto	u540
   773   000826                     u541:
   774   000826  EF21  F004         	goto	l1288
   775   00082A                     u540:
   776   00082A                     
   777                           ;main.c: 234:     {;main.c: 235:         lcd_command(0x80 | position, 1, 0, 0);
   778   00082A  0E01               	movlw	1
   779   00082C  6E3A               	movwf	lcd_command@lt^0,c
   780   00082E  0E00               	movlw	0
   781   000830  6E3B               	movwf	lcd_command@rw^0,c
   782   000832  0E00               	movlw	0
   783   000834  6E3C               	movwf	lcd_command@rs^0,c
   784   000836  5041               	movf	lcd_move_cursor@position^0,w,c
   785   000838  0980               	iorlw	128
   786   00083A  EC65  F002         	call	_lcd_command
   787                           
   788                           ;main.c: 236:     }
   789   00083E  EF2B  F004         	goto	l141
   790   000842                     l1288:
   791                           
   792                           ;main.c: 238:     {;main.c: 239:         lcd_command(0xC0 | position, 1, 0, 0);
   793   000842  0E01               	movlw	1
   794   000844  6E3A               	movwf	lcd_command@lt^0,c
   795   000846  0E00               	movlw	0
   796   000848  6E3B               	movwf	lcd_command@rw^0,c
   797   00084A  0E00               	movlw	0
   798   00084C  6E3C               	movwf	lcd_command@rs^0,c
   799   00084E  5041               	movf	lcd_move_cursor@position^0,w,c
   800   000850  09C0               	iorlw	192
   801   000852  EC65  F002         	call	_lcd_command
   802   000856                     l141:
   803   000856  0012               	return		;funcret
   804   000858                     __end_of_lcd_move_cursor:
   805                           	callstack 0
   806                           
   807 ;; *************** function _lcd_command *****************
   808 ;; Defined at:
   809 ;;		line 245 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  data            1    wreg     unsigned char 
   812 ;;  lt              1   57[COMRAM] unsigned char 
   813 ;;  rw              1   58[COMRAM] unsigned char 
   814 ;;  rs              1   59[COMRAM] unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  data            1   63[COMRAM] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1
   826 ;;      Params:         3       0       0
   827 ;;      Locals:         1       0       0
   828 ;;      Temps:          3       0       0
   829 ;;      Totals:         7       0       0
   830 ;;Total ram usage:        7 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 6
   833 ;; This function calls:
   834 ;;		_delay
   835 ;;		_i2c_data_tx
   836 ;;		_i2c_start_and_addr
   837 ;;		_i2c_stop
   838 ;; This function is called by:
   839 ;;		_lcd_init
   840 ;;		_lcd_move_cursor
   841 ;;		_lcd_backspace
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text4
   846   0004CA                     __ptext4:
   847                           	callstack 0
   848   0004CA                     _lcd_command:
   849                           	callstack 22
   850                           
   851                           ;incstack = 0
   852                           ;lcd_command@data stored from wreg
   853   0004CA  6E40               	movwf	lcd_command@data^0,c
   854   0004CC                     
   855                           ;main.c: 245: void lcd_command(char data, char lt, char rw, char rs);main.c: 246: {;main
      +                          .c: 247:     i2c_start_and_addr(0x4E);
   856   0004CC  0E4E               	movlw	78
   857   0004CE  EC4A  F004         	call	_i2c_start_and_addr
   858   0004D2                     
   859                           ;main.c: 249:     i2c_data_tx((data & 0xF0) | (lt << 3) | 4 | (rw <<1) | rs);
   860   0004D2  90D8               	bcf	status,0,c
   861   0004D4  343B               	rlcf	lcd_command@rw^0,w,c
   862   0004D6  6E3D               	movwf	??_lcd_command^0,c
   863   0004D8  C03A  F03E         	movff	lcd_command@lt,??_lcd_command+1
   864   0004DC  90D8               	bcf	status,0,c
   865   0004DE  363E               	rlcf	(??_lcd_command+1)^0,f,c
   866   0004E0  90D8               	bcf	status,0,c
   867   0004E2  363E               	rlcf	(??_lcd_command+1)^0,f,c
   868   0004E4  90D8               	bcf	status,0,c
   869   0004E6  363E               	rlcf	(??_lcd_command+1)^0,f,c
   870   0004E8  5040               	movf	lcd_command@data^0,w,c
   871   0004EA  0BF0               	andlw	240
   872   0004EC  103E               	iorwf	(??_lcd_command+1)^0,w,c
   873   0004EE  103D               	iorwf	??_lcd_command^0,w,c
   874   0004F0  103C               	iorwf	lcd_command@rs^0,w,c
   875   0004F2  0904               	iorlw	4
   876   0004F4  EC82  F004         	call	_i2c_data_tx
   877   0004F8                     
   878                           ;main.c: 250:     delay(1);
   879   0004F8  0E01               	movlw	1
   880   0004FA  6E2E               	movwf	delay@milliseconds^0,c
   881   0004FC  0E00               	movlw	0
   882   0004FE  6E2F               	movwf	(delay@milliseconds+1)^0,c
   883   000500  0E00               	movlw	0
   884   000502  6E30               	movwf	(delay@milliseconds+2)^0,c
   885   000504  0E00               	movlw	0
   886   000506  6E31               	movwf	(delay@milliseconds+3)^0,c
   887   000508  EC0A  F001         	call	_delay	;wreg free
   888   00050C                     
   889                           ;main.c: 251:     i2c_data_tx(lt<<3);
   890   00050C  383A               	swapf	lcd_command@lt^0,w,c
   891   00050E  42E8               	rrncf	wreg,f,c
   892   000510  0BF8               	andlw	248
   893   000512  EC82  F004         	call	_i2c_data_tx
   894   000516                     
   895                           ;main.c: 254:     i2c_data_tx(((data & 0x0F) <<4) | (lt << 3) | 4 | (rw <<1) | rs);
   896   000516  90D8               	bcf	status,0,c
   897   000518  343B               	rlcf	lcd_command@rw^0,w,c
   898   00051A  6E3D               	movwf	??_lcd_command^0,c
   899   00051C  C03A  F03E         	movff	lcd_command@lt,??_lcd_command+1
   900   000520  90D8               	bcf	status,0,c
   901   000522  363E               	rlcf	(??_lcd_command+1)^0,f,c
   902   000524  90D8               	bcf	status,0,c
   903   000526  363E               	rlcf	(??_lcd_command+1)^0,f,c
   904   000528  90D8               	bcf	status,0,c
   905   00052A  363E               	rlcf	(??_lcd_command+1)^0,f,c
   906   00052C  C040  F03F         	movff	lcd_command@data,??_lcd_command+2
   907   000530  0E0F               	movlw	15
   908   000532  163F               	andwf	(??_lcd_command+2)^0,f,c
   909   000534  383F               	swapf	(??_lcd_command+2)^0,w,c
   910   000536  0BF0               	andlw	240
   911   000538  103E               	iorwf	(??_lcd_command+1)^0,w,c
   912   00053A  103D               	iorwf	??_lcd_command^0,w,c
   913   00053C  103C               	iorwf	lcd_command@rs^0,w,c
   914   00053E  0904               	iorlw	4
   915   000540  EC82  F004         	call	_i2c_data_tx
   916   000544                     
   917                           ;main.c: 255:     delay(1);
   918   000544  0E01               	movlw	1
   919   000546  6E2E               	movwf	delay@milliseconds^0,c
   920   000548  0E00               	movlw	0
   921   00054A  6E2F               	movwf	(delay@milliseconds+1)^0,c
   922   00054C  0E00               	movlw	0
   923   00054E  6E30               	movwf	(delay@milliseconds+2)^0,c
   924   000550  0E00               	movlw	0
   925   000552  6E31               	movwf	(delay@milliseconds+3)^0,c
   926   000554  EC0A  F001         	call	_delay	;wreg free
   927   000558                     
   928                           ;main.c: 256:     i2c_data_tx(lt<<3);
   929   000558  383A               	swapf	lcd_command@lt^0,w,c
   930   00055A  42E8               	rrncf	wreg,f,c
   931   00055C  0BF8               	andlw	248
   932   00055E  EC82  F004         	call	_i2c_data_tx
   933   000562                     
   934                           ;main.c: 258:     i2c_stop();
   935   000562  ECB5  F004         	call	_i2c_stop	;wreg free
   936   000566  0012               	return		;funcret
   937   000568                     __end_of_lcd_command:
   938                           	callstack 0
   939                           
   940 ;; *************** function _lcd_message *****************
   941 ;; Defined at:
   942 ;;		line 261 in file "main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  message         2   36[COMRAM] PTR unsigned char 
   945 ;;		 -> STR_3(2), STR_2(9), STR_1(7), Receiver_buffer(10), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1
   957 ;;      Params:         2       0       0
   958 ;;      Locals:         0       0       0
   959 ;;      Temps:          0       0       0
   960 ;;      Totals:         2       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 6
   964 ;; This function calls:
   965 ;;		_i2c_start_and_addr
   966 ;;		_i2c_stop
   967 ;;		_lcd_char
   968 ;; This function is called by:
   969 ;;		_main
   970 ;;		_lcd_init
   971 ;;		_lcd_backspace
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text5
   976   0006B0                     __ptext5:
   977                           	callstack 0
   978   0006B0                     _lcd_message:
   979                           	callstack 24
   980   0006B0                     
   981                           ;main.c: 261: void lcd_message(char* message);main.c: 262: {;main.c: 263:     i2c_start_
      +                          and_addr(0x4E);
   982   0006B0  0E4E               	movlw	78
   983   0006B2  EC4A  F004         	call	_i2c_start_and_addr
   984                           
   985                           ;main.c: 264:     while(*message != 0)
   986   0006B6  EF71  F003         	goto	l1266
   987   0006BA                     l1262:
   988                           
   989                           ;main.c: 265:     {;main.c: 266:         lcd_char(*message);
   990   0006BA  C025  FFF6         	movff	lcd_message@message,tblptrl
   991   0006BE  C026  FFF7         	movff	lcd_message@message+1,tblptrh
   992   0006C2  6AF8               	clrf	tblptru,c
   993   0006C4  0E01               	movlw	(high __ramtop+-1)
   994   0006C6  64F7               	cpfsgt	tblptrh,c
   995   0006C8  D003               	bra	u517
   996   0006CA  0008               	tblrd		*
   997   0006CC  50F5               	movf	tablat,w,c
   998   0006CE  D005               	bra	u510
   999   0006D0                     u517:
  1000   0006D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1001   0006D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1002   0006D8  50EF               	movf	indf0,w,c
  1003   0006DA                     u510:
  1004   0006DA  EC2C  F004         	call	_lcd_char
  1005   0006DE                     
  1006                           ;main.c: 267:         message++;
  1007   0006DE  4A25               	infsnz	lcd_message@message^0,f,c
  1008   0006E0  2A26               	incf	(lcd_message@message+1)^0,f,c
  1009   0006E2                     l1266:
  1010                           
  1011                           ;main.c: 264:     while(*message != 0)
  1012   0006E2  C025  FFF6         	movff	lcd_message@message,tblptrl
  1013   0006E6  C026  FFF7         	movff	lcd_message@message+1,tblptrh
  1014   0006EA  6AF8               	clrf	tblptru,c
  1015   0006EC  0E01               	movlw	(high __ramtop+-1)
  1016   0006EE  64F7               	cpfsgt	tblptrh,c
  1017   0006F0  D003               	bra	u527
  1018   0006F2  0008               	tblrd		*
  1019   0006F4  50F5               	movf	tablat,w,c
  1020   0006F6  D005               	bra	u520
  1021   0006F8                     u527:
  1022   0006F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1023   0006FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1024   000700  50EF               	movf	indf0,w,c
  1025   000702                     u520:
  1026   000702  0900               	iorlw	0
  1027   000704  A4D8               	btfss	status,2,c
  1028   000706  EF87  F003         	goto	u531
  1029   00070A  EF89  F003         	goto	u530
  1030   00070E                     u531:
  1031   00070E  EF5D  F003         	goto	l1262
  1032   000712                     u530:
  1033   000712                     
  1034                           ;main.c: 269:     i2c_stop();
  1035   000712  ECB5  F004         	call	_i2c_stop	;wreg free
  1036   000716  0012               	return		;funcret
  1037   000718                     __end_of_lcd_message:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _lcd_char *****************
  1041 ;; Defined at:
  1042 ;;		line 272 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  letter          1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  letter          1   35[COMRAM] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1
  1056 ;;      Params:         0       0       0
  1057 ;;      Locals:         1       0       0
  1058 ;;      Temps:          1       0       0
  1059 ;;      Totals:         2       0       0
  1060 ;;Total ram usage:        2 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 5
  1063 ;; This function calls:
  1064 ;;		_i2c_data_tx
  1065 ;; This function is called by:
  1066 ;;		_lcd_message
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text6
  1071   000858                     __ptext6:
  1072                           	callstack 0
  1073   000858                     _lcd_char:
  1074                           	callstack 24
  1075                           
  1076                           ;incstack = 0
  1077                           ;lcd_char@letter stored from wreg
  1078   000858  6E24               	movwf	lcd_char@letter^0,c
  1079   00085A                     
  1080                           ;main.c: 272: void lcd_char(char letter);main.c: 273: {;main.c: 274:     i2c_data_tx((le
      +                          tter & 0xF0) | 0b1101);
  1081   00085A  5024               	movf	lcd_char@letter^0,w,c
  1082   00085C  0BF0               	andlw	240
  1083   00085E  090D               	iorlw	13
  1084   000860  EC82  F004         	call	_i2c_data_tx
  1085                           
  1086                           ;main.c: 275:     i2c_data_tx((letter & 0xF0) | 8);
  1087   000864  5024               	movf	lcd_char@letter^0,w,c
  1088   000866  0BF0               	andlw	240
  1089   000868  0908               	iorlw	8
  1090   00086A  EC82  F004         	call	_i2c_data_tx
  1091                           
  1092                           ;main.c: 279:     i2c_data_tx(((letter & 0x0F) << 4) | 0b1101);
  1093   00086E  C024  F023         	movff	lcd_char@letter,??_lcd_char
  1094   000872  0E0F               	movlw	15
  1095   000874  1623               	andwf	??_lcd_char^0,f,c
  1096   000876  3823               	swapf	??_lcd_char^0,w,c
  1097   000878  0BF0               	andlw	240
  1098   00087A  090D               	iorlw	13
  1099   00087C  EC82  F004         	call	_i2c_data_tx
  1100                           
  1101                           ;main.c: 280:     i2c_data_tx(((letter & 0x0F) << 4) | 8);
  1102   000880  C024  F023         	movff	lcd_char@letter,??_lcd_char
  1103   000884  0E0F               	movlw	15
  1104   000886  1623               	andwf	??_lcd_char^0,f,c
  1105   000888  3823               	swapf	??_lcd_char^0,w,c
  1106   00088A  0BF0               	andlw	240
  1107   00088C  0908               	iorlw	8
  1108   00088E  EC82  F004         	call	_i2c_data_tx
  1109   000892  0012               	return		;funcret
  1110   000894                     __end_of_lcd_char:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _lcd_clear *****************
  1114 ;; Defined at:
  1115 ;;		line 284 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1
  1129 ;;      Params:         0       0       0
  1130 ;;      Locals:         0       0       0
  1131 ;;      Temps:          0       0       0
  1132 ;;      Totals:         0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 6
  1136 ;; This function calls:
  1137 ;;		_delay
  1138 ;;		_i2c_data_tx
  1139 ;;		_i2c_start_and_addr
  1140 ;;		_i2c_stop
  1141 ;; This function is called by:
  1142 ;;		_lcd_init
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text7
  1147   000718                     __ptext7:
  1148                           	callstack 0
  1149   000718                     _lcd_clear:
  1150                           	callstack 23
  1151   000718                     
  1152                           ;main.c: 286:     i2c_start_and_addr(0x4E);
  1153   000718  0E4E               	movlw	78
  1154   00071A  EC4A  F004         	call	_i2c_start_and_addr
  1155                           
  1156                           ;main.c: 289:     i2c_data_tx(0b00001100);
  1157   00071E  0E0C               	movlw	12
  1158   000720  EC82  F004         	call	_i2c_data_tx
  1159   000724                     
  1160                           ;main.c: 290:     delay(1);
  1161   000724  0E01               	movlw	1
  1162   000726  6E2E               	movwf	delay@milliseconds^0,c
  1163   000728  0E00               	movlw	0
  1164   00072A  6E2F               	movwf	(delay@milliseconds+1)^0,c
  1165   00072C  0E00               	movlw	0
  1166   00072E  6E30               	movwf	(delay@milliseconds+2)^0,c
  1167   000730  0E00               	movlw	0
  1168   000732  6E31               	movwf	(delay@milliseconds+3)^0,c
  1169   000734  EC0A  F001         	call	_delay	;wreg free
  1170   000738                     
  1171                           ;main.c: 291:     i2c_data_tx(0b00001000);
  1172   000738  0E08               	movlw	8
  1173   00073A  EC82  F004         	call	_i2c_data_tx
  1174   00073E                     
  1175                           ;main.c: 294:     i2c_data_tx(0b00011100);
  1176   00073E  0E1C               	movlw	28
  1177   000740  EC82  F004         	call	_i2c_data_tx
  1178   000744                     
  1179                           ;main.c: 295:     delay(1);
  1180   000744  0E01               	movlw	1
  1181   000746  6E2E               	movwf	delay@milliseconds^0,c
  1182   000748  0E00               	movlw	0
  1183   00074A  6E2F               	movwf	(delay@milliseconds+1)^0,c
  1184   00074C  0E00               	movlw	0
  1185   00074E  6E30               	movwf	(delay@milliseconds+2)^0,c
  1186   000750  0E00               	movlw	0
  1187   000752  6E31               	movwf	(delay@milliseconds+3)^0,c
  1188   000754  EC0A  F001         	call	_delay	;wreg free
  1189                           
  1190                           ;main.c: 296:     i2c_data_tx(0b00011000);
  1191   000758  0E18               	movlw	24
  1192   00075A  EC82  F004         	call	_i2c_data_tx
  1193   00075E                     
  1194                           ;main.c: 297:     delay(1);
  1195   00075E  0E01               	movlw	1
  1196   000760  6E2E               	movwf	delay@milliseconds^0,c
  1197   000762  0E00               	movlw	0
  1198   000764  6E2F               	movwf	(delay@milliseconds+1)^0,c
  1199   000766  0E00               	movlw	0
  1200   000768  6E30               	movwf	(delay@milliseconds+2)^0,c
  1201   00076A  0E00               	movlw	0
  1202   00076C  6E31               	movwf	(delay@milliseconds+3)^0,c
  1203   00076E  EC0A  F001         	call	_delay	;wreg free
  1204   000772                     
  1205                           ;main.c: 299:     i2c_stop();
  1206   000772  ECB5  F004         	call	_i2c_stop	;wreg free
  1207   000776  0012               	return		;funcret
  1208   000778                     __end_of_lcd_clear:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _i2c_stop *****************
  1212 ;; Defined at:
  1213 ;;		line 313 in file "main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		None
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1
  1227 ;;      Params:         0       0       0
  1228 ;;      Locals:         0       0       0
  1229 ;;      Temps:          0       0       0
  1230 ;;      Totals:         0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 4
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_lcd_command
  1238 ;;		_lcd_message
  1239 ;;		_lcd_clear
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text8
  1244   00096A                     __ptext8:
  1245                           	callstack 0
  1246   00096A                     _i2c_stop:
  1247                           	callstack 25
  1248   00096A                     
  1249                           ;main.c: 316:     SSPCON2bits.PEN = 1;
  1250   00096A  84C5               	bsf	197,2,c	;volatile
  1251   00096C                     l167:
  1252   00096C  A69E               	btfss	158,3,c	;volatile
  1253   00096E  EFBB  F004         	goto	u111
  1254   000972  EFBD  F004         	goto	u110
  1255   000976                     u111:
  1256   000976  EFB6  F004         	goto	l167
  1257   00097A                     u110:
  1258   00097A                     
  1259                           ;main.c: 318:     PIR1bits.SSPIF = 0;
  1260   00097A  969E               	bcf	158,3,c	;volatile
  1261   00097C  0012               	return		;funcret
  1262   00097E                     __end_of_i2c_stop:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _i2c_start_and_addr *****************
  1266 ;; Defined at:
  1267 ;;		line 321 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  address         1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  address         1   33[COMRAM] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1
  1281 ;;      Params:         0       0       0
  1282 ;;      Locals:         1       0       0
  1283 ;;      Temps:          0       0       0
  1284 ;;      Totals:         1       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 4
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_lcd_command
  1292 ;;		_lcd_message
  1293 ;;		_lcd_clear
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text9
  1298   000894                     __ptext9:
  1299                           	callstack 0
  1300   000894                     _i2c_start_and_addr:
  1301                           	callstack 25
  1302                           
  1303                           ;incstack = 0
  1304                           ;i2c_start_and_addr@address stored from wreg
  1305   000894  6E22               	movwf	i2c_start_and_addr@address^0,c
  1306   000896                     
  1307                           ;main.c: 321: void i2c_start_and_addr(unsigned char address);main.c: 322: {;main.c: 324:
      +                               SSPCON2bits.SEN = 1;
  1308   000896  80C5               	bsf	197,0,c	;volatile
  1309   000898                     l173:
  1310   000898  A69E               	btfss	158,3,c	;volatile
  1311   00089A  EF51  F004         	goto	u61
  1312   00089E  EF53  F004         	goto	u60
  1313   0008A2                     u61:
  1314   0008A2  EF4C  F004         	goto	l173
  1315   0008A6                     u60:
  1316   0008A6                     
  1317                           ;main.c: 326:     PIR1bits.SSPIF = 0;
  1318   0008A6  969E               	bcf	158,3,c	;volatile
  1319   0008A8                     l896:
  1320                           
  1321                           ;main.c: 328:     {;main.c: 329:         SSPBUF = address;
  1322   0008A8  C022  FFC9         	movff	i2c_start_and_addr@address,4041	;volatile
  1323   0008AC                     l177:
  1324   0008AC  A69E               	btfss	158,3,c	;volatile
  1325   0008AE  EF5B  F004         	goto	u71
  1326   0008B2  EF5D  F004         	goto	u70
  1327   0008B6                     u71:
  1328   0008B6  EF56  F004         	goto	l177
  1329   0008BA                     u70:
  1330   0008BA                     
  1331                           ;main.c: 331:         PIR1bits.SSPIF = 0;
  1332   0008BA  969E               	bcf	158,3,c	;volatile
  1333                           
  1334                           ;main.c: 332:     }while(SSPCON2bits.ACKSTAT);
  1335   0008BC  BCC5               	btfsc	197,6,c	;volatile
  1336   0008BE  EF63  F004         	goto	u81
  1337   0008C2  EF65  F004         	goto	u80
  1338   0008C6                     u81:
  1339   0008C6  EF54  F004         	goto	l896
  1340   0008CA                     u80:
  1341   0008CA  0012               	return		;funcret
  1342   0008CC                     __end_of_i2c_start_and_addr:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _i2c_data_tx *****************
  1346 ;; Defined at:
  1347 ;;		line 302 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  data            1    wreg     unsigned char 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  data            1   33[COMRAM] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1
  1361 ;;      Params:         0       0       0
  1362 ;;      Locals:         1       0       0
  1363 ;;      Temps:          0       0       0
  1364 ;;      Totals:         1       0       0
  1365 ;;Total ram usage:        1 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 4
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_lcd_command
  1372 ;;		_lcd_char
  1373 ;;		_lcd_clear
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text10
  1378   000904                     __ptext10:
  1379                           	callstack 0
  1380   000904                     _i2c_data_tx:
  1381                           	callstack 24
  1382                           
  1383                           ;incstack = 0
  1384                           ;i2c_data_tx@data stored from wreg
  1385   000904  6E22               	movwf	i2c_data_tx@data^0,c
  1386   000906                     l159:
  1387   000906                     
  1388                           ;main.c: 305:     {;main.c: 306:         SSPBUF = data;
  1389   000906  C022  FFC9         	movff	i2c_data_tx@data,4041	;volatile
  1390   00090A                     l160:
  1391   00090A  A69E               	btfss	158,3,c	;volatile
  1392   00090C  EF8A  F004         	goto	u91
  1393   000910  EF8C  F004         	goto	u90
  1394   000914                     u91:
  1395   000914  EF85  F004         	goto	l160
  1396   000918                     u90:
  1397   000918                     
  1398                           ;main.c: 308:         PIR1bits.SSPIF = 0;
  1399   000918  969E               	bcf	158,3,c	;volatile
  1400                           
  1401                           ;main.c: 310:     }while(SSPCON2bits.ACKSTAT);
  1402   00091A  BCC5               	btfsc	197,6,c	;volatile
  1403   00091C  EF92  F004         	goto	u101
  1404   000920  EF94  F004         	goto	u100
  1405   000924                     u101:
  1406   000924  EF83  F004         	goto	l159
  1407   000928                     u100:
  1408   000928  0012               	return		;funcret
  1409   00092A                     __end_of_i2c_data_tx:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _delay *****************
  1413 ;; Defined at:
  1414 ;;		line 166 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  milliseconds    4   45[COMRAM] unsigned long 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  timer_value     8   49[COMRAM] unsigned long long 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1
  1428 ;;      Params:         4       0       0
  1429 ;;      Locals:         8       0       0
  1430 ;;      Temps:          0       0       0
  1431 ;;      Totals:        12       0       0
  1432 ;;Total ram usage:       12 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 5
  1435 ;; This function calls:
  1436 ;;		___lmul
  1437 ;; This function is called by:
  1438 ;;		_lcd_command
  1439 ;;		_lcd_clear
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text11
  1444   000214                     __ptext11:
  1445                           	callstack 0
  1446   000214                     _delay:
  1447                           	callstack 22
  1448   000214                     
  1449                           ;main.c: 166: void delay(unsigned long milliseconds);main.c: 167: {;main.c: 168:     T1C
      +                          ON = 0b10110000;
  1450   000214  0EB0               	movlw	176
  1451   000216  6ECD               	movwf	205,c	;volatile
  1452   000218                     
  1453                           ;main.c: 169:     PIE1bits.TMR1IE = 0;
  1454   000218  909D               	bcf	157,0,c	;volatile
  1455   00021A                     
  1456                           ;main.c: 170:     unsigned long long timer_value = (milliseconds) * 1000 ;
  1457   00021A  C02E  F022         	movff	delay@milliseconds,___lmul@multiplier
  1458   00021E  C02F  F023         	movff	delay@milliseconds+1,___lmul@multiplier+1
  1459   000222  C030  F024         	movff	delay@milliseconds+2,___lmul@multiplier+2
  1460   000226  C031  F025         	movff	delay@milliseconds+3,___lmul@multiplier+3
  1461   00022A  0EE8               	movlw	232
  1462   00022C  6E26               	movwf	___lmul@multiplicand^0,c
  1463   00022E  0E03               	movlw	3
  1464   000230  6E27               	movwf	(___lmul@multiplicand+1)^0,c
  1465   000232  0E00               	movlw	0
  1466   000234  6E28               	movwf	(___lmul@multiplicand+2)^0,c
  1467   000236  0E00               	movlw	0
  1468   000238  6E29               	movwf	(___lmul@multiplicand+3)^0,c
  1469   00023A  ECEE  F002         	call	___lmul	;wreg free
  1470   00023E  5022               	movf	?___lmul^0,w,c
  1471   000240  6E32               	movwf	delay@timer_value^0,c
  1472   000242  5023               	movf	(?___lmul+1)^0,w,c
  1473   000244  6E33               	movwf	(delay@timer_value+1)^0,c
  1474   000246  5024               	movf	(?___lmul+2)^0,w,c
  1475   000248  6E34               	movwf	(delay@timer_value+2)^0,c
  1476   00024A  5025               	movf	(?___lmul+3)^0,w,c
  1477   00024C  6E35               	movwf	(delay@timer_value+3)^0,c
  1478   00024E  6A36               	clrf	(delay@timer_value+4)^0,c
  1479   000250  6A37               	clrf	(delay@timer_value+5)^0,c
  1480   000252  6A38               	clrf	(delay@timer_value+6)^0,c
  1481   000254  6A39               	clrf	(delay@timer_value+7)^0,c
  1482                           
  1483                           ;main.c: 171:     while(timer_value > 65535)
  1484   000256  EF4B  F001         	goto	l1224
  1485   00025A                     l1216:
  1486                           
  1487                           ;main.c: 172:     {;main.c: 173:         timer_value -= 65535;
  1488   00025A  0EFF               	movlw	255
  1489   00025C  5E32               	subwf	delay@timer_value^0,f,c
  1490   00025E  0EFF               	movlw	255
  1491   000260  5A33               	subwfb	(delay@timer_value+1)^0,f,c
  1492   000262  0E00               	movlw	0
  1493   000264  5A34               	subwfb	(delay@timer_value+2)^0,f,c
  1494   000266  0E00               	movlw	0
  1495   000268  5A35               	subwfb	(delay@timer_value+3)^0,f,c
  1496   00026A  0E00               	movlw	0
  1497   00026C  5A36               	subwfb	(delay@timer_value+4)^0,f,c
  1498   00026E  0E00               	movlw	0
  1499   000270  5A37               	subwfb	(delay@timer_value+5)^0,f,c
  1500   000272  0E00               	movlw	0
  1501   000274  5A38               	subwfb	(delay@timer_value+6)^0,f,c
  1502   000276  0E00               	movlw	0
  1503   000278  5A39               	subwfb	(delay@timer_value+7)^0,f,c
  1504   00027A                     
  1505                           ;main.c: 174:         TMR1H = 0;
  1506   00027A  0E00               	movlw	0
  1507   00027C  6ECF               	movwf	207,c	;volatile
  1508   00027E                     
  1509                           ;main.c: 175:         TMR1L = 0;
  1510   00027E  0E00               	movlw	0
  1511   000280  6ECE               	movwf	206,c	;volatile
  1512   000282                     
  1513                           ;main.c: 176:         T1CONbits.TMR1ON = 1;
  1514   000282  80CD               	bsf	205,0,c	;volatile
  1515   000284                     l123:
  1516   000284  A09E               	btfss	158,0,c	;volatile
  1517   000286  EF47  F001         	goto	u461
  1518   00028A  EF49  F001         	goto	u460
  1519   00028E                     u461:
  1520   00028E  EF42  F001         	goto	l123
  1521   000292                     u460:
  1522   000292                     
  1523                           ;main.c: 178:         T1CONbits.TMR1ON = 0;
  1524   000292  90CD               	bcf	205,0,c	;volatile
  1525                           
  1526                           ;main.c: 179:         PIR1bits.TMR1IF = 0;
  1527   000294  909E               	bcf	158,0,c	;volatile
  1528   000296                     l1224:
  1529                           
  1530                           ;main.c: 171:     while(timer_value > 65535)
  1531   000296  5039               	movf	(delay@timer_value+7)^0,w,c
  1532   000298  1038               	iorwf	(delay@timer_value+6)^0,w,c
  1533   00029A  1037               	iorwf	(delay@timer_value+5)^0,w,c
  1534   00029C  1036               	iorwf	(delay@timer_value+4)^0,w,c
  1535   00029E  1035               	iorwf	(delay@timer_value+3)^0,w,c
  1536   0002A0  E106               	bnz	u471
  1537   0002A2  0434               	decf	(delay@timer_value+2)^0,w,c
  1538   0002A4  B0D8               	btfsc	status,0,c
  1539   0002A6  EF57  F001         	goto	u471
  1540   0002AA  EF59  F001         	goto	u470
  1541   0002AE                     u471:
  1542   0002AE  EF2D  F001         	goto	l1216
  1543   0002B2                     u470:
  1544   0002B2                     
  1545                           ;main.c: 181:     timer_value = 65535 - timer_value + 1;
  1546   0002B2  5032               	movf	delay@timer_value^0,w,c
  1547   0002B4  0800               	sublw	0
  1548   0002B6  6E32               	movwf	delay@timer_value^0,c
  1549   0002B8  0E00               	movlw	0
  1550   0002BA  5433               	subfwb	(delay@timer_value+1)^0,w,c
  1551   0002BC  6E33               	movwf	(delay@timer_value+1)^0,c
  1552   0002BE  0E01               	movlw	1
  1553   0002C0  5434               	subfwb	(delay@timer_value+2)^0,w,c
  1554   0002C2  6E34               	movwf	(delay@timer_value+2)^0,c
  1555   0002C4  0E00               	movlw	0
  1556   0002C6  5435               	subfwb	(delay@timer_value+3)^0,w,c
  1557   0002C8  6E35               	movwf	(delay@timer_value+3)^0,c
  1558   0002CA  0E00               	movlw	0
  1559   0002CC  5436               	subfwb	(delay@timer_value+4)^0,w,c
  1560   0002CE  6E36               	movwf	(delay@timer_value+4)^0,c
  1561   0002D0  0E00               	movlw	0
  1562   0002D2  5437               	subfwb	(delay@timer_value+5)^0,w,c
  1563   0002D4  6E37               	movwf	(delay@timer_value+5)^0,c
  1564   0002D6  0E00               	movlw	0
  1565   0002D8  5438               	subfwb	(delay@timer_value+6)^0,w,c
  1566   0002DA  6E38               	movwf	(delay@timer_value+6)^0,c
  1567   0002DC  0E00               	movlw	0
  1568   0002DE  5439               	subfwb	(delay@timer_value+7)^0,w,c
  1569   0002E0  6E39               	movwf	(delay@timer_value+7)^0,c
  1570   0002E2                     
  1571                           ;main.c: 182:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  1572   0002E2  0E00               	movlw	0
  1573   0002E4  6ECF               	movwf	207,c	;volatile
  1574   0002E6                     
  1575                           ;main.c: 183:     TMR1L = (unsigned char)(0xFF & timer_value);
  1576   0002E6  C032  FFCE         	movff	delay@timer_value,4046	;volatile
  1577   0002EA                     
  1578                           ;main.c: 184:     T1CONbits.TMR1ON = 1;
  1579   0002EA  80CD               	bsf	205,0,c	;volatile
  1580   0002EC                     l127:
  1581   0002EC  A09E               	btfss	158,0,c	;volatile
  1582   0002EE  EF7B  F001         	goto	u481
  1583   0002F2  EF7D  F001         	goto	u480
  1584   0002F6                     u481:
  1585   0002F6  EF76  F001         	goto	l127
  1586   0002FA                     u480:
  1587   0002FA                     
  1588                           ;main.c: 186:     T1CONbits.TMR1ON = 0;
  1589   0002FA  90CD               	bcf	205,0,c	;volatile
  1590                           
  1591                           ;main.c: 187:     PIR1bits.TMR1IF = 0;
  1592   0002FC  909E               	bcf	158,0,c	;volatile
  1593   0002FE  0012               	return		;funcret
  1594   000300                     __end_of_delay:
  1595                           	callstack 0
  1596                           
  1597 ;; *************** function ___lmul *****************
  1598 ;; Defined at:
  1599 ;;		line 15 in file "F:\Program Files\MicroChip\XC8\v2.45\pic\sources\c99\common\Umul32.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  multiplier      4   33[COMRAM] unsigned long 
  1602 ;;  multiplicand    4   37[COMRAM] unsigned long 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  product         4   41[COMRAM] unsigned long 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  4   33[COMRAM] unsigned long 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1
  1614 ;;      Params:         8       0       0
  1615 ;;      Locals:         4       0       0
  1616 ;;      Temps:          0       0       0
  1617 ;;      Totals:        12       0       0
  1618 ;;Total ram usage:       12 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 4
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_delay
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text12
  1629   0005DC                     __ptext12:
  1630                           	callstack 0
  1631   0005DC                     ___lmul:
  1632                           	callstack 22
  1633   0005DC  0E00               	movlw	0
  1634   0005DE  6E2A               	movwf	___lmul@product^0,c
  1635   0005E0  0E00               	movlw	0
  1636   0005E2  6E2B               	movwf	(___lmul@product+1)^0,c
  1637   0005E4  0E00               	movlw	0
  1638   0005E6  6E2C               	movwf	(___lmul@product+2)^0,c
  1639   0005E8  0E00               	movlw	0
  1640   0005EA  6E2D               	movwf	(___lmul@product+3)^0,c
  1641   0005EC                     l1202:
  1642   0005EC  A022               	btfss	___lmul@multiplier^0,0,c
  1643   0005EE  EFFB  F002         	goto	u441
  1644   0005F2  EFFD  F002         	goto	u440
  1645   0005F6                     u441:
  1646   0005F6  EF05  F003         	goto	l1206
  1647   0005FA                     u440:
  1648   0005FA  5026               	movf	___lmul@multiplicand^0,w,c
  1649   0005FC  262A               	addwf	___lmul@product^0,f,c
  1650   0005FE  5027               	movf	(___lmul@multiplicand+1)^0,w,c
  1651   000600  222B               	addwfc	(___lmul@product+1)^0,f,c
  1652   000602  5028               	movf	(___lmul@multiplicand+2)^0,w,c
  1653   000604  222C               	addwfc	(___lmul@product+2)^0,f,c
  1654   000606  5029               	movf	(___lmul@multiplicand+3)^0,w,c
  1655   000608  222D               	addwfc	(___lmul@product+3)^0,f,c
  1656   00060A                     l1206:
  1657   00060A  90D8               	bcf	status,0,c
  1658   00060C  3626               	rlcf	___lmul@multiplicand^0,f,c
  1659   00060E  3627               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1660   000610  3628               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1661   000612  3629               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1662   000614  90D8               	bcf	status,0,c
  1663   000616  3225               	rrcf	(___lmul@multiplier+3)^0,f,c
  1664   000618  3224               	rrcf	(___lmul@multiplier+2)^0,f,c
  1665   00061A  3223               	rrcf	(___lmul@multiplier+1)^0,f,c
  1666   00061C  3222               	rrcf	___lmul@multiplier^0,f,c
  1667   00061E  5022               	movf	___lmul@multiplier^0,w,c
  1668   000620  1023               	iorwf	(___lmul@multiplier+1)^0,w,c
  1669   000622  1024               	iorwf	(___lmul@multiplier+2)^0,w,c
  1670   000624  1025               	iorwf	(___lmul@multiplier+3)^0,w,c
  1671   000626  A4D8               	btfss	status,2,c
  1672   000628  EF18  F003         	goto	u451
  1673   00062C  EF1A  F003         	goto	u450
  1674   000630                     u451:
  1675   000630  EFF6  F002         	goto	l1202
  1676   000634                     u450:
  1677   000634  C02A  F022         	movff	___lmul@product,?___lmul
  1678   000638  C02B  F023         	movff	___lmul@product+1,?___lmul+1
  1679   00063C  C02C  F024         	movff	___lmul@product+2,?___lmul+2
  1680   000640  C02D  F025         	movff	___lmul@product+3,?___lmul+3
  1681   000644  0012               	return		;funcret
  1682   000646                     __end_of___lmul:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _ISR *****************
  1686 ;; Defined at:
  1687 ;;		line 83 in file "main.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  i               2   27[COMRAM] int 
  1692 ;;  i               2   31[COMRAM] int 
  1693 ;;  i               2   29[COMRAM] int 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1
  1703 ;;      Params:         0       0       0
  1704 ;;      Locals:         6       0       0
  1705 ;;      Temps:          3       0       0
  1706 ;;      Totals:         9       0       0
  1707 ;;Total ram usage:        9 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 3
  1710 ;; This function calls:
  1711 ;;		i2_lcd_clear
  1712 ;; This function is called by:
  1713 ;;		Interrupt level 2
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	intcode
  1718   000008                     __pintcode:
  1719                           	callstack 0
  1720   000008                     _ISR:
  1721                           	callstack 22
  1722                           
  1723                           ;incstack = 0
  1724   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1725   00000A  CFD9 F01A          	movff	fsr2l,??_ISR+1
  1726   00000E  CFDA F01B          	movff	fsr2h,??_ISR+2
  1727   000012                     
  1728                           ;main.c: 85:     if(INTCONbits.INT0IF == 1)
  1729   000012  A2F2               	btfss	242,1,c	;volatile
  1730   000014  EF0E  F000         	goto	i2u68_41
  1731   000018  EF10  F000         	goto	i2u68_40
  1732   00001C                     i2u68_41:
  1733   00001C  EFA5  F000         	goto	i2l102
  1734   000020                     i2u68_40:
  1735   000020                     
  1736                           ;main.c: 86:     {;main.c: 93:         current_character = (PORTB & 0x1F) >> 1;
  1737   000020  90D8               	bcf	status,0,c
  1738   000022  3081               	rrcf	129,w,c	;volatile
  1739   000024  0B0F               	andlw	15
  1740   000026  6E4B               	movwf	_current_character^0,c
  1741   000028                     
  1742                           ;main.c: 95:         INTCONbits.INT0IF = 0;
  1743   000028  92F2               	bcf	242,1,c	;volatile
  1744                           
  1745                           ;main.c: 96:         while(!INTCONbits.INT0IF)
  1746   00002A  EF58  F000         	goto	i2l103
  1747   00002E                     i2l104:
  1748                           
  1749                           ;main.c: 97:         {;main.c: 98:          if(INTCONbits.TMR0IF == 1)
  1750   00002E  A4F2               	btfss	242,2,c	;volatile
  1751   000030  EF1C  F000         	goto	i2u69_41
  1752   000034  EF1E  F000         	goto	i2u69_40
  1753   000038                     i2u69_41:
  1754   000038  EF58  F000         	goto	i2l103
  1755   00003C                     i2u69_40:
  1756   00003C                     
  1757                           ;main.c: 99:          {;main.c: 100:              INTCONbits.TMR0IF = 0;
  1758   00003C  94F2               	bcf	242,2,c	;volatile
  1759   00003E                     
  1760                           ;main.c: 101:             Time_out++;
  1761   00003E  2A46               	incf	_Time_out^0,f,c
  1762   000040                     
  1763                           ;main.c: 102:             if(Time_out == 5 && !new_input)
  1764   000040  0E05               	movlw	5
  1765   000042  1846               	xorwf	_Time_out^0,w,c
  1766   000044  A4D8               	btfss	status,2,c
  1767   000046  EF27  F000         	goto	i2u70_41
  1768   00004A  EF29  F000         	goto	i2u70_40
  1769   00004E                     i2u70_41:
  1770   00004E  EF58  F000         	goto	i2l103
  1771   000052                     i2u70_40:
  1772   000052  5049               	movf	_new_input^0,w,c
  1773   000054  A4D8               	btfss	status,2,c
  1774   000056  EF2F  F000         	goto	i2u71_41
  1775   00005A  EF31  F000         	goto	i2u71_40
  1776   00005E                     i2u71_41:
  1777   00005E  EF58  F000         	goto	i2l103
  1778   000062                     i2u71_40:
  1779   000062                     
  1780                           ;main.c: 103:             {;main.c: 104:              lcd_clear();
  1781   000062  ECBC  F003         	call	i2_lcd_clear	;wreg free
  1782   000066                     
  1783                           ;main.c: 105:              Time_out = 0;
  1784   000066  0E00               	movlw	0
  1785   000068  6E46               	movwf	_Time_out^0,c
  1786   00006A                     
  1787                           ;main.c: 106:                 new_input = 0;
  1788   00006A  0E00               	movlw	0
  1789   00006C  6E49               	movwf	_new_input^0,c
  1790   00006E                     
  1791                           ;main.c: 107:              previous_character = 0;
  1792   00006E  0E00               	movlw	0
  1793   000070  6E4A               	movwf	_previous_character^0,c
  1794   000072                     
  1795                           ;main.c: 108:                 character_match_cnt = 0;
  1796   000072  0E00               	movlw	0
  1797   000074  6E48               	movwf	_character_match_cnt^0,c
  1798   000076                     
  1799                           ;main.c: 109:                 Buffer_index = 0;
  1800   000076  0E00               	movlw	0
  1801   000078  6E47               	movwf	_Buffer_index^0,c
  1802   00007A                     
  1803                           ;main.c: 110:              for(int i = 0; i < 10;i++)
  1804   00007A  0E00               	movlw	0
  1805   00007C  6E1D               	movwf	(ISR@i+1)^0,c
  1806   00007E  0E00               	movlw	0
  1807   000080  6E1C               	movwf	ISR@i^0,c
  1808   000082                     i2l1430:
  1809                           
  1810                           ;main.c: 111:                 {;main.c: 112:                    Receiver_buffer[i] = '\0
      +                          ';
  1811   000082  501C               	movf	ISR@i^0,w,c
  1812   000084  0F4C               	addlw	low _Receiver_buffer
  1813   000086  6ED9               	movwf	fsr2l,c
  1814   000088  6ADA               	clrf	fsr2h,c
  1815   00008A  6ADF               	clrf	indf2,c
  1816   00008C                     
  1817                           ;main.c: 113:               }
  1818   00008C  4A1C               	infsnz	ISR@i^0,f,c
  1819   00008E  2A1D               	incf	(ISR@i+1)^0,f,c
  1820   000090  BE1D               	btfsc	(ISR@i+1)^0,7,c
  1821   000092  EF54  F000         	goto	i2u72_41
  1822   000096  501D               	movf	(ISR@i+1)^0,w,c
  1823   000098  E109               	bnz	i2u72_40
  1824   00009A  0E0A               	movlw	10
  1825   00009C  5C1C               	subwf	ISR@i^0,w,c
  1826   00009E  A0D8               	btfss	status,0,c
  1827   0000A0  EF54  F000         	goto	i2u72_41
  1828   0000A4  EF56  F000         	goto	i2u72_40
  1829   0000A8                     i2u72_41:
  1830   0000A8  EF41  F000         	goto	i2l1430
  1831   0000AC                     i2u72_40:
  1832   0000AC  EFE4  F000         	goto	i2l109
  1833   0000B0                     i2l103:
  1834                           
  1835                           ;main.c: 96:         while(!INTCONbits.INT0IF)
  1836   0000B0  A2F2               	btfss	242,1,c	;volatile
  1837   0000B2  EF5D  F000         	goto	i2u73_41
  1838   0000B6  EF5F  F000         	goto	i2u73_40
  1839   0000BA                     i2u73_41:
  1840   0000BA  EF17  F000         	goto	i2l104
  1841   0000BE                     i2u73_40:
  1842   0000BE                     
  1843                           ;main.c: 119:         current_character = current_character | ((PORTB & 0x1E) << 3);
  1844   0000BE  CF81 F019          	movff	3969,??_ISR	;volatile
  1845   0000C2  0E1E               	movlw	30
  1846   0000C4  1619               	andwf	??_ISR^0,f,c
  1847   0000C6  90D8               	bcf	status,0,c
  1848   0000C8  3619               	rlcf	??_ISR^0,f,c
  1849   0000CA  90D8               	bcf	status,0,c
  1850   0000CC  3619               	rlcf	??_ISR^0,f,c
  1851   0000CE  90D8               	bcf	status,0,c
  1852   0000D0  3419               	rlcf	??_ISR^0,w,c
  1853   0000D2  104B               	iorwf	_current_character^0,w,c
  1854   0000D4  6E4B               	movwf	_current_character^0,c
  1855   0000D6                     
  1856                           ;main.c: 120:         INTCONbits.INT0IF = 0;
  1857   0000D6  92F2               	bcf	242,1,c	;volatile
  1858                           
  1859                           ;main.c: 123:         if(current_character != 0xAA)
  1860   0000D8  0EAA               	movlw	170
  1861   0000DA  184B               	xorwf	_current_character^0,w,c
  1862   0000DC  B4D8               	btfsc	status,2,c
  1863   0000DE  EF73  F000         	goto	i2u74_41
  1864   0000E2  EF75  F000         	goto	i2u74_40
  1865   0000E6                     i2u74_41:
  1866   0000E6  EF80  F000         	goto	i2l1446
  1867   0000EA                     i2u74_40:
  1868   0000EA                     
  1869                           ;main.c: 124:         {;main.c: 125:             Receiver_buffer[Buffer_index] = current
      +                          _character;
  1870   0000EA  5047               	movf	_Buffer_index^0,w,c
  1871   0000EC  0F4C               	addlw	low _Receiver_buffer
  1872   0000EE  6ED9               	movwf	fsr2l,c
  1873   0000F0  6ADA               	clrf	fsr2h,c
  1874   0000F2  C04B  FFDF         	movff	_current_character,indf2
  1875   0000F6                     
  1876                           ;main.c: 126:             Buffer_index++;
  1877   0000F6  2A47               	incf	_Buffer_index^0,f,c
  1878   0000F8                     
  1879                           ;main.c: 127:             new_input = 1;
  1880   0000F8  0E01               	movlw	1
  1881   0000FA  6E49               	movwf	_new_input^0,c
  1882                           
  1883                           ;main.c: 128:         }
  1884   0000FC  EFA5  F000         	goto	i2l102
  1885   000100                     i2l1446:
  1886                           
  1887                           ;main.c: 130:         {;main.c: 131:             new_input = 0;
  1888   000100  0E00               	movlw	0
  1889   000102  6E49               	movwf	_new_input^0,c
  1890                           
  1891                           ;main.c: 132:             character_match_cnt = 0;
  1892   000104  0E00               	movlw	0
  1893   000106  6E48               	movwf	_character_match_cnt^0,c
  1894                           
  1895                           ;main.c: 133:             current_character = 0;
  1896   000108  0E00               	movlw	0
  1897   00010A  6E4B               	movwf	_current_character^0,c
  1898                           
  1899                           ;main.c: 134:             previous_character = 0;
  1900   00010C  0E00               	movlw	0
  1901   00010E  6E4A               	movwf	_previous_character^0,c
  1902                           
  1903                           ;main.c: 135:             Time_out = 0;
  1904   000110  0E00               	movlw	0
  1905   000112  6E46               	movwf	_Time_out^0,c
  1906                           
  1907                           ;main.c: 136:             Buffer_index = 0;
  1908   000114  0E00               	movlw	0
  1909   000116  6E47               	movwf	_Buffer_index^0,c
  1910                           
  1911                           ;main.c: 137:             for(int i = 0; i < 10;i++)
  1912   000118  0E00               	movlw	0
  1913   00011A  6E1F               	movwf	(ISR@i_729+1)^0,c
  1914   00011C  0E00               	movlw	0
  1915   00011E  6E1E               	movwf	ISR@i_729^0,c
  1916   000120                     i2l1452:
  1917                           
  1918                           ;main.c: 138:             {;main.c: 139:                 Receiver_buffer[i] = '\0';
  1919   000120  501E               	movf	ISR@i_729^0,w,c
  1920   000122  0F4C               	addlw	low _Receiver_buffer
  1921   000124  6ED9               	movwf	fsr2l,c
  1922   000126  6ADA               	clrf	fsr2h,c
  1923   000128  6ADF               	clrf	indf2,c
  1924   00012A                     
  1925                           ;main.c: 140:             }
  1926   00012A  4A1E               	infsnz	ISR@i_729^0,f,c
  1927   00012C  2A1F               	incf	(ISR@i_729+1)^0,f,c
  1928   00012E  BE1F               	btfsc	(ISR@i_729+1)^0,7,c
  1929   000130  EFA3  F000         	goto	i2u75_41
  1930   000134  501F               	movf	(ISR@i_729+1)^0,w,c
  1931   000136  E109               	bnz	i2u75_40
  1932   000138  0E0A               	movlw	10
  1933   00013A  5C1E               	subwf	ISR@i_729^0,w,c
  1934   00013C  A0D8               	btfss	status,0,c
  1935   00013E  EFA3  F000         	goto	i2u75_41
  1936   000142  EFA5  F000         	goto	i2u75_40
  1937   000146                     i2u75_41:
  1938   000146  EF90  F000         	goto	i2l1452
  1939   00014A                     i2u75_40:
  1940   00014A                     i2l102:
  1941                           
  1942                           ;main.c: 143:     if(INTCONbits.TMR0IF == 1)
  1943   00014A  A4F2               	btfss	242,2,c	;volatile
  1944   00014C  EFAA  F000         	goto	i2u76_41
  1945   000150  EFAC  F000         	goto	i2u76_40
  1946   000154                     i2u76_41:
  1947   000154  EFE4  F000         	goto	i2l109
  1948   000158                     i2u76_40:
  1949   000158                     
  1950                           ;main.c: 144:     {;main.c: 146:         INTCONbits.TMR0IF = 0;
  1951   000158  94F2               	bcf	242,2,c	;volatile
  1952   00015A                     
  1953                           ;main.c: 147:         Time_out++;
  1954   00015A  2A46               	incf	_Time_out^0,f,c
  1955   00015C                     
  1956                           ;main.c: 148:         if(Time_out == 5 && !new_input)
  1957   00015C  0E05               	movlw	5
  1958   00015E  1846               	xorwf	_Time_out^0,w,c
  1959   000160  A4D8               	btfss	status,2,c
  1960   000162  EFB5  F000         	goto	i2u77_41
  1961   000166  EFB7  F000         	goto	i2u77_40
  1962   00016A                     i2u77_41:
  1963   00016A  EFE4  F000         	goto	i2l109
  1964   00016E                     i2u77_40:
  1965   00016E  5049               	movf	_new_input^0,w,c
  1966   000170  A4D8               	btfss	status,2,c
  1967   000172  EFBD  F000         	goto	i2u78_41
  1968   000176  EFBF  F000         	goto	i2u78_40
  1969   00017A                     i2u78_41:
  1970   00017A  EFE4  F000         	goto	i2l109
  1971   00017E                     i2u78_40:
  1972   00017E                     
  1973                           ;main.c: 149:         {;main.c: 150:             lcd_clear();
  1974   00017E  ECBC  F003         	call	i2_lcd_clear	;wreg free
  1975   000182                     
  1976                           ;main.c: 151:             Time_out = 0;
  1977   000182  0E00               	movlw	0
  1978   000184  6E46               	movwf	_Time_out^0,c
  1979   000186                     
  1980                           ;main.c: 152:             new_input = 0;
  1981   000186  0E00               	movlw	0
  1982   000188  6E49               	movwf	_new_input^0,c
  1983   00018A                     
  1984                           ;main.c: 153:             previous_character = 0;
  1985   00018A  0E00               	movlw	0
  1986   00018C  6E4A               	movwf	_previous_character^0,c
  1987   00018E                     
  1988                           ;main.c: 154:             character_match_cnt = 0;
  1989   00018E  0E00               	movlw	0
  1990   000190  6E48               	movwf	_character_match_cnt^0,c
  1991   000192                     
  1992                           ;main.c: 155:             Buffer_index = 0;
  1993   000192  0E00               	movlw	0
  1994   000194  6E47               	movwf	_Buffer_index^0,c
  1995   000196                     
  1996                           ;main.c: 156:             for(int i = 0; i < 10;i++)
  1997   000196  0E00               	movlw	0
  1998   000198  6E21               	movwf	(ISR@i_730+1)^0,c
  1999   00019A  0E00               	movlw	0
  2000   00019C  6E20               	movwf	ISR@i_730^0,c
  2001   00019E                     i2l1484:
  2002                           
  2003                           ;main.c: 157:             {;main.c: 158:                 Receiver_buffer[i] = '\0';
  2004   00019E  5020               	movf	ISR@i_730^0,w,c
  2005   0001A0  0F4C               	addlw	low _Receiver_buffer
  2006   0001A2  6ED9               	movwf	fsr2l,c
  2007   0001A4  6ADA               	clrf	fsr2h,c
  2008   0001A6  6ADF               	clrf	indf2,c
  2009   0001A8                     
  2010                           ;main.c: 159:             }
  2011   0001A8  4A20               	infsnz	ISR@i_730^0,f,c
  2012   0001AA  2A21               	incf	(ISR@i_730+1)^0,f,c
  2013   0001AC  BE21               	btfsc	(ISR@i_730+1)^0,7,c
  2014   0001AE  EFE2  F000         	goto	i2u79_41
  2015   0001B2  5021               	movf	(ISR@i_730+1)^0,w,c
  2016   0001B4  E109               	bnz	i2u79_40
  2017   0001B6  0E0A               	movlw	10
  2018   0001B8  5C20               	subwf	ISR@i_730^0,w,c
  2019   0001BA  A0D8               	btfss	status,0,c
  2020   0001BC  EFE2  F000         	goto	i2u79_41
  2021   0001C0  EFE4  F000         	goto	i2u79_40
  2022   0001C4                     i2u79_41:
  2023   0001C4  EFCF  F000         	goto	i2l1484
  2024   0001C8                     i2u79_40:
  2025   0001C8                     i2l109:
  2026   0001C8  C01B  FFDA         	movff	??_ISR+2,fsr2h
  2027   0001CC  C01A  FFD9         	movff	??_ISR+1,fsr2l
  2028   0001D0  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2029   0001D2  0011               	retfie		f
  2030   0001D4                     __end_of_ISR:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function i2_lcd_clear *****************
  2034 ;; Defined at:
  2035 ;;		line 284 in file "main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1
  2049 ;;      Params:         0       0       0
  2050 ;;      Locals:         0       0       0
  2051 ;;      Temps:          0       0       0
  2052 ;;      Totals:         0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 2
  2056 ;; This function calls:
  2057 ;;		i2_delay
  2058 ;;		i2_i2c_data_tx
  2059 ;;		i2_i2c_start_and_addr
  2060 ;;		i2_i2c_stop
  2061 ;; This function is called by:
  2062 ;;		_ISR
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text14
  2067   000778                     __ptext14:
  2068                           	callstack 0
  2069   000778                     i2_lcd_clear:
  2070                           	callstack 22
  2071   000778                     
  2072                           ;main.c: 286:     i2c_start_and_addr(0x4E);
  2073   000778  0E4E               	movlw	78
  2074   00077A  EC66  F004         	call	i2_i2c_start_and_addr
  2075                           
  2076                           ;main.c: 289:     i2c_data_tx(0b00001100);
  2077   00077E  0E0C               	movlw	12
  2078   000780  EC95  F004         	call	i2_i2c_data_tx
  2079   000784                     
  2080                           ;main.c: 290:     delay(1);
  2081   000784  0E01               	movlw	1
  2082   000786  6E0D               	movwf	i2delay@milliseconds^0,c
  2083   000788  0E00               	movlw	0
  2084   00078A  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  2085   00078C  0E00               	movlw	0
  2086   00078E  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  2087   000790  0E00               	movlw	0
  2088   000792  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  2089   000794  EC80  F001         	call	i2_delay	;wreg free
  2090   000798                     
  2091                           ;main.c: 291:     i2c_data_tx(0b00001000);
  2092   000798  0E08               	movlw	8
  2093   00079A  EC95  F004         	call	i2_i2c_data_tx
  2094   00079E                     
  2095                           ;main.c: 294:     i2c_data_tx(0b00011100);
  2096   00079E  0E1C               	movlw	28
  2097   0007A0  EC95  F004         	call	i2_i2c_data_tx
  2098   0007A4                     
  2099                           ;main.c: 295:     delay(1);
  2100   0007A4  0E01               	movlw	1
  2101   0007A6  6E0D               	movwf	i2delay@milliseconds^0,c
  2102   0007A8  0E00               	movlw	0
  2103   0007AA  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  2104   0007AC  0E00               	movlw	0
  2105   0007AE  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  2106   0007B0  0E00               	movlw	0
  2107   0007B2  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  2108   0007B4  EC80  F001         	call	i2_delay	;wreg free
  2109                           
  2110                           ;main.c: 296:     i2c_data_tx(0b00011000);
  2111   0007B8  0E18               	movlw	24
  2112   0007BA  EC95  F004         	call	i2_i2c_data_tx
  2113   0007BE                     
  2114                           ;main.c: 297:     delay(1);
  2115   0007BE  0E01               	movlw	1
  2116   0007C0  6E0D               	movwf	i2delay@milliseconds^0,c
  2117   0007C2  0E00               	movlw	0
  2118   0007C4  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  2119   0007C6  0E00               	movlw	0
  2120   0007C8  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  2121   0007CA  0E00               	movlw	0
  2122   0007CC  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  2123   0007CE  EC80  F001         	call	i2_delay	;wreg free
  2124   0007D2                     
  2125                           ;main.c: 299:     i2c_stop();
  2126   0007D2  ECBF  F004         	call	i2_i2c_stop	;wreg free
  2127   0007D6  0012               	return		;funcret
  2128   0007D8                     __end_ofi2_lcd_clear:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function i2_i2c_stop *****************
  2132 ;; Defined at:
  2133 ;;		line 313 in file "main.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		None
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1
  2147 ;;      Params:         0       0       0
  2148 ;;      Locals:         0       0       0
  2149 ;;      Temps:          0       0       0
  2150 ;;      Totals:         0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		i2_lcd_clear
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text15
  2161   00097E                     __ptext15:
  2162                           	callstack 0
  2163   00097E                     i2_i2c_stop:
  2164                           	callstack 23
  2165   00097E                     
  2166                           ;main.c: 316:     SSPCON2bits.PEN = 1;
  2167   00097E  84C5               	bsf	197,2,c	;volatile
  2168   000980                     i2l167:
  2169   000980  A69E               	btfss	158,3,c	;volatile
  2170   000982  EFC5  F004         	goto	i2u23_41
  2171   000986  EFC7  F004         	goto	i2u23_40
  2172   00098A                     i2u23_41:
  2173   00098A  EFC0  F004         	goto	i2l167
  2174   00098E                     i2u23_40:
  2175   00098E                     
  2176                           ;main.c: 318:     PIR1bits.SSPIF = 0;
  2177   00098E  969E               	bcf	158,3,c	;volatile
  2178   000990  0012               	return		;funcret
  2179   000992                     __end_ofi2_i2c_stop:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function i2_i2c_start_and_addr *****************
  2183 ;; Defined at:
  2184 ;;		line 321 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  address         1    wreg     unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  address         1    0[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1
  2198 ;;      Params:         0       0       0
  2199 ;;      Locals:         1       0       0
  2200 ;;      Temps:          0       0       0
  2201 ;;      Totals:         1       0       0
  2202 ;;Total ram usage:        1 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		i2_lcd_clear
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text16
  2212   0008CC                     __ptext16:
  2213                           	callstack 0
  2214   0008CC                     i2_i2c_start_and_addr:
  2215                           	callstack 23
  2216                           
  2217                           ;incstack = 0
  2218                           ;i2i2c_start_and_addr@address stored from wreg
  2219   0008CC  6E01               	movwf	i2i2c_start_and_addr@address^0,c
  2220   0008CE                     
  2221                           ;main.c: 321: void i2c_start_and_addr(unsigned char address);main.c: 322: {;main.c: 324:
      +                               SSPCON2bits.SEN = 1;
  2222   0008CE  80C5               	bsf	197,0,c	;volatile
  2223   0008D0                     i2l173:
  2224   0008D0  A69E               	btfss	158,3,c	;volatile
  2225   0008D2  EF6D  F004         	goto	i2u60_41
  2226   0008D6  EF6F  F004         	goto	i2u60_40
  2227   0008DA                     i2u60_41:
  2228   0008DA  EF68  F004         	goto	i2l173
  2229   0008DE                     i2u60_40:
  2230   0008DE                     
  2231                           ;main.c: 326:     PIR1bits.SSPIF = 0;
  2232   0008DE  969E               	bcf	158,3,c	;volatile
  2233   0008E0                     i2l1318:
  2234                           
  2235                           ;main.c: 328:     {;main.c: 329:         SSPBUF = address;
  2236   0008E0  C001  FFC9         	movff	i2i2c_start_and_addr@address,4041	;volatile
  2237   0008E4                     i2l177:
  2238   0008E4  A69E               	btfss	158,3,c	;volatile
  2239   0008E6  EF77  F004         	goto	i2u61_41
  2240   0008EA  EF79  F004         	goto	i2u61_40
  2241   0008EE                     i2u61_41:
  2242   0008EE  EF72  F004         	goto	i2l177
  2243   0008F2                     i2u61_40:
  2244   0008F2                     
  2245                           ;main.c: 331:         PIR1bits.SSPIF = 0;
  2246   0008F2  969E               	bcf	158,3,c	;volatile
  2247                           
  2248                           ;main.c: 332:     }while(SSPCON2bits.ACKSTAT);
  2249   0008F4  BCC5               	btfsc	197,6,c	;volatile
  2250   0008F6  EF7F  F004         	goto	i2u62_41
  2251   0008FA  EF81  F004         	goto	i2u62_40
  2252   0008FE                     i2u62_41:
  2253   0008FE  EF70  F004         	goto	i2l1318
  2254   000902                     i2u62_40:
  2255   000902  0012               	return		;funcret
  2256   000904                     __end_ofi2_i2c_start_and_addr:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function i2_i2c_data_tx *****************
  2260 ;; Defined at:
  2261 ;;		line 302 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  data            1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  data            1    0[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1
  2275 ;;      Params:         0       0       0
  2276 ;;      Locals:         1       0       0
  2277 ;;      Temps:          0       0       0
  2278 ;;      Totals:         1       0       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		i2_lcd_clear
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text17
  2289   00092A                     __ptext17:
  2290                           	callstack 0
  2291   00092A                     i2_i2c_data_tx:
  2292                           	callstack 23
  2293                           
  2294                           ;incstack = 0
  2295                           ;i2i2c_data_tx@data stored from wreg
  2296   00092A  6E01               	movwf	i2i2c_data_tx@data^0,c
  2297   00092C                     i2l159:
  2298   00092C                     
  2299                           ;main.c: 305:     {;main.c: 306:         SSPBUF = data;
  2300   00092C  C001  FFC9         	movff	i2i2c_data_tx@data,4041	;volatile
  2301   000930                     i2l160:
  2302   000930  A69E               	btfss	158,3,c	;volatile
  2303   000932  EF9D  F004         	goto	i2u58_41
  2304   000936  EF9F  F004         	goto	i2u58_40
  2305   00093A                     i2u58_41:
  2306   00093A  EF98  F004         	goto	i2l160
  2307   00093E                     i2u58_40:
  2308   00093E                     
  2309                           ;main.c: 308:         PIR1bits.SSPIF = 0;
  2310   00093E  969E               	bcf	158,3,c	;volatile
  2311                           
  2312                           ;main.c: 310:     }while(SSPCON2bits.ACKSTAT);
  2313   000940  BCC5               	btfsc	197,6,c	;volatile
  2314   000942  EFA5  F004         	goto	i2u59_41
  2315   000946  EFA7  F004         	goto	i2u59_40
  2316   00094A                     i2u59_41:
  2317   00094A  EF96  F004         	goto	i2l159
  2318   00094E                     i2u59_40:
  2319   00094E  0012               	return		;funcret
  2320   000950                     __end_ofi2_i2c_data_tx:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function i2_delay *****************
  2324 ;; Defined at:
  2325 ;;		line 166 in file "main.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  milliseconds    4   12[COMRAM] unsigned long 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  timer_value     8   16[COMRAM] unsigned long long 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1
  2339 ;;      Params:         4       0       0
  2340 ;;      Locals:         8       0       0
  2341 ;;      Temps:          0       0       0
  2342 ;;      Totals:        12       0       0
  2343 ;;Total ram usage:       12 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 1
  2346 ;; This function calls:
  2347 ;;		i2___lmul
  2348 ;; This function is called by:
  2349 ;;		i2_lcd_clear
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text18
  2354   000300                     __ptext18:
  2355                           	callstack 0
  2356   000300                     i2_delay:
  2357                           	callstack 22
  2358   000300                     
  2359                           ;main.c: 166: void delay(unsigned long milliseconds);main.c: 167: {;main.c: 168:     T1C
      +                          ON = 0b10110000;
  2360   000300  0EB0               	movlw	176
  2361   000302  6ECD               	movwf	205,c	;volatile
  2362   000304                     
  2363                           ;main.c: 169:     PIE1bits.TMR1IE = 0;
  2364   000304  909D               	bcf	157,0,c	;volatile
  2365   000306                     
  2366                           ;main.c: 170:     unsigned long long timer_value = (milliseconds) * 1000 ;
  2367   000306  C00D  F001         	movff	i2delay@milliseconds,i2___lmul@multiplier
  2368   00030A  C00E  F002         	movff	i2delay@milliseconds+1,i2___lmul@multiplier+1
  2369   00030E  C00F  F003         	movff	i2delay@milliseconds+2,i2___lmul@multiplier+2
  2370   000312  C010  F004         	movff	i2delay@milliseconds+3,i2___lmul@multiplier+3
  2371   000316  0EE8               	movlw	232
  2372   000318  6E05               	movwf	i2___lmul@multiplicand^0,c
  2373   00031A  0E03               	movlw	3
  2374   00031C  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  2375   00031E  0E00               	movlw	0
  2376   000320  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  2377   000322  0E00               	movlw	0
  2378   000324  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  2379   000326  EC23  F003         	call	i2___lmul	;wreg free
  2380   00032A  5001               	movf	?i2___lmul^0,w,c
  2381   00032C  6E11               	movwf	i2delay@timer_value^0,c
  2382   00032E  5002               	movf	(?i2___lmul+1)^0,w,c
  2383   000330  6E12               	movwf	(i2delay@timer_value+1)^0,c
  2384   000332  5003               	movf	(?i2___lmul+2)^0,w,c
  2385   000334  6E13               	movwf	(i2delay@timer_value+2)^0,c
  2386   000336  5004               	movf	(?i2___lmul+3)^0,w,c
  2387   000338  6E14               	movwf	(i2delay@timer_value+3)^0,c
  2388   00033A  6A15               	clrf	(i2delay@timer_value+4)^0,c
  2389   00033C  6A16               	clrf	(i2delay@timer_value+5)^0,c
  2390   00033E  6A17               	clrf	(i2delay@timer_value+6)^0,c
  2391   000340  6A18               	clrf	(i2delay@timer_value+7)^0,c
  2392                           
  2393                           ;main.c: 171:     while(timer_value > 65535)
  2394   000342  EFC1  F001         	goto	i2l1304
  2395   000346                     i2l1296:
  2396                           
  2397                           ;main.c: 172:     {;main.c: 173:         timer_value -= 65535;
  2398   000346  0EFF               	movlw	255
  2399   000348  5E11               	subwf	i2delay@timer_value^0,f,c
  2400   00034A  0EFF               	movlw	255
  2401   00034C  5A12               	subwfb	(i2delay@timer_value+1)^0,f,c
  2402   00034E  0E00               	movlw	0
  2403   000350  5A13               	subwfb	(i2delay@timer_value+2)^0,f,c
  2404   000352  0E00               	movlw	0
  2405   000354  5A14               	subwfb	(i2delay@timer_value+3)^0,f,c
  2406   000356  0E00               	movlw	0
  2407   000358  5A15               	subwfb	(i2delay@timer_value+4)^0,f,c
  2408   00035A  0E00               	movlw	0
  2409   00035C  5A16               	subwfb	(i2delay@timer_value+5)^0,f,c
  2410   00035E  0E00               	movlw	0
  2411   000360  5A17               	subwfb	(i2delay@timer_value+6)^0,f,c
  2412   000362  0E00               	movlw	0
  2413   000364  5A18               	subwfb	(i2delay@timer_value+7)^0,f,c
  2414   000366                     
  2415                           ;main.c: 174:         TMR1H = 0;
  2416   000366  0E00               	movlw	0
  2417   000368  6ECF               	movwf	207,c	;volatile
  2418   00036A                     
  2419                           ;main.c: 175:         TMR1L = 0;
  2420   00036A  0E00               	movlw	0
  2421   00036C  6ECE               	movwf	206,c	;volatile
  2422   00036E                     
  2423                           ;main.c: 176:         T1CONbits.TMR1ON = 1;
  2424   00036E  80CD               	bsf	205,0,c	;volatile
  2425   000370                     i2l123:
  2426   000370  A09E               	btfss	158,0,c	;volatile
  2427   000372  EFBD  F001         	goto	i2u55_41
  2428   000376  EFBF  F001         	goto	i2u55_40
  2429   00037A                     i2u55_41:
  2430   00037A  EFB8  F001         	goto	i2l123
  2431   00037E                     i2u55_40:
  2432   00037E                     
  2433                           ;main.c: 178:         T1CONbits.TMR1ON = 0;
  2434   00037E  90CD               	bcf	205,0,c	;volatile
  2435                           
  2436                           ;main.c: 179:         PIR1bits.TMR1IF = 0;
  2437   000380  909E               	bcf	158,0,c	;volatile
  2438   000382                     i2l1304:
  2439                           
  2440                           ;main.c: 171:     while(timer_value > 65535)
  2441   000382  5018               	movf	(i2delay@timer_value+7)^0,w,c
  2442   000384  1017               	iorwf	(i2delay@timer_value+6)^0,w,c
  2443   000386  1016               	iorwf	(i2delay@timer_value+5)^0,w,c
  2444   000388  1015               	iorwf	(i2delay@timer_value+4)^0,w,c
  2445   00038A  1014               	iorwf	(i2delay@timer_value+3)^0,w,c
  2446   00038C  E106               	bnz	i2u56_41
  2447   00038E  0413               	decf	(i2delay@timer_value+2)^0,w,c
  2448   000390  B0D8               	btfsc	status,0,c
  2449   000392  EFCD  F001         	goto	i2u56_41
  2450   000396  EFCF  F001         	goto	i2u56_40
  2451   00039A                     i2u56_41:
  2452   00039A  EFA3  F001         	goto	i2l1296
  2453   00039E                     i2u56_40:
  2454   00039E                     
  2455                           ;main.c: 181:     timer_value = 65535 - timer_value + 1;
  2456   00039E  5011               	movf	i2delay@timer_value^0,w,c
  2457   0003A0  0800               	sublw	0
  2458   0003A2  6E11               	movwf	i2delay@timer_value^0,c
  2459   0003A4  0E00               	movlw	0
  2460   0003A6  5412               	subfwb	(i2delay@timer_value+1)^0,w,c
  2461   0003A8  6E12               	movwf	(i2delay@timer_value+1)^0,c
  2462   0003AA  0E01               	movlw	1
  2463   0003AC  5413               	subfwb	(i2delay@timer_value+2)^0,w,c
  2464   0003AE  6E13               	movwf	(i2delay@timer_value+2)^0,c
  2465   0003B0  0E00               	movlw	0
  2466   0003B2  5414               	subfwb	(i2delay@timer_value+3)^0,w,c
  2467   0003B4  6E14               	movwf	(i2delay@timer_value+3)^0,c
  2468   0003B6  0E00               	movlw	0
  2469   0003B8  5415               	subfwb	(i2delay@timer_value+4)^0,w,c
  2470   0003BA  6E15               	movwf	(i2delay@timer_value+4)^0,c
  2471   0003BC  0E00               	movlw	0
  2472   0003BE  5416               	subfwb	(i2delay@timer_value+5)^0,w,c
  2473   0003C0  6E16               	movwf	(i2delay@timer_value+5)^0,c
  2474   0003C2  0E00               	movlw	0
  2475   0003C4  5417               	subfwb	(i2delay@timer_value+6)^0,w,c
  2476   0003C6  6E17               	movwf	(i2delay@timer_value+6)^0,c
  2477   0003C8  0E00               	movlw	0
  2478   0003CA  5418               	subfwb	(i2delay@timer_value+7)^0,w,c
  2479   0003CC  6E18               	movwf	(i2delay@timer_value+7)^0,c
  2480   0003CE                     
  2481                           ;main.c: 182:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  2482   0003CE  0E00               	movlw	0
  2483   0003D0  6ECF               	movwf	207,c	;volatile
  2484   0003D2                     
  2485                           ;main.c: 183:     TMR1L = (unsigned char)(0xFF & timer_value);
  2486   0003D2  C011  FFCE         	movff	i2delay@timer_value,4046	;volatile
  2487   0003D6                     
  2488                           ;main.c: 184:     T1CONbits.TMR1ON = 1;
  2489   0003D6  80CD               	bsf	205,0,c	;volatile
  2490   0003D8                     i2l127:
  2491   0003D8  A09E               	btfss	158,0,c	;volatile
  2492   0003DA  EFF1  F001         	goto	i2u57_41
  2493   0003DE  EFF3  F001         	goto	i2u57_40
  2494   0003E2                     i2u57_41:
  2495   0003E2  EFEC  F001         	goto	i2l127
  2496   0003E6                     i2u57_40:
  2497   0003E6                     
  2498                           ;main.c: 186:     T1CONbits.TMR1ON = 0;
  2499   0003E6  90CD               	bcf	205,0,c	;volatile
  2500                           
  2501                           ;main.c: 187:     PIR1bits.TMR1IF = 0;
  2502   0003E8  909E               	bcf	158,0,c	;volatile
  2503   0003EA  0012               	return		;funcret
  2504   0003EC                     __end_ofi2_delay:
  2505                           	callstack 0
  2506                           
  2507 ;; *************** function i2___lmul *****************
  2508 ;; Defined at:
  2509 ;;		line 15 in file "F:\Program Files\MicroChip\XC8\v2.45\pic\sources\c99\common\Umul32.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  multiplier      4    0[COMRAM] unsigned long 
  2512 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  product         4    8[COMRAM] unsigned long 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  4    0[COMRAM] unsigned long 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1
  2524 ;;      Params:         8       0       0
  2525 ;;      Locals:         4       0       0
  2526 ;;      Temps:          0       0       0
  2527 ;;      Totals:        12       0       0
  2528 ;;Total ram usage:       12 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		i2_delay
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text19
  2538   000646                     __ptext19:
  2539                           	callstack 0
  2540   000646                     i2___lmul:
  2541                           	callstack 22
  2542   000646  0E00               	movlw	0
  2543   000648  6E09               	movwf	i2___lmul@product^0,c
  2544   00064A  0E00               	movlw	0
  2545   00064C  6E0A               	movwf	(i2___lmul@product+1)^0,c
  2546   00064E  0E00               	movlw	0
  2547   000650  6E0B               	movwf	(i2___lmul@product+2)^0,c
  2548   000652  0E00               	movlw	0
  2549   000654  6E0C               	movwf	(i2___lmul@product+3)^0,c
  2550   000656                     i2l1252:
  2551   000656  A001               	btfss	i2___lmul@multiplier^0,0,c
  2552   000658  EF30  F003         	goto	i2u49_41
  2553   00065C  EF32  F003         	goto	i2u49_40
  2554   000660                     i2u49_41:
  2555   000660  EF3A  F003         	goto	i2l1256
  2556   000664                     i2u49_40:
  2557   000664  5005               	movf	i2___lmul@multiplicand^0,w,c
  2558   000666  2609               	addwf	i2___lmul@product^0,f,c
  2559   000668  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  2560   00066A  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  2561   00066C  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  2562   00066E  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  2563   000670  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  2564   000672  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  2565   000674                     i2l1256:
  2566   000674  90D8               	bcf	status,0,c
  2567   000676  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  2568   000678  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  2569   00067A  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  2570   00067C  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  2571   00067E  90D8               	bcf	status,0,c
  2572   000680  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  2573   000682  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  2574   000684  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  2575   000686  3201               	rrcf	i2___lmul@multiplier^0,f,c
  2576   000688  5001               	movf	i2___lmul@multiplier^0,w,c
  2577   00068A  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  2578   00068C  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  2579   00068E  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  2580   000690  A4D8               	btfss	status,2,c
  2581   000692  EF4D  F003         	goto	i2u50_41
  2582   000696  EF4F  F003         	goto	i2u50_40
  2583   00069A                     i2u50_41:
  2584   00069A  EF2B  F003         	goto	i2l1252
  2585   00069E                     i2u50_40:
  2586   00069E  C009  F001         	movff	i2___lmul@product,?i2___lmul
  2587   0006A2  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  2588   0006A6  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  2589   0006AA  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  2590   0006AE  0012               	return		;funcret
  2591   0006B0                     __end_ofi2___lmul:
  2592                           	callstack 0
  2593                           
  2594                           	psect	rparam
  2595   000000                     
  2596                           	psect	temp
  2597   000056                     btemp:
  2598                           	callstack 0
  2599   000056                     	ds	1
  2600   000000                     int$flags	set	btemp
  2601   000000                     wtemp8	set	btemp+1
  2602   000000                     ttemp5	set	btemp+1
  2603   000000                     ttemp6	set	btemp+4
  2604   000000                     ttemp7	set	btemp+8
  2605                           
  2606                           	psect	config
  2607                           
  2608                           ; Padding undefined space
  2609   300000                     	org	3145728
  2610   300000  FF                 	db	255
  2611                           
  2612                           ;Config register CONFIG1H @ 0x300001
  2613                           ;	Oscillator
  2614                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  2615                           ;	Fail-Safe Clock Monitor Enable bit
  2616                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2617                           ;	Internal/External Oscillator Switchover bit
  2618                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2619   300001                     	org	3145729
  2620   300001  08                 	db	8
  2621                           
  2622                           ;Config register CONFIG2L @ 0x300002
  2623                           ;	Power-up Timer Enable bit
  2624                           ;	PWRT = OFF, PWRT disabled
  2625                           ;	Brown-out Reset Enable bits
  2626                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2627                           ;	Brown-out Reset Voltage bits
  2628                           ;	BORV = 3, Minimum Setting
  2629   300002                     	org	3145730
  2630   300002  1F                 	db	31
  2631                           
  2632                           ;Config register CONFIG2H @ 0x300003
  2633                           ;	Watchdog Timer Enable bit
  2634                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2635                           ;	Watchdog Timer Postscale Select bits
  2636                           ;	WDTPS = 32768, 1:32768
  2637   300003                     	org	3145731
  2638   300003  1E                 	db	30
  2639                           
  2640                           ; Padding undefined space
  2641   300004                     	org	3145732
  2642   300004  FF                 	db	255
  2643                           
  2644                           ;Config register CONFIG3H @ 0x300005
  2645                           ;	CCP2 MUX bit
  2646                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2647                           ;	PORTB A/D Enable bit
  2648                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  2649                           ;	Low-Power Timer1 Oscillator Enable bit
  2650                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2651                           ;	MCLR Pin Enable bit
  2652                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2653   300005                     	org	3145733
  2654   300005  83                 	db	131
  2655                           
  2656                           ;Config register CONFIG4L @ 0x300006
  2657                           ;	Stack Full/Underflow Reset Enable bit
  2658                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2659                           ;	Single-Supply ICSP Enable bit
  2660                           ;	LVP = OFF, Single-Supply ICSP disabled
  2661                           ;	Boot Block Size Select bits
  2662                           ;	BBSIZ = BB256, 256 Word
  2663                           ;	Extended Instruction Set Enable bit
  2664                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2665                           ;	Background Debugger Enable bit
  2666                           ;	DEBUG = 0x1, unprogrammed default
  2667   300006                     	org	3145734
  2668   300006  81                 	db	129
  2669                           
  2670                           ; Padding undefined space
  2671   300007                     	org	3145735
  2672   300007  FF                 	db	255
  2673                           
  2674                           ;Config register CONFIG5L @ 0x300008
  2675                           ;	Code Protection bit
  2676                           ;	CP0 = OFF, Block 0 not code-protected
  2677                           ;	Code Protection bit
  2678                           ;	CP1 = OFF, Block 1 not code-protected
  2679   300008                     	org	3145736
  2680   300008  03                 	db	3
  2681                           
  2682                           ;Config register CONFIG5H @ 0x300009
  2683                           ;	Boot Block Code Protection bitProtect Boot
  2684                           ;	CPB = OFF, Boot block not code-protected
  2685                           ;	Data EEPROM Code Protection bit
  2686                           ;	CPD = OFF, Data EEPROM not code-protected
  2687   300009                     	org	3145737
  2688   300009  C0                 	db	192
  2689                           
  2690                           ;Config register CONFIG6L @ 0x30000A
  2691                           ;	Write Protection bit
  2692                           ;	WRT0 = OFF, Block 0 not write-protected
  2693                           ;	Write Protection bit
  2694                           ;	WRT1 = OFF, Block 1 not write-protected
  2695   30000A                     	org	3145738
  2696   30000A  03                 	db	3
  2697                           
  2698                           ;Config register CONFIG6H @ 0x30000B
  2699                           ;	Configuration Register Write Protection bit
  2700                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2701                           ;	Boot Block Write Protection bit
  2702                           ;	WRTB = OFF, Boot block not write-protected
  2703                           ;	Data EEPROM Write Protection bit
  2704                           ;	WRTD = OFF, Data EEPROM not write-protected
  2705   30000B                     	org	3145739
  2706   30000B  E0                 	db	224
  2707                           
  2708                           ;Config register CONFIG7L @ 0x30000C
  2709                           ;	Table Read Protection bit
  2710                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  2711                           ;	Table Read Protection bit
  2712                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  2713   30000C                     	org	3145740
  2714   30000C  03                 	db	3
  2715                           
  2716                           ;Config register CONFIG7H @ 0x30000D
  2717                           ;	Boot Block Table Read Protection bit
  2718                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  2719   30000D                     	org	3145741
  2720   30000D  40                 	db	64
  2721                           tosu	equ	0xFFF
  2722                           tosh	equ	0xFFE
  2723                           tosl	equ	0xFFD
  2724                           stkptr	equ	0xFFC
  2725                           pclatu	equ	0xFFB
  2726                           pclath	equ	0xFFA
  2727                           pcl	equ	0xFF9
  2728                           tblptru	equ	0xFF8
  2729                           tblptrh	equ	0xFF7
  2730                           tblptrl	equ	0xFF6
  2731                           tablat	equ	0xFF5
  2732                           prodh	equ	0xFF4
  2733                           prodl	equ	0xFF3
  2734                           indf0	equ	0xFEF
  2735                           postinc0	equ	0xFEE
  2736                           postdec0	equ	0xFED
  2737                           preinc0	equ	0xFEC
  2738                           plusw0	equ	0xFEB
  2739                           fsr0h	equ	0xFEA
  2740                           fsr0l	equ	0xFE9
  2741                           wreg	equ	0xFE8
  2742                           indf1	equ	0xFE7
  2743                           postinc1	equ	0xFE6
  2744                           postdec1	equ	0xFE5
  2745                           preinc1	equ	0xFE4
  2746                           plusw1	equ	0xFE3
  2747                           fsr1h	equ	0xFE2
  2748                           fsr1l	equ	0xFE1
  2749                           bsr	equ	0xFE0
  2750                           indf2	equ	0xFDF
  2751                           postinc2	equ	0xFDE
  2752                           postdec2	equ	0xFDD
  2753                           preinc2	equ	0xFDC
  2754                           plusw2	equ	0xFDB
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     69      85
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    lcd_message@message	PTR unsigned char  size(2) Largest target is 10
		 -> Receiver_buffer(COMRAM[10]), STR_1(CODE[7]), STR_2(CODE[9]), STR_3(CODE[2]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_move_cursor
    _lcd_move_cursor->_lcd_command
    _lcd_command->_delay
    _lcd_message->_lcd_char
    _lcd_char->_i2c_data_tx
    _lcd_clear->_delay
    _delay->___lmul

Critical Paths under _ISR in COMRAM

    i2_lcd_clear->i2_delay
    i2_delay->i2___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7409
                                             66 COMRAM     3     3      0
                           _lcd_init
                        _lcd_message
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    6902
                          _lcd_clear
                        _lcd_command
                        _lcd_message
                    _lcd_move_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1    2905
                                             64 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          7     4      3    2687
                                             57 COMRAM     7     4      3
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _lcd_message                                          2     0      2     439
                                             36 COMRAM     2     0      2
                 _i2c_start_and_addr
                           _i2c_stop
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             2     2      0      75
                                             34 COMRAM     2     2      0
                        _i2c_data_tx
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     871
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start_and_addr                                   1     1      0      15
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_data_tx                                          1     1      0      15
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _delay                                               12     8      4     841
                                             45 COMRAM    12     8      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                             33 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  9     9      0     561
                                             24 COMRAM     9     9      0
                        i2_lcd_clear
 ---------------------------------------------------------------------------------
 (7) i2_lcd_clear                                          0     0      0     357
                            i2_delay
                      i2_i2c_data_tx
               i2_i2c_start_and_addr
                         i2_i2c_stop
 ---------------------------------------------------------------------------------
 (8) i2_i2c_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_i2c_start_and_addr                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_i2c_data_tx                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_delay                                             12     8      4     313
                                             12 COMRAM    12     8      4
                           i2___lmul
 ---------------------------------------------------------------------------------
 (9) i2___lmul                                            12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_clear
       _delay
         ___lmul
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_command
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_message
       _i2c_start_and_addr
       _i2c_stop
       _lcd_char
         _i2c_data_tx
     _lcd_move_cursor
       _lcd_command
   _lcd_message
   _system_init

 _ISR (ROOT)
   i2_lcd_clear
     i2_delay
       i2___lmul
     i2_i2c_data_tx
     i2_i2c_start_and_addr
     i2_i2c_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     45      55       1       67.5%
BITBIGSFRlhlhll     22      0       0      14        0.0%
BITBIGSFRhlh        19      0       0       9        0.0%
BITBIGSFRlhllll     11      0       0      17        0.0%
BITBIGSFRhh          D      0       0       8        0.0%
BITBIGSFRlhlllh      6      0       0      16        0.0%
BITBIGSFRlhlhll      3      0       0      13        0.0%
BITBIGSFRlhlhh       3      0       0      12        0.0%
BITBIGSFRlhhhl       2      0       0      11        0.0%
BITBIGSFRlhllh       1      0       0      15        0.0%
BITBIGSFRlhhhh       1      0       0      10        0.0%
BITBIGSFRll          1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      19        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 18 17:50:18 2024

                 _SSPSTATbits 0FC7                            u60 08A6                            u61 08A2  
                          u70 08BA                            u71 08B6                            u80 08CA  
                          u81 08C6                            u90 0918                            u91 0914  
         __end_of_system_init 0818                           l130 02FE                           l123 0284  
                         l125 0292                           l141 0856                           l133 05DA  
                         l150 0716                           l127 02EC                           l160 090A  
                         l144 0566                           l129 02FA                           l153 0892  
                         l162 0918                           l170 097C                           l164 0928  
                         l156 0776                           l181 08CA                           l173 0898  
                         l159 0906                           l175 08A6                           l167 096C  
                         l184 0816                           l177 08AC                           l169 097A  
                         l179 08BA                           l198 0634                           l199 0644  
                         l900 096A                           l918 085A                           l894 0896  
                         l896 08A8                           l992 07D8                           l898 0906  
                         l994 07DC                           l996 07E2                           l998 07E4  
                         u100 0928                           u101 0924                           u110 097A  
                         u111 0976                           u510 06DA                           u440 05FA  
                         u520 0702                           u441 05F6                           u450 0634  
                         u530 0712                           u451 0630                           u531 070E  
                         u460 0292                           u540 082A                           _ISR 0008  
                         u461 028E                           u517 06D0                           u541 0826  
                         u470 02B2                           u630 0416                           u471 02AE  
                         u527 06F8                           u631 0412                           u480 02FA  
                         u640 0426                           u481 02F6                           u641 0422  
                         u650 0454                           u651 0450                           u660 046C  
                         u661 0468                           u670 04C2                           u671 04BE  
                         wreg 0FE8                lcd_char@letter 0024                          ?_ISR 0001  
                        ISR@i 001C                          l1000 07E6                          l1010 07FC  
                        l1002 07E8                          l1020 0812                          l1012 07FE  
                        l1004 07EE                          l1022 0814                          l1014 0800  
                        l1006 07F0                          l1200 05DC                          l1016 0802  
                        l1008 07F6                          l1202 05EC                          l1210 0214  
                        l1018 0808                          l1204 05FA                          l1220 027E  
                        l1212 0218                          l1206 060A                          l1230 02E6  
                        l1222 0282                          l1214 021A                          l1208 0614  
                        l1232 02EA                          l1216 025A                          l1224 0296  
                        l1240 050C                          l1320 0568                          l1226 02B2  
                        l1218 027A                          l1242 0516                          l1234 04CC  
                        l1322 05AC                          l1228 02E2                          l1260 06B0  
                        l1244 0544                          l1236 04D2                          l1324 05BC  
                        l1270 0718                          l1262 06BA                          l1246 0558  
                        l1238 04F8                          l1326 05D6                          l1350 03FA  
                        l1342 03EC                          l1280 075E                          l1272 0724  
                        l1264 06DE                          l1248 0562                          l1360 0416  
                        l1352 03FE                          l1344 03F0                          l1282 0772  
                        l1274 0738                          l1266 06E2                          l1362 0426  
                        l1354 0402                          l1346 03F4                          l1276 073E  
                        l1268 0712                          l1284 081A                          l1380 0484  
                        l1372 045A                          l1364 0432                          l1356 0404  
                        l1348 03F8                          l1278 0744                          l1286 082A  
                        l1382 0488                          l1374 046C                          l1366 043A  
                        l1358 0406                          l1288 0842                          l1392 0498  
                        l1384 048C                          l1376 047C                          l1368 0454  
                        l1394 04A2                          l1386 0490                          l1378 0480  
                        l1396 04A6                          STR_1 020A                          STR_2 0201  
                        STR_3 0211               ??i2_i2c_data_tx 0001                 ??_i2c_data_tx 0022  
                        _main 03EC                          fsr0h 0FEA                          indf0 0FEF  
                        fsr2h 0FDA                          fsr0l 0FE9                          indf2 0FDF  
                        fsr2l 0FD9                          btemp 0056               __end_ofi2_delay 03EC  
                        start 01D4     i2c_start_and_addr@address 0022              ?_lcd_move_cursor 0041  
                ___param_bank 0000                         ??_ISR 0019                 lcd_command@lt 003A  
               lcd_command@rs 003C                 lcd_command@rw 003B                   i2_lcd_clear 0778  
                       ?_main 0001                         _T0CON 0FD5                         _T1CON 0FCD  
                       i2l102 014A                         i2l103 00B0                         i2l104 002E  
                       i2l130 03EA                         i2l123 0370                         i2l125 037E  
                       i2l109 01C8                         i2l127 03D8                         i2l160 0930  
                       i2l129 03E6                         i2l162 093E                         i2l170 0990  
                       i2l164 094E                         i2l156 07D6                         i2l181 0902  
                       i2l173 08D0                         i2l159 092C                         i2l175 08DE  
                       i2l167 0980                         i2l177 08E4                         i2l169 098E  
                       i2l179 08F2                         i2l198 069E                         i2l199 06AE  
                       i2l986 097E                         _TMR0H 0FD7                         _TMR1H 0FCF  
                       _TMR0L 0FD6                         _TMR1L 0FCE                         _PORTB 0F81  
                       _TRISB 0F93           ___lmul@multiplicand 0026                         _delay 0214  
             i2c_data_tx@data 0022                         main@i 0044                         tablat 0FF5  
            __end_ofi2___lmul 06B0                   ?i2_i2c_stop 0001                         ttemp5 0057  
                       ttemp6 005A                         ttemp7 005E                         status 0FD8  
                       wtemp8 0057               _Receiver_buffer 004C           _character_match_cnt 0048  
         __end_of_i2c_data_tx 092A               __initialization 0950                   _system_init 07D8  
                __end_of_main 04CA              __end_of_i2c_stop 097E                        ??_main 0043  
               __activetblptr 0002            _i2c_start_and_addr 0894                        ?_delay 002E  
         ?_i2c_start_and_addr 0001                     ??i2_delay 0011                        i2l1300 036A  
                      i2l1310 03D2                        i2l1302 036E                        i2l1312 03D6  
                      i2l1304 0382                        i2l1400 0020                        i2l1250 0646  
                      i2l1306 039E                        i2l1314 092C                        i2l1330 0784  
                      i2l1410 0052                        i2l1402 0028                        i2l1252 0656  
                      i2l1308 03CE                        i2l1316 08CE                        i2l1340 07D2  
                      i2l1332 0798                        i2l1420 0072                        i2l1412 0062  
                      i2l1404 003C                        i2l1254 0664                        i2l1318 08E0  
                      i2l1334 079E                        i2l1430 0082                        i2l1422 0076  
                      i2l1414 0066                        i2l1406 003E                        i2l1256 0674  
                      i2l1336 07A4                        i2l1328 0778                        i2l1440 00EA  
                      i2l1432 008C                        i2l1424 007A                        i2l1416 006A  
                      i2l1408 0040                        i2l1258 067E                        i2l1290 0300  
                      i2l1338 07BE                        i2l1442 00F6                        i2l1434 0090  
                      i2l1418 006E                        i2l1292 0304                        i2l1460 015A  
                      i2l1452 0120                        i2l1444 00F8                        i2l1436 00BE  
                      i2l1294 0306                        i2l1470 0186                        i2l1462 015C  
                      i2l1454 012A                        i2l1446 0100                        i2l1438 00D6  
                      i2l1296 0346                        i2l1472 018A                        i2l1464 016E  
                      i2l1456 012E                        i2l1298 0366                        i2l1474 018E  
                      i2l1466 017E                        i2l1458 0158                        i2l1484 019E  
                      i2l1476 0192                        i2l1468 0182                        i2l1486 01A8  
                      i2l1478 0196                        i2l1398 0012                        i2l1488 01AC  
            i2___lmul@product 0009                        _SSPADD 0FC8                        _SSPBUF 0FC9  
            __end_of_lcd_char 0894              __end_of_lcd_init 05DC                        ___lmul 05DC  
        ??_i2c_start_and_addr 0022                        clear_0 0956                        isa$std 0001  
                __mediumconst 0000                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8       lcd_move_cursor@position 0041                    __accesstop 0080  
     __end_of__initialization 095C                   _i2c_data_tx 0904                 ___rparam_used 0001  
              __pcstackCOMRAM 0001                 __end_of_delay 0300                     ?i2___lmul 0001  
                     ??_delay 0032                     ?_i2c_stop 0001               lcd_command@data 0040  
                     ?___lmul 0022                  ?i2_lcd_clear 0001                ___lmul@product 002A  
                  ??i2___lmul 0009                       i2u23_40 098E                       i2u23_41 098A  
                     i2u50_40 069E                       i2u50_41 069A                       i2u60_40 08DE  
                     i2u60_41 08DA                       i2u61_40 08F2                       i2u61_41 08EE  
                     i2u62_40 0902                       i2u70_40 0052                       i2u62_41 08FE  
                     i2u70_41 004E                       i2u55_40 037E                       i2u71_40 0062  
                     i2u55_41 037A                       i2u71_41 005E                       i2u56_40 039E  
                     i2u72_40 00AC                       i2u56_41 039A                       i2u72_41 00A8  
                     i2u49_40 0664                       i2u57_40 03E6                       i2u73_40 00BE  
                     i2u49_41 0660                       i2u57_41 03E2                       i2u73_41 00BA  
                     i2u58_40 093E                       i2u74_40 00EA                       i2u58_41 093A  
                     i2u74_41 00E6                       i2u59_40 094E                       i2u75_40 014A  
                     i2u59_41 094A                       i2u75_41 0146                       i2u76_40 0158  
                     i2u68_40 0020                       i2u76_41 0154                       i2u68_41 001C  
                     i2u77_40 016E                       i2u69_40 003C                       i2u77_41 016A  
                     i2u69_41 0038                       i2u78_40 017E                       i2u78_41 017A  
                     i2u79_40 01C8                       i2u79_41 01C4                     ?_lcd_char 0001  
                   ?_lcd_init 0001                       i2_delay 0300                  _Buffer_index 0047  
                ??i2_i2c_stop 0001                    ??_i2c_stop 0022         __end_ofi2_i2c_data_tx 0950  
         lcd_move_cursor@line 0042  __end_ofi2_i2c_start_and_addr 0904                       __Hparam 0000  
                     __Lparam 0000             __end_of_lcd_clear 0778                  ?_system_init 0001  
                __psmallconst 0200                       __pcinit 0950                       __ramtop 0200  
                     __ptext0 03EC                       __ptext1 07D8                       __ptext2 0568  
                     __ptext3 0818                       __ptext4 04CA                       __ptext5 06B0  
                     __ptext6 0858                       __ptext7 0718                       __ptext8 096A  
                     __ptext9 0894                     _T0CONbits 0FD5                     _T1CONbits 0FCD  
          __end_ofi2_i2c_stop 0992                    ??_lcd_char 0023                    ??_lcd_init 0043  
        end_of_initialization 095C                 __Lmediumconst 0000                       postinc0 0FEE  
                     postinc2 0FDE           i2___lmul@multiplier 0001                     _TRISCbits 0F94  
          lcd_message@message 0025                  ?_i2c_data_tx 0001                 ??_lcd_command 003D  
 i2i2c_start_and_addr@address 0001                 ??_lcd_message 0027                __end_of___lmul 0646  
            delay@timer_value 0032          i2_i2c_start_and_addr 08CC           start_initialization 0950  
                 __end_of_ISR 01D4             ??_lcd_move_cursor 0042           i2delay@milliseconds 000D  
                    ??___lmul 002A           __end_of_lcd_command 0568           __end_of_lcd_message 0718  
       ?i2_i2c_start_and_addr 0001                   __pbssCOMRAM 0046                      ?i2_delay 000D  
                    ISR@i_730 0020                      ISR@i_729 001E                     __pintcode 0008  
                   _lcd_clear 0718                   __smallconst 0200                     _new_input 0049  
                    _PIE1bits 0F9D                   _lcd_command 04CA                      _PIR1bits 0F9E  
                 _lcd_message 06B0                      _RCONbits 0FD0                    ?_lcd_clear 0001  
      ??i2_i2c_start_and_addr 0001                    _ADCON1bits 0FC1                      i2___lmul 0646  
           ___lmul@multiplier 0022                   _INTCON2bits 0FF1             i2i2c_data_tx@data 0001  
                    _i2c_stop 096A                      __Hrparam 0000                      __Lrparam 0000  
                    _Time_out 0046               _lcd_move_cursor 0818            _previous_character 004A  
                    __ptext10 0904                      __ptext11 0214                      __ptext12 05DC  
                    __ptext14 0778                      __ptext15 097E                      __ptext16 08CC  
                    __ptext17 092A                      __ptext18 0300                      __ptext19 0646  
                    _lcd_char 0858                      _lcd_init 0568                 i2_i2c_data_tx 092A  
  __end_of_i2c_start_and_addr 08CC                      isa$xinst 0000                      int$flags 0056  
           delay@milliseconds 002E                 ??i2_lcd_clear 0019                   ??_lcd_clear 003A  
                 _OSCTUNEbits 0F9B                    _INTCONbits 0FF2         i2___lmul@multiplicand 0005  
          i2delay@timer_value 0011                      intlevel2 0000                ?i2_i2c_data_tx 0001  
                  _OSCCONbits 0FD3       __end_of_lcd_move_cursor 0858                 ??_system_init 0022  
         __end_ofi2_lcd_clear 07D8             _current_character 004B                   _SSPCON1bits 0FC6  
                 _SSPCON2bits 0FC5                    i2_i2c_stop 097E                  ?_lcd_command 003A  
                ?_lcd_message 0025  
