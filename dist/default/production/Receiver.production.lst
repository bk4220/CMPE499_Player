

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 13 16:09:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F2221 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _SSPCON1bits	set	4038
    69   000000                     _SSPADD	set	4040
    70   000000                     _SSPSTATbits	set	4039
    71   000000                     _TMR1L	set	4046
    72   000000                     _TMR1H	set	4047
    73   000000                     _TMR0L	set	4054
    74   000000                     _TMR0H	set	4055
    75   000000                     _INTCONbits	set	4082
    76   000000                     _T1CONbits	set	4045
    77   000000                     _T0CONbits	set	4053
    78   000000                     _PORTB	set	3969
    79   000000                     _T0CON	set	4053
    80   000000                     _INTCON2bits	set	4081
    81   000000                     _TRISB	set	3987
    82   000000                     _OSCTUNEbits	set	3995
    83   000000                     _PIE1bits	set	3997
    84   000000                     _T1CON	set	4045
    85   000000                     _ADCON1bits	set	4033
    86   000000                     _SSPCON2bits	set	4037
    87   000000                     _SSPBUF	set	4041
    88   000000                     _PIR1bits	set	3998
    89   000000                     _RCONbits	set	4048
    90   000000                     _OSCCONbits	set	4051
    91   000000                     _TRISCbits	set	3988
    92                           
    93                           	psect	smallconst
    94   000200                     __psmallconst:
    95                           	callstack 0
    96   000200  00                 	db	0
    97   000201                     STR_2:
    98   000201  43                 	db	67	;'C'
    99   000202  61                 	db	97	;'a'
   100   000203  70                 	db	112	;'p'
   101   000204  73                 	db	115	;'s'
   102   000205  74                 	db	116	;'t'
   103   000206  6F                 	db	111	;'o'
   104   000207  6E                 	db	110	;'n'
   105   000208  65                 	db	101	;'e'
   106   000209  00                 	db	0
   107   00020A                     STR_1:
   108   00020A  53                 	db	83	;'S'
   109   00020B  65                 	db	101	;'e'
   110   00020C  6E                 	db	110	;'n'
   111   00020D  69                 	db	105	;'i'
   112   00020E  6F                 	db	111	;'o'
   113   00020F  72                 	db	114	;'r'
   114   000210  00                 	db	0
   115   000211  20                 	db	32
   116   000212  00                 	db	0
   117   000213  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   00091E                     __pcinit:
   123                           	callstack 0
   124   00091E                     start_initialization:
   125                           	callstack 0
   126   00091E                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Clear objects allocated to COMRAM (16 bytes)
   130   00091E  EE00  F03E         	lfsr	0,__pbssCOMRAM
   131   000922  0E10               	movlw	16
   132   000924                     clear_0:
   133   000924  6AEE               	clrf	postinc0,c
   134   000926  06E8               	decf	wreg,f,c
   135   000928  E1FD               	bnz	clear_0
   136   00092A                     end_of_initialization:
   137                           	callstack 0
   138   00092A                     __end_of__initialization:
   139                           	callstack 0
   140   00092A  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   141   00092C  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   142   00092E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143   000930  6EF8               	movwf	tblptru,c
   144   000932  0100               	movlb	0
   145   000934  EFF6  F001         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	bssCOMRAM
   148   00003E                     __pbssCOMRAM:
   149                           	callstack 0
   150   00003E                     _Time_out:
   151                           	callstack 0
   152   00003E                     	ds	1
   153   00003F                     _Buffer_index:
   154                           	callstack 0
   155   00003F                     	ds	1
   156   000040                     _character_match_cnt:
   157                           	callstack 0
   158   000040                     	ds	1
   159   000041                     _new_input:
   160                           	callstack 0
   161   000041                     	ds	1
   162   000042                     _previous_character:
   163                           	callstack 0
   164   000042                     	ds	1
   165   000043                     _current_character:
   166                           	callstack 0
   167   000043                     	ds	1
   168   000044                     _Receiver_buffer:
   169                           	callstack 0
   170   000044                     	ds	10
   171                           
   172                           	psect	cstackCOMRAM
   173   000001                     __pcstackCOMRAM:
   174                           	callstack 0
   175   000001                     ?i2___lmul:
   176                           	callstack 0
   177   000001                     i2i2c_data_tx@data:
   178                           	callstack 0
   179   000001                     i2i2c_start_and_addr@address:
   180                           	callstack 0
   181   000001                     i2___lmul@multiplier:
   182                           	callstack 0
   183                           
   184                           ; 4 bytes @ 0x0
   185   000001                     	ds	4
   186   000005                     i2___lmul@multiplicand:
   187                           	callstack 0
   188                           
   189                           ; 4 bytes @ 0x4
   190   000005                     	ds	4
   191   000009                     i2___lmul@product:
   192                           	callstack 0
   193                           
   194                           ; 4 bytes @ 0x8
   195   000009                     	ds	4
   196   00000D                     i2delay@milliseconds:
   197                           	callstack 0
   198                           
   199                           ; 4 bytes @ 0xC
   200   00000D                     	ds	4
   201   000011                     i2delay@timer_value:
   202                           	callstack 0
   203                           
   204                           ; 8 bytes @ 0x10
   205   000011                     	ds	8
   206   000019                     ??_ISR:
   207   000019                     
   208                           ; 1 bytes @ 0x18
   209   000019                     	ds	3
   210   00001C                     ?___lmul:
   211                           	callstack 0
   212   00001C                     i2c_data_tx@data:
   213                           	callstack 0
   214   00001C                     i2c_start_and_addr@address:
   215                           	callstack 0
   216   00001C                     ___lmul@multiplier:
   217                           	callstack 0
   218                           
   219                           ; 4 bytes @ 0x1B
   220   00001C                     	ds	1
   221   00001D                     ??_lcd_char:
   222                           
   223                           ; 1 bytes @ 0x1C
   224   00001D                     	ds	1
   225   00001E                     lcd_char@letter:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x1D
   229   00001E                     	ds	1
   230   00001F                     lcd_message@message:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x1E
   234   00001F                     	ds	1
   235   000020                     ___lmul@multiplicand:
   236                           	callstack 0
   237                           
   238                           ; 4 bytes @ 0x1F
   239   000020                     	ds	1
   240   000021                     
   241                           ; 1 bytes @ 0x20
   242   000021                     	ds	3
   243   000024                     ___lmul@product:
   244                           	callstack 0
   245                           
   246                           ; 4 bytes @ 0x23
   247   000024                     	ds	4
   248   000028                     delay@milliseconds:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x27
   252   000028                     	ds	4
   253   00002C                     delay@timer_value:
   254                           	callstack 0
   255                           
   256                           ; 8 bytes @ 0x2B
   257   00002C                     	ds	8
   258   000034                     lcd_command@lt:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x33
   262   000034                     	ds	1
   263   000035                     lcd_command@rw:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x34
   267   000035                     	ds	1
   268   000036                     lcd_command@rs:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x35
   272   000036                     	ds	1
   273   000037                     ??_lcd_command:
   274                           
   275                           ; 1 bytes @ 0x36
   276   000037                     	ds	3
   277   00003A                     lcd_command@data:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x39
   281   00003A                     	ds	1
   282   00003B                     lcd_move_cursor@position:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x3A
   286   00003B                     	ds	1
   287   00003C                     lcd_move_cursor@line:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x3B
   291   00003C                     	ds	1
   292   00003D                     ??_main:
   293                           
   294                           ; 1 bytes @ 0x3C
   295   00003D                     	ds	1
   296                           
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 34 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1
   316 ;;      Params:         0       0       0
   317 ;;      Locals:         0       0       0
   318 ;;      Temps:          1       0       0
   319 ;;      Totals:         1       0       0
   320 ;;Total ram usage:        1 bytes
   321 ;; Hardware stack levels required when called: 9
   322 ;; This function calls:
   323 ;;		_lcd_init
   324 ;;		_lcd_message
   325 ;;		_system_init
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text0
   332   0003EC                     __ptext0:
   333                           	callstack 0
   334   0003EC                     _main:
   335                           	callstack 22
   336   0003EC                     
   337                           ;main.c: 38:     system_init();
   338   0003EC  ECD3  F003         	call	_system_init	;wreg free
   339   0003F0                     
   340                           ;main.c: 40:     lcd_init();
   341   0003F0  EC9B  F002         	call	_lcd_init	;wreg free
   342   0003F4                     
   343                           ;main.c: 43:     T0CON = 0b00000111;
   344   0003F4  0E07               	movlw	7
   345   0003F6  6ED5               	movwf	213,c	;volatile
   346   0003F8                     
   347                           ;main.c: 44:     INTCONbits.TMR0IF = 0;
   348   0003F8  94F2               	bcf	242,2,c	;volatile
   349   0003FA                     
   350                           ;main.c: 45:     TMR0H = 0x00;
   351   0003FA  0E00               	movlw	0
   352   0003FC  6ED7               	movwf	215,c	;volatile
   353   0003FE                     
   354                           ;main.c: 46:     TMR0L = 0x00;
   355   0003FE  0E00               	movlw	0
   356   000400  6ED6               	movwf	214,c	;volatile
   357   000402                     
   358                           ;main.c: 47:     INTCONbits.TMR0IE = 1;
   359   000402  8AF2               	bsf	242,5,c	;volatile
   360   000404                     
   361                           ;main.c: 48:     T0CONbits.TMR0ON = 1;
   362   000404  8ED5               	bsf	213,7,c	;volatile
   363   000406                     l1284:
   364                           
   365                           ;main.c: 51:     {;main.c: 52:        if(new_input)
   366   000406  5041               	movf	_new_input^0,w,c
   367   000408  B4D8               	btfsc	status,2,c
   368   00040A  EF09  F002         	goto	u561
   369   00040E  EF0B  F002         	goto	u560
   370   000412                     u561:
   371   000412  EF03  F002         	goto	l1284
   372   000416                     u560:
   373   000416                     
   374                           ;main.c: 53:        {;main.c: 54:            if(previous_character == 0)
   375   000416  5042               	movf	_previous_character^0,w,c
   376   000418  A4D8               	btfss	status,2,c
   377   00041A  EF11  F002         	goto	u571
   378   00041E  EF13  F002         	goto	u570
   379   000422                     u571:
   380   000422  EF1D  F002         	goto	l1292
   381   000426                     u570:
   382   000426                     
   383                           ;main.c: 55:            {;main.c: 56:                previous_character = Receiver_buffe
      +                          r[Buffer_index-1];
   384   000426  503F               	movf	_Buffer_index^0,w,c
   385   000428  0F43               	addlw	low (_Receiver_buffer+255)
   386   00042A  6ED9               	movwf	fsr2l,c
   387   00042C  6ADA               	clrf	fsr2h,c
   388   00042E  50DF               	movf	indf2,w,c
   389   000430  6E42               	movwf	_previous_character^0,c
   390   000432                     l1290:
   391                           
   392                           ;main.c: 57:                new_input = 0;
   393   000432  0E00               	movlw	0
   394   000434  6E41               	movwf	_new_input^0,c
   395                           
   396                           ;main.c: 58:            }
   397   000436  EF2D  F002         	goto	l1298
   398   00043A                     l1292:
   399   00043A  503F               	movf	_Buffer_index^0,w,c
   400   00043C  0F43               	addlw	low (_Receiver_buffer+255)
   401   00043E  6ED9               	movwf	fsr2l,c
   402   000440  6ADA               	clrf	fsr2h,c
   403   000442  5042               	movf	_previous_character^0,w,c
   404   000444  18DE               	xorwf	postinc2,w,c
   405   000446  A4D8               	btfss	status,2,c
   406   000448  EF28  F002         	goto	u581
   407   00044C  EF2A  F002         	goto	u580
   408   000450                     u581:
   409   000450  EF2D  F002         	goto	l1298
   410   000454                     u580:
   411   000454                     
   412                           ;main.c: 60:            {;main.c: 61:                character_match_cnt++;
   413   000454  2A40               	incf	_character_match_cnt^0,f,c
   414   000456  EF19  F002         	goto	l1290
   415   00045A                     l1298:
   416                           
   417                           ;main.c: 64:            if(character_match_cnt == 2)
   418   00045A  0E02               	movlw	2
   419   00045C  1840               	xorwf	_character_match_cnt^0,w,c
   420   00045E  A4D8               	btfss	status,2,c
   421   000460  EF34  F002         	goto	u591
   422   000464  EF36  F002         	goto	u590
   423   000468                     u591:
   424   000468  EF03  F002         	goto	l1284
   425   00046C                     u590:
   426   00046C                     
   427                           ;main.c: 65:            {;main.c: 66:                 lcd_message(Receiver_buffer + (Buf
      +                          fer_index - 1));
   428   00046C  503F               	movf	_Buffer_index^0,w,c
   429   00046E  0F43               	addlw	low (_Receiver_buffer+-1)
   430   000470  6E3D               	movwf	??_main^0,c
   431   000472  C03D  F01F         	movff	??_main,lcd_message@message
   432   000476  6A20               	clrf	(lcd_message@message+1)^0,c
   433   000478  EC3F  F003         	call	_lcd_message	;wreg free
   434   00047C                     
   435                           ;main.c: 67:                 new_input = 0;
   436   00047C  0E00               	movlw	0
   437   00047E  6E41               	movwf	_new_input^0,c
   438   000480                     
   439                           ;main.c: 68:                 previous_character = 0;
   440   000480  0E00               	movlw	0
   441   000482  6E42               	movwf	_previous_character^0,c
   442   000484                     
   443                           ;main.c: 69:                 character_match_cnt = 0;
   444   000484  0E00               	movlw	0
   445   000486  6E40               	movwf	_character_match_cnt^0,c
   446   000488                     
   447                           ;main.c: 70:                 Buffer_index = 0;
   448   000488  0E00               	movlw	0
   449   00048A  6E3F               	movwf	_Buffer_index^0,c
   450   00048C                     
   451                           ;main.c: 71:                 Time_out = 0;
   452   00048C  0E00               	movlw	0
   453   00048E  6E3E               	movwf	_Time_out^0,c
   454   000490  EF03  F002         	goto	l1284
   455   000494  EF6F  F000         	goto	start
   456   000498                     __end_of_main:
   457                           	callstack 0
   458                           
   459 ;; *************** function _system_init *****************
   460 ;; Defined at:
   461 ;;		line 296 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1
   475 ;;      Params:         0       0       0
   476 ;;      Locals:         0       0       0
   477 ;;      Temps:          0       0       0
   478 ;;      Totals:         0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 4
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490   0007A6                     __ptext1:
   491                           	callstack 0
   492   0007A6                     _system_init:
   493                           	callstack 26
   494   0007A6                     
   495                           ;main.c: 299:     OSCCONbits.SCS = 0;
   496   0007A6  0EFC               	movlw	-4
   497   0007A8  16D3               	andwf	211,f,c	;volatile
   498   0007AA                     
   499                           ;main.c: 300:     OSCCONbits.IDLEN = 1;
   500   0007AA  8ED3               	bsf	211,7,c	;volatile
   501                           
   502                           ;main.c: 301:     OSCCONbits.IRCF = 7;
   503   0007AC  0E70               	movlw	112
   504   0007AE  12D3               	iorwf	211,f,c	;volatile
   505   0007B0                     
   506                           ;main.c: 302:     OSCTUNEbits.PLLEN = 1;
   507   0007B0  8C9B               	bsf	155,6,c	;volatile
   508   0007B2                     
   509                           ;main.c: 305:     INTCONbits.GIE = 1;
   510   0007B2  8EF2               	bsf	242,7,c	;volatile
   511   0007B4                     
   512                           ;main.c: 306:     INTCONbits.PEIE = 1;
   513   0007B4  8CF2               	bsf	242,6,c	;volatile
   514   0007B6                     
   515                           ;main.c: 308:     INTCON2bits.RBPU = 0;
   516   0007B6  9EF1               	bcf	241,7,c	;volatile
   517                           
   518                           ;main.c: 311:     ADCON1bits.PCFG = 15;
   519   0007B8  0E0F               	movlw	15
   520   0007BA  12C1               	iorwf	193,f,c	;volatile
   521   0007BC                     
   522                           ;main.c: 314:     RCONbits.IPEN = 0;
   523   0007BC  9ED0               	bcf	208,7,c	;volatile
   524   0007BE                     
   525                           ;main.c: 317:     TRISB = TRISB | 0x1F;
   526   0007BE  5093               	movf	147,w,c	;volatile
   527   0007C0  091F               	iorlw	31
   528   0007C2  6E93               	movwf	147,c	;volatile
   529   0007C4                     
   530                           ;main.c: 318:     PORTB = PORTB & 0xE0;
   531   0007C4  5081               	movf	129,w,c	;volatile
   532   0007C6  0BE0               	andlw	224
   533   0007C8  6E81               	movwf	129,c	;volatile
   534   0007CA                     
   535                           ;main.c: 319:     INTCONbits.INT0IE = 1;
   536   0007CA  88F2               	bsf	242,4,c	;volatile
   537   0007CC                     
   538                           ;main.c: 320:     INTCON2bits.INTEDG0 = 1;
   539   0007CC  8CF1               	bsf	241,6,c	;volatile
   540   0007CE                     
   541                           ;main.c: 323:     SSPSTATbits.SMP = 1;
   542   0007CE  8EC7               	bsf	199,7,c	;volatile
   543   0007D0                     
   544                           ;main.c: 324:     SSPSTATbits.CKE = 0;
   545   0007D0  9CC7               	bcf	199,6,c	;volatile
   546                           
   547                           ;main.c: 325:     SSPADD = 0x50;
   548   0007D2  0E50               	movlw	80
   549   0007D4  6EC8               	movwf	200,c	;volatile
   550   0007D6                     
   551                           ;main.c: 326:     SSPCON1bits.SSPEN = 1;
   552   0007D6  8AC6               	bsf	198,5,c	;volatile
   553                           
   554                           ;main.c: 327:     SSPCON1bits.SSPM = 0b1000;
   555   0007D8  50C6               	movf	198,w,c	;volatile
   556   0007DA  0BF0               	andlw	-16
   557   0007DC  0908               	iorlw	8
   558   0007DE  6EC6               	movwf	198,c	;volatile
   559   0007E0                     
   560                           ;main.c: 328:     TRISCbits.RC3 = 1;
   561   0007E0  8694               	bsf	148,3,c	;volatile
   562   0007E2                     
   563                           ;main.c: 329:     TRISCbits.RC4 = 1;
   564   0007E2  8894               	bsf	148,4,c	;volatile
   565   0007E4  0012               	return		;funcret
   566   0007E6                     __end_of_system_init:
   567                           	callstack 0
   568                           
   569 ;; *************** function _lcd_init *****************
   570 ;; Defined at:
   571 ;;		line 150 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1
   585 ;;      Params:         0       0       0
   586 ;;      Locals:         0       0       0
   587 ;;      Temps:          0       0       0
   588 ;;      Totals:         0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 8
   592 ;; This function calls:
   593 ;;		_lcd_clear
   594 ;;		_lcd_command
   595 ;;		_lcd_message
   596 ;;		_lcd_move_cursor
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text2
   603   000536                     __ptext2:
   604                           	callstack 0
   605   000536                     _lcd_init:
   606                           	callstack 22
   607   000536                     
   608                           ;main.c: 157:     lcd_command(0x02, 1, 0, 0);
   609   000536  0E01               	movlw	1
   610   000538  6E34               	movwf	lcd_command@lt^0,c
   611   00053A  0E00               	movlw	0
   612   00053C  6E35               	movwf	lcd_command@rw^0,c
   613   00053E  0E00               	movlw	0
   614   000540  6E36               	movwf	lcd_command@rs^0,c
   615   000542  0E02               	movlw	2
   616   000544  EC4C  F002         	call	_lcd_command
   617                           
   618                           ;main.c: 158:     lcd_command(0x28, 1, 0, 0);
   619   000548  0E01               	movlw	1
   620   00054A  6E34               	movwf	lcd_command@lt^0,c
   621   00054C  0E00               	movlw	0
   622   00054E  6E35               	movwf	lcd_command@rw^0,c
   623   000550  0E00               	movlw	0
   624   000552  6E36               	movwf	lcd_command@rs^0,c
   625   000554  0E28               	movlw	40
   626   000556  EC4C  F002         	call	_lcd_command
   627                           
   628                           ;main.c: 160:     lcd_clear();
   629   00055A  EC73  F003         	call	_lcd_clear	;wreg free
   630                           
   631                           ;main.c: 163:     lcd_command(0x0F, 1, 0, 0);
   632   00055E  0E01               	movlw	1
   633   000560  6E34               	movwf	lcd_command@lt^0,c
   634   000562  0E00               	movlw	0
   635   000564  6E35               	movwf	lcd_command@rw^0,c
   636   000566  0E00               	movlw	0
   637   000568  6E36               	movwf	lcd_command@rs^0,c
   638   00056A  0E0F               	movlw	15
   639   00056C  EC4C  F002         	call	_lcd_command
   640                           
   641                           ;main.c: 168:     lcd_move_cursor(0, 5);
   642   000570  0E05               	movlw	5
   643   000572  6E3B               	movwf	lcd_move_cursor@position^0,c
   644   000574  0E00               	movlw	0
   645   000576  ECF3  F003         	call	_lcd_move_cursor
   646   00057A                     
   647                           ;main.c: 169:     lcd_message("Senior");
   648   00057A  0E0A               	movlw	low STR_1
   649   00057C  6E1F               	movwf	lcd_message@message^0,c
   650   00057E  501F               	movf	lcd_message@message^0,w,c
   651   000580  A4D8               	btfss	status,2,c
   652   000582  0E02               	movlw	high __smallconst
   653   000584  6E20               	movwf	(lcd_message@message+1)^0,c
   654   000586  EC3F  F003         	call	_lcd_message	;wreg free
   655   00058A                     
   656                           ;main.c: 170:     lcd_move_cursor(1, 4);
   657   00058A  0E04               	movlw	4
   658   00058C  6E3B               	movwf	lcd_move_cursor@position^0,c
   659   00058E  0E01               	movlw	1
   660   000590  ECF3  F003         	call	_lcd_move_cursor
   661                           
   662                           ;main.c: 171:     lcd_message("Capstone");
   663   000594  0E01               	movlw	low STR_2
   664   000596  6E1F               	movwf	lcd_message@message^0,c
   665   000598  501F               	movf	lcd_message@message^0,w,c
   666   00059A  A4D8               	btfss	status,2,c
   667   00059C  0E02               	movlw	high __smallconst
   668   00059E  6E20               	movwf	(lcd_message@message+1)^0,c
   669   0005A0  EC3F  F003         	call	_lcd_message	;wreg free
   670   0005A4                     
   671                           ;main.c: 173:     lcd_clear();
   672   0005A4  EC73  F003         	call	_lcd_clear	;wreg free
   673   0005A8  0012               	return		;funcret
   674   0005AA                     __end_of_lcd_init:
   675                           	callstack 0
   676                           
   677 ;; *************** function _lcd_move_cursor *****************
   678 ;; Defined at:
   679 ;;		line 191 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  line            1    wreg     unsigned char 
   682 ;;  position        1   58[COMRAM] unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  line            1   59[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1
   694 ;;      Params:         1       0       0
   695 ;;      Locals:         1       0       0
   696 ;;      Temps:          0       0       0
   697 ;;      Totals:         2       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 7
   701 ;; This function calls:
   702 ;;		_lcd_command
   703 ;; This function is called by:
   704 ;;		_lcd_init
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text3
   709   0007E6                     __ptext3:
   710                           	callstack 0
   711   0007E6                     _lcd_move_cursor:
   712                           	callstack 22
   713                           
   714                           ;incstack = 0
   715                           ;lcd_move_cursor@line stored from wreg
   716   0007E6  6E3C               	movwf	lcd_move_cursor@line^0,c
   717   0007E8                     
   718                           ;main.c: 191: void lcd_move_cursor(char line, char position);main.c: 192: {;main.c: 193:
      +                               if(!line)
   719   0007E8  503C               	movf	lcd_move_cursor@line^0,w,c
   720   0007EA  A4D8               	btfss	status,2,c
   721   0007EC  EFFA  F003         	goto	u471
   722   0007F0  EFFC  F003         	goto	u470
   723   0007F4                     u471:
   724   0007F4  EF08  F004         	goto	l1214
   725   0007F8                     u470:
   726   0007F8                     
   727                           ;main.c: 194:     {;main.c: 195:         lcd_command(0x80 | position, 1, 0, 0);
   728   0007F8  0E01               	movlw	1
   729   0007FA  6E34               	movwf	lcd_command@lt^0,c
   730   0007FC  0E00               	movlw	0
   731   0007FE  6E35               	movwf	lcd_command@rw^0,c
   732   000800  0E00               	movlw	0
   733   000802  6E36               	movwf	lcd_command@rs^0,c
   734   000804  503B               	movf	lcd_move_cursor@position^0,w,c
   735   000806  0980               	iorlw	128
   736   000808  EC4C  F002         	call	_lcd_command
   737                           
   738                           ;main.c: 196:     }
   739   00080C  EF12  F004         	goto	l131
   740   000810                     l1214:
   741                           
   742                           ;main.c: 198:     {;main.c: 199:         lcd_command(0xC0 | position, 1, 0, 0);
   743   000810  0E01               	movlw	1
   744   000812  6E34               	movwf	lcd_command@lt^0,c
   745   000814  0E00               	movlw	0
   746   000816  6E35               	movwf	lcd_command@rw^0,c
   747   000818  0E00               	movlw	0
   748   00081A  6E36               	movwf	lcd_command@rs^0,c
   749   00081C  503B               	movf	lcd_move_cursor@position^0,w,c
   750   00081E  09C0               	iorlw	192
   751   000820  EC4C  F002         	call	_lcd_command
   752   000824                     l131:
   753   000824  0012               	return		;funcret
   754   000826                     __end_of_lcd_move_cursor:
   755                           	callstack 0
   756                           
   757 ;; *************** function _lcd_command *****************
   758 ;; Defined at:
   759 ;;		line 205 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  data            1    wreg     unsigned char 
   762 ;;  lt              1   51[COMRAM] unsigned char 
   763 ;;  rw              1   52[COMRAM] unsigned char 
   764 ;;  rs              1   53[COMRAM] unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  data            1   57[COMRAM] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, status,2, status,0, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1
   776 ;;      Params:         3       0       0
   777 ;;      Locals:         1       0       0
   778 ;;      Temps:          3       0       0
   779 ;;      Totals:         7       0       0
   780 ;;Total ram usage:        7 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; Hardware stack levels required when called: 6
   783 ;; This function calls:
   784 ;;		_delay
   785 ;;		_i2c_data_tx
   786 ;;		_i2c_start_and_addr
   787 ;;		_i2c_stop
   788 ;; This function is called by:
   789 ;;		_lcd_init
   790 ;;		_lcd_move_cursor
   791 ;;		_lcd_backspace
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text4
   796   000498                     __ptext4:
   797                           	callstack 0
   798   000498                     _lcd_command:
   799                           	callstack 22
   800                           
   801                           ;incstack = 0
   802                           ;lcd_command@data stored from wreg
   803   000498  6E3A               	movwf	lcd_command@data^0,c
   804   00049A                     
   805                           ;main.c: 205: void lcd_command(char data, char lt, char rw, char rs);main.c: 206: {;main
      +                          .c: 207:     i2c_start_and_addr(0x4E);
   806   00049A  0E4E               	movlw	78
   807   00049C  EC31  F004         	call	_i2c_start_and_addr
   808   0004A0                     
   809                           ;main.c: 209:     i2c_data_tx((data & 0xF0) | (lt << 3) | 4 | (rw <<1) | rs);
   810   0004A0  90D8               	bcf	status,0,c
   811   0004A2  3435               	rlcf	lcd_command@rw^0,w,c
   812   0004A4  6E37               	movwf	??_lcd_command^0,c
   813   0004A6  C034  F038         	movff	lcd_command@lt,??_lcd_command+1
   814   0004AA  90D8               	bcf	status,0,c
   815   0004AC  3638               	rlcf	(??_lcd_command+1)^0,f,c
   816   0004AE  90D8               	bcf	status,0,c
   817   0004B0  3638               	rlcf	(??_lcd_command+1)^0,f,c
   818   0004B2  90D8               	bcf	status,0,c
   819   0004B4  3638               	rlcf	(??_lcd_command+1)^0,f,c
   820   0004B6  503A               	movf	lcd_command@data^0,w,c
   821   0004B8  0BF0               	andlw	240
   822   0004BA  1038               	iorwf	(??_lcd_command+1)^0,w,c
   823   0004BC  1037               	iorwf	??_lcd_command^0,w,c
   824   0004BE  1036               	iorwf	lcd_command@rs^0,w,c
   825   0004C0  0904               	iorlw	4
   826   0004C2  EC69  F004         	call	_i2c_data_tx
   827   0004C6                     
   828                           ;main.c: 210:     delay(1);
   829   0004C6  0E01               	movlw	1
   830   0004C8  6E28               	movwf	delay@milliseconds^0,c
   831   0004CA  0E00               	movlw	0
   832   0004CC  6E29               	movwf	(delay@milliseconds+1)^0,c
   833   0004CE  0E00               	movlw	0
   834   0004D0  6E2A               	movwf	(delay@milliseconds+2)^0,c
   835   0004D2  0E00               	movlw	0
   836   0004D4  6E2B               	movwf	(delay@milliseconds+3)^0,c
   837   0004D6  EC0A  F001         	call	_delay	;wreg free
   838   0004DA                     
   839                           ;main.c: 211:     i2c_data_tx(lt<<3);
   840   0004DA  3834               	swapf	lcd_command@lt^0,w,c
   841   0004DC  42E8               	rrncf	wreg,f,c
   842   0004DE  0BF8               	andlw	248
   843   0004E0  EC69  F004         	call	_i2c_data_tx
   844   0004E4                     
   845                           ;main.c: 214:     i2c_data_tx(((data & 0x0F) <<4) | (lt << 3) | 4 | (rw <<1) | rs);
   846   0004E4  90D8               	bcf	status,0,c
   847   0004E6  3435               	rlcf	lcd_command@rw^0,w,c
   848   0004E8  6E37               	movwf	??_lcd_command^0,c
   849   0004EA  C034  F038         	movff	lcd_command@lt,??_lcd_command+1
   850   0004EE  90D8               	bcf	status,0,c
   851   0004F0  3638               	rlcf	(??_lcd_command+1)^0,f,c
   852   0004F2  90D8               	bcf	status,0,c
   853   0004F4  3638               	rlcf	(??_lcd_command+1)^0,f,c
   854   0004F6  90D8               	bcf	status,0,c
   855   0004F8  3638               	rlcf	(??_lcd_command+1)^0,f,c
   856   0004FA  C03A  F039         	movff	lcd_command@data,??_lcd_command+2
   857   0004FE  0E0F               	movlw	15
   858   000500  1639               	andwf	(??_lcd_command+2)^0,f,c
   859   000502  3839               	swapf	(??_lcd_command+2)^0,w,c
   860   000504  0BF0               	andlw	240
   861   000506  1038               	iorwf	(??_lcd_command+1)^0,w,c
   862   000508  1037               	iorwf	??_lcd_command^0,w,c
   863   00050A  1036               	iorwf	lcd_command@rs^0,w,c
   864   00050C  0904               	iorlw	4
   865   00050E  EC69  F004         	call	_i2c_data_tx
   866   000512                     
   867                           ;main.c: 215:     delay(1);
   868   000512  0E01               	movlw	1
   869   000514  6E28               	movwf	delay@milliseconds^0,c
   870   000516  0E00               	movlw	0
   871   000518  6E29               	movwf	(delay@milliseconds+1)^0,c
   872   00051A  0E00               	movlw	0
   873   00051C  6E2A               	movwf	(delay@milliseconds+2)^0,c
   874   00051E  0E00               	movlw	0
   875   000520  6E2B               	movwf	(delay@milliseconds+3)^0,c
   876   000522  EC0A  F001         	call	_delay	;wreg free
   877   000526                     
   878                           ;main.c: 216:     i2c_data_tx(lt<<3);
   879   000526  3834               	swapf	lcd_command@lt^0,w,c
   880   000528  42E8               	rrncf	wreg,f,c
   881   00052A  0BF8               	andlw	248
   882   00052C  EC69  F004         	call	_i2c_data_tx
   883   000530                     
   884                           ;main.c: 218:     i2c_stop();
   885   000530  EC9C  F004         	call	_i2c_stop	;wreg free
   886   000534  0012               	return		;funcret
   887   000536                     __end_of_lcd_command:
   888                           	callstack 0
   889                           
   890 ;; *************** function _lcd_message *****************
   891 ;; Defined at:
   892 ;;		line 221 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  message         2   30[COMRAM] PTR unsigned char 
   895 ;;		 -> STR_3(2), STR_2(9), STR_1(7), Receiver_buffer(10), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1
   907 ;;      Params:         2       0       0
   908 ;;      Locals:         0       0       0
   909 ;;      Temps:          0       0       0
   910 ;;      Totals:         2       0       0
   911 ;;Total ram usage:        2 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 6
   914 ;; This function calls:
   915 ;;		_i2c_start_and_addr
   916 ;;		_i2c_stop
   917 ;;		_lcd_char
   918 ;; This function is called by:
   919 ;;		_main
   920 ;;		_lcd_init
   921 ;;		_lcd_backspace
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text5
   926   00067E                     __ptext5:
   927                           	callstack 0
   928   00067E                     _lcd_message:
   929                           	callstack 24
   930   00067E                     
   931                           ;main.c: 221: void lcd_message(char* message);main.c: 222: {;main.c: 223:     i2c_start_
      +                          and_addr(0x4E);
   932   00067E  0E4E               	movlw	78
   933   000680  EC31  F004         	call	_i2c_start_and_addr
   934                           
   935                           ;main.c: 224:     while(*message != 0)
   936   000684  EF58  F003         	goto	l1192
   937   000688                     l1188:
   938                           
   939                           ;main.c: 225:     {;main.c: 226:         lcd_char(*message);
   940   000688  C01F  FFF6         	movff	lcd_message@message,tblptrl
   941   00068C  C020  FFF7         	movff	lcd_message@message+1,tblptrh
   942   000690  6AF8               	clrf	tblptru,c
   943   000692  0E01               	movlw	(high __ramtop+-1)
   944   000694  64F7               	cpfsgt	tblptrh,c
   945   000696  D003               	bra	u447
   946   000698  0008               	tblrd		*
   947   00069A  50F5               	movf	tablat,w,c
   948   00069C  D005               	bra	u440
   949   00069E                     u447:
   950   00069E  CFF6 FFE9          	movff	tblptrl,fsr0l
   951   0006A2  CFF7 FFEA          	movff	tblptrh,fsr0h
   952   0006A6  50EF               	movf	indf0,w,c
   953   0006A8                     u440:
   954   0006A8  EC13  F004         	call	_lcd_char
   955   0006AC                     
   956                           ;main.c: 227:         message++;
   957   0006AC  4A1F               	infsnz	lcd_message@message^0,f,c
   958   0006AE  2A20               	incf	(lcd_message@message+1)^0,f,c
   959   0006B0                     l1192:
   960                           
   961                           ;main.c: 224:     while(*message != 0)
   962   0006B0  C01F  FFF6         	movff	lcd_message@message,tblptrl
   963   0006B4  C020  FFF7         	movff	lcd_message@message+1,tblptrh
   964   0006B8  6AF8               	clrf	tblptru,c
   965   0006BA  0E01               	movlw	(high __ramtop+-1)
   966   0006BC  64F7               	cpfsgt	tblptrh,c
   967   0006BE  D003               	bra	u457
   968   0006C0  0008               	tblrd		*
   969   0006C2  50F5               	movf	tablat,w,c
   970   0006C4  D005               	bra	u450
   971   0006C6                     u457:
   972   0006C6  CFF6 FFE9          	movff	tblptrl,fsr0l
   973   0006CA  CFF7 FFEA          	movff	tblptrh,fsr0h
   974   0006CE  50EF               	movf	indf0,w,c
   975   0006D0                     u450:
   976   0006D0  0900               	iorlw	0
   977   0006D2  A4D8               	btfss	status,2,c
   978   0006D4  EF6E  F003         	goto	u461
   979   0006D8  EF70  F003         	goto	u460
   980   0006DC                     u461:
   981   0006DC  EF44  F003         	goto	l1188
   982   0006E0                     u460:
   983   0006E0                     
   984                           ;main.c: 229:     i2c_stop();
   985   0006E0  EC9C  F004         	call	_i2c_stop	;wreg free
   986   0006E4  0012               	return		;funcret
   987   0006E6                     __end_of_lcd_message:
   988                           	callstack 0
   989                           
   990 ;; *************** function _lcd_char *****************
   991 ;; Defined at:
   992 ;;		line 232 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  letter          1    wreg     unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  letter          1   29[COMRAM] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1
  1006 ;;      Params:         0       0       0
  1007 ;;      Locals:         1       0       0
  1008 ;;      Temps:          1       0       0
  1009 ;;      Totals:         2       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 5
  1013 ;; This function calls:
  1014 ;;		_i2c_data_tx
  1015 ;; This function is called by:
  1016 ;;		_lcd_message
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text6
  1021   000826                     __ptext6:
  1022                           	callstack 0
  1023   000826                     _lcd_char:
  1024                           	callstack 24
  1025                           
  1026                           ;incstack = 0
  1027                           ;lcd_char@letter stored from wreg
  1028   000826  6E1E               	movwf	lcd_char@letter^0,c
  1029   000828                     
  1030                           ;main.c: 232: void lcd_char(char letter);main.c: 233: {;main.c: 234:     i2c_data_tx((le
      +                          tter & 0xF0) | 0b1101);
  1031   000828  501E               	movf	lcd_char@letter^0,w,c
  1032   00082A  0BF0               	andlw	240
  1033   00082C  090D               	iorlw	13
  1034   00082E  EC69  F004         	call	_i2c_data_tx
  1035                           
  1036                           ;main.c: 235:     i2c_data_tx((letter & 0xF0) | 8);
  1037   000832  501E               	movf	lcd_char@letter^0,w,c
  1038   000834  0BF0               	andlw	240
  1039   000836  0908               	iorlw	8
  1040   000838  EC69  F004         	call	_i2c_data_tx
  1041                           
  1042                           ;main.c: 239:     i2c_data_tx(((letter & 0x0F) << 4) | 0b1101);
  1043   00083C  C01E  F01D         	movff	lcd_char@letter,??_lcd_char
  1044   000840  0E0F               	movlw	15
  1045   000842  161D               	andwf	??_lcd_char^0,f,c
  1046   000844  381D               	swapf	??_lcd_char^0,w,c
  1047   000846  0BF0               	andlw	240
  1048   000848  090D               	iorlw	13
  1049   00084A  EC69  F004         	call	_i2c_data_tx
  1050                           
  1051                           ;main.c: 240:     i2c_data_tx(((letter & 0x0F) << 4) | 8);
  1052   00084E  C01E  F01D         	movff	lcd_char@letter,??_lcd_char
  1053   000852  0E0F               	movlw	15
  1054   000854  161D               	andwf	??_lcd_char^0,f,c
  1055   000856  381D               	swapf	??_lcd_char^0,w,c
  1056   000858  0BF0               	andlw	240
  1057   00085A  0908               	iorlw	8
  1058   00085C  EC69  F004         	call	_i2c_data_tx
  1059   000860  0012               	return		;funcret
  1060   000862                     __end_of_lcd_char:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _lcd_clear *****************
  1064 ;; Defined at:
  1065 ;;		line 244 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1
  1079 ;;      Params:         0       0       0
  1080 ;;      Locals:         0       0       0
  1081 ;;      Temps:          0       0       0
  1082 ;;      Totals:         0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 6
  1086 ;; This function calls:
  1087 ;;		_delay
  1088 ;;		_i2c_data_tx
  1089 ;;		_i2c_start_and_addr
  1090 ;;		_i2c_stop
  1091 ;; This function is called by:
  1092 ;;		_lcd_init
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text7
  1097   0006E6                     __ptext7:
  1098                           	callstack 0
  1099   0006E6                     _lcd_clear:
  1100                           	callstack 23
  1101   0006E6                     
  1102                           ;main.c: 246:     i2c_start_and_addr(0x4E);
  1103   0006E6  0E4E               	movlw	78
  1104   0006E8  EC31  F004         	call	_i2c_start_and_addr
  1105                           
  1106                           ;main.c: 249:     i2c_data_tx(0b00001100);
  1107   0006EC  0E0C               	movlw	12
  1108   0006EE  EC69  F004         	call	_i2c_data_tx
  1109   0006F2                     
  1110                           ;main.c: 250:     delay(1);
  1111   0006F2  0E01               	movlw	1
  1112   0006F4  6E28               	movwf	delay@milliseconds^0,c
  1113   0006F6  0E00               	movlw	0
  1114   0006F8  6E29               	movwf	(delay@milliseconds+1)^0,c
  1115   0006FA  0E00               	movlw	0
  1116   0006FC  6E2A               	movwf	(delay@milliseconds+2)^0,c
  1117   0006FE  0E00               	movlw	0
  1118   000700  6E2B               	movwf	(delay@milliseconds+3)^0,c
  1119   000702  EC0A  F001         	call	_delay	;wreg free
  1120   000706                     
  1121                           ;main.c: 251:     i2c_data_tx(0b00001000);
  1122   000706  0E08               	movlw	8
  1123   000708  EC69  F004         	call	_i2c_data_tx
  1124   00070C                     
  1125                           ;main.c: 254:     i2c_data_tx(0b00011100);
  1126   00070C  0E1C               	movlw	28
  1127   00070E  EC69  F004         	call	_i2c_data_tx
  1128   000712                     
  1129                           ;main.c: 255:     delay(1);
  1130   000712  0E01               	movlw	1
  1131   000714  6E28               	movwf	delay@milliseconds^0,c
  1132   000716  0E00               	movlw	0
  1133   000718  6E29               	movwf	(delay@milliseconds+1)^0,c
  1134   00071A  0E00               	movlw	0
  1135   00071C  6E2A               	movwf	(delay@milliseconds+2)^0,c
  1136   00071E  0E00               	movlw	0
  1137   000720  6E2B               	movwf	(delay@milliseconds+3)^0,c
  1138   000722  EC0A  F001         	call	_delay	;wreg free
  1139                           
  1140                           ;main.c: 256:     i2c_data_tx(0b00011000);
  1141   000726  0E18               	movlw	24
  1142   000728  EC69  F004         	call	_i2c_data_tx
  1143   00072C                     
  1144                           ;main.c: 257:     delay(1);
  1145   00072C  0E01               	movlw	1
  1146   00072E  6E28               	movwf	delay@milliseconds^0,c
  1147   000730  0E00               	movlw	0
  1148   000732  6E29               	movwf	(delay@milliseconds+1)^0,c
  1149   000734  0E00               	movlw	0
  1150   000736  6E2A               	movwf	(delay@milliseconds+2)^0,c
  1151   000738  0E00               	movlw	0
  1152   00073A  6E2B               	movwf	(delay@milliseconds+3)^0,c
  1153   00073C  EC0A  F001         	call	_delay	;wreg free
  1154   000740                     
  1155                           ;main.c: 259:     i2c_stop();
  1156   000740  EC9C  F004         	call	_i2c_stop	;wreg free
  1157   000744  0012               	return		;funcret
  1158   000746                     __end_of_lcd_clear:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _i2c_stop *****************
  1162 ;; Defined at:
  1163 ;;		line 273 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		None
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1
  1177 ;;      Params:         0       0       0
  1178 ;;      Locals:         0       0       0
  1179 ;;      Temps:          0       0       0
  1180 ;;      Totals:         0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 4
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_lcd_command
  1188 ;;		_lcd_message
  1189 ;;		_lcd_clear
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text8
  1194   000938                     __ptext8:
  1195                           	callstack 0
  1196   000938                     _i2c_stop:
  1197                           	callstack 25
  1198   000938                     
  1199                           ;main.c: 276:     SSPCON2bits.PEN = 1;
  1200   000938  84C5               	bsf	197,2,c	;volatile
  1201   00093A                     l157:
  1202   00093A  A69E               	btfss	158,3,c	;volatile
  1203   00093C  EFA2  F004         	goto	u111
  1204   000940  EFA4  F004         	goto	u110
  1205   000944                     u111:
  1206   000944  EF9D  F004         	goto	l157
  1207   000948                     u110:
  1208   000948                     
  1209                           ;main.c: 278:     PIR1bits.SSPIF = 0;
  1210   000948  969E               	bcf	158,3,c	;volatile
  1211   00094A  0012               	return		;funcret
  1212   00094C                     __end_of_i2c_stop:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _i2c_start_and_addr *****************
  1216 ;; Defined at:
  1217 ;;		line 281 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  address         1    wreg     unsigned char 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  address         1   27[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1
  1231 ;;      Params:         0       0       0
  1232 ;;      Locals:         1       0       0
  1233 ;;      Temps:          0       0       0
  1234 ;;      Totals:         1       0       0
  1235 ;;Total ram usage:        1 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 4
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_lcd_command
  1242 ;;		_lcd_message
  1243 ;;		_lcd_clear
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text9
  1248   000862                     __ptext9:
  1249                           	callstack 0
  1250   000862                     _i2c_start_and_addr:
  1251                           	callstack 25
  1252                           
  1253                           ;incstack = 0
  1254                           ;i2c_start_and_addr@address stored from wreg
  1255   000862  6E1C               	movwf	i2c_start_and_addr@address^0,c
  1256   000864                     
  1257                           ;main.c: 281: void i2c_start_and_addr(unsigned char address);main.c: 282: {;main.c: 284:
      +                               SSPCON2bits.SEN = 1;
  1258   000864  80C5               	bsf	197,0,c	;volatile
  1259   000866                     l163:
  1260   000866  A69E               	btfss	158,3,c	;volatile
  1261   000868  EF38  F004         	goto	u61
  1262   00086C  EF3A  F004         	goto	u60
  1263   000870                     u61:
  1264   000870  EF33  F004         	goto	l163
  1265   000874                     u60:
  1266   000874                     
  1267                           ;main.c: 286:     PIR1bits.SSPIF = 0;
  1268   000874  969E               	bcf	158,3,c	;volatile
  1269   000876                     l886:
  1270                           
  1271                           ;main.c: 288:     {;main.c: 289:         SSPBUF = address;
  1272   000876  C01C  FFC9         	movff	i2c_start_and_addr@address,4041	;volatile
  1273   00087A                     l167:
  1274   00087A  A69E               	btfss	158,3,c	;volatile
  1275   00087C  EF42  F004         	goto	u71
  1276   000880  EF44  F004         	goto	u70
  1277   000884                     u71:
  1278   000884  EF3D  F004         	goto	l167
  1279   000888                     u70:
  1280   000888                     
  1281                           ;main.c: 291:         PIR1bits.SSPIF = 0;
  1282   000888  969E               	bcf	158,3,c	;volatile
  1283                           
  1284                           ;main.c: 292:     }while(SSPCON2bits.ACKSTAT);
  1285   00088A  BCC5               	btfsc	197,6,c	;volatile
  1286   00088C  EF4A  F004         	goto	u81
  1287   000890  EF4C  F004         	goto	u80
  1288   000894                     u81:
  1289   000894  EF3B  F004         	goto	l886
  1290   000898                     u80:
  1291   000898  0012               	return		;funcret
  1292   00089A                     __end_of_i2c_start_and_addr:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _i2c_data_tx *****************
  1296 ;; Defined at:
  1297 ;;		line 262 in file "main.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  data            1    wreg     unsigned char 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  data            1   27[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1
  1311 ;;      Params:         0       0       0
  1312 ;;      Locals:         1       0       0
  1313 ;;      Temps:          0       0       0
  1314 ;;      Totals:         1       0       0
  1315 ;;Total ram usage:        1 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 4
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_lcd_command
  1322 ;;		_lcd_char
  1323 ;;		_lcd_clear
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text10
  1328   0008D2                     __ptext10:
  1329                           	callstack 0
  1330   0008D2                     _i2c_data_tx:
  1331                           	callstack 24
  1332                           
  1333                           ;incstack = 0
  1334                           ;i2c_data_tx@data stored from wreg
  1335   0008D2  6E1C               	movwf	i2c_data_tx@data^0,c
  1336   0008D4                     l149:
  1337   0008D4                     
  1338                           ;main.c: 265:     {;main.c: 266:         SSPBUF = data;
  1339   0008D4  C01C  FFC9         	movff	i2c_data_tx@data,4041	;volatile
  1340   0008D8                     l150:
  1341   0008D8  A69E               	btfss	158,3,c	;volatile
  1342   0008DA  EF71  F004         	goto	u91
  1343   0008DE  EF73  F004         	goto	u90
  1344   0008E2                     u91:
  1345   0008E2  EF6C  F004         	goto	l150
  1346   0008E6                     u90:
  1347   0008E6                     
  1348                           ;main.c: 268:         PIR1bits.SSPIF = 0;
  1349   0008E6  969E               	bcf	158,3,c	;volatile
  1350                           
  1351                           ;main.c: 270:     }while(SSPCON2bits.ACKSTAT);
  1352   0008E8  BCC5               	btfsc	197,6,c	;volatile
  1353   0008EA  EF79  F004         	goto	u101
  1354   0008EE  EF7B  F004         	goto	u100
  1355   0008F2                     u101:
  1356   0008F2  EF6A  F004         	goto	l149
  1357   0008F6                     u100:
  1358   0008F6  0012               	return		;funcret
  1359   0008F8                     __end_of_i2c_data_tx:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _delay *****************
  1363 ;; Defined at:
  1364 ;;		line 126 in file "main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  milliseconds    4   39[COMRAM] unsigned long 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  timer_value     8   43[COMRAM] unsigned long long 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1
  1378 ;;      Params:         4       0       0
  1379 ;;      Locals:         8       0       0
  1380 ;;      Temps:          0       0       0
  1381 ;;      Totals:        12       0       0
  1382 ;;Total ram usage:       12 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 5
  1385 ;; This function calls:
  1386 ;;		___lmul
  1387 ;; This function is called by:
  1388 ;;		_lcd_command
  1389 ;;		_lcd_clear
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text11
  1394   000214                     __ptext11:
  1395                           	callstack 0
  1396   000214                     _delay:
  1397                           	callstack 22
  1398   000214                     
  1399                           ;main.c: 126: void delay(unsigned long milliseconds);main.c: 127: {;main.c: 128:     T1C
      +                          ON = 0b10110000;
  1400   000214  0EB0               	movlw	176
  1401   000216  6ECD               	movwf	205,c	;volatile
  1402   000218                     
  1403                           ;main.c: 129:     PIE1bits.TMR1IE = 0;
  1404   000218  909D               	bcf	157,0,c	;volatile
  1405   00021A                     
  1406                           ;main.c: 130:     unsigned long long timer_value = (milliseconds) * 1000 ;
  1407   00021A  C028  F01C         	movff	delay@milliseconds,___lmul@multiplier
  1408   00021E  C029  F01D         	movff	delay@milliseconds+1,___lmul@multiplier+1
  1409   000222  C02A  F01E         	movff	delay@milliseconds+2,___lmul@multiplier+2
  1410   000226  C02B  F01F         	movff	delay@milliseconds+3,___lmul@multiplier+3
  1411   00022A  0EE8               	movlw	232
  1412   00022C  6E20               	movwf	___lmul@multiplicand^0,c
  1413   00022E  0E03               	movlw	3
  1414   000230  6E21               	movwf	(___lmul@multiplicand+1)^0,c
  1415   000232  0E00               	movlw	0
  1416   000234  6E22               	movwf	(___lmul@multiplicand+2)^0,c
  1417   000236  0E00               	movlw	0
  1418   000238  6E23               	movwf	(___lmul@multiplicand+3)^0,c
  1419   00023A  ECD5  F002         	call	___lmul	;wreg free
  1420   00023E  501C               	movf	?___lmul^0,w,c
  1421   000240  6E2C               	movwf	delay@timer_value^0,c
  1422   000242  501D               	movf	(?___lmul+1)^0,w,c
  1423   000244  6E2D               	movwf	(delay@timer_value+1)^0,c
  1424   000246  501E               	movf	(?___lmul+2)^0,w,c
  1425   000248  6E2E               	movwf	(delay@timer_value+2)^0,c
  1426   00024A  501F               	movf	(?___lmul+3)^0,w,c
  1427   00024C  6E2F               	movwf	(delay@timer_value+3)^0,c
  1428   00024E  6A30               	clrf	(delay@timer_value+4)^0,c
  1429   000250  6A31               	clrf	(delay@timer_value+5)^0,c
  1430   000252  6A32               	clrf	(delay@timer_value+6)^0,c
  1431   000254  6A33               	clrf	(delay@timer_value+7)^0,c
  1432                           
  1433                           ;main.c: 131:     while(timer_value > 65535)
  1434   000256  EF4B  F001         	goto	l1150
  1435   00025A                     l1142:
  1436                           
  1437                           ;main.c: 132:     {;main.c: 133:         timer_value -= 65535;
  1438   00025A  0EFF               	movlw	255
  1439   00025C  5E2C               	subwf	delay@timer_value^0,f,c
  1440   00025E  0EFF               	movlw	255
  1441   000260  5A2D               	subwfb	(delay@timer_value+1)^0,f,c
  1442   000262  0E00               	movlw	0
  1443   000264  5A2E               	subwfb	(delay@timer_value+2)^0,f,c
  1444   000266  0E00               	movlw	0
  1445   000268  5A2F               	subwfb	(delay@timer_value+3)^0,f,c
  1446   00026A  0E00               	movlw	0
  1447   00026C  5A30               	subwfb	(delay@timer_value+4)^0,f,c
  1448   00026E  0E00               	movlw	0
  1449   000270  5A31               	subwfb	(delay@timer_value+5)^0,f,c
  1450   000272  0E00               	movlw	0
  1451   000274  5A32               	subwfb	(delay@timer_value+6)^0,f,c
  1452   000276  0E00               	movlw	0
  1453   000278  5A33               	subwfb	(delay@timer_value+7)^0,f,c
  1454   00027A                     
  1455                           ;main.c: 134:         TMR1H = 0;
  1456   00027A  0E00               	movlw	0
  1457   00027C  6ECF               	movwf	207,c	;volatile
  1458   00027E                     
  1459                           ;main.c: 135:         TMR1L = 0;
  1460   00027E  0E00               	movlw	0
  1461   000280  6ECE               	movwf	206,c	;volatile
  1462   000282                     
  1463                           ;main.c: 136:         T1CONbits.TMR1ON = 1;
  1464   000282  80CD               	bsf	205,0,c	;volatile
  1465   000284                     l113:
  1466   000284  A09E               	btfss	158,0,c	;volatile
  1467   000286  EF47  F001         	goto	u391
  1468   00028A  EF49  F001         	goto	u390
  1469   00028E                     u391:
  1470   00028E  EF42  F001         	goto	l113
  1471   000292                     u390:
  1472   000292                     
  1473                           ;main.c: 138:         T1CONbits.TMR1ON = 0;
  1474   000292  90CD               	bcf	205,0,c	;volatile
  1475                           
  1476                           ;main.c: 139:         PIR1bits.TMR1IF = 0;
  1477   000294  909E               	bcf	158,0,c	;volatile
  1478   000296                     l1150:
  1479                           
  1480                           ;main.c: 131:     while(timer_value > 65535)
  1481   000296  5033               	movf	(delay@timer_value+7)^0,w,c
  1482   000298  1032               	iorwf	(delay@timer_value+6)^0,w,c
  1483   00029A  1031               	iorwf	(delay@timer_value+5)^0,w,c
  1484   00029C  1030               	iorwf	(delay@timer_value+4)^0,w,c
  1485   00029E  102F               	iorwf	(delay@timer_value+3)^0,w,c
  1486   0002A0  E106               	bnz	u401
  1487   0002A2  042E               	decf	(delay@timer_value+2)^0,w,c
  1488   0002A4  B0D8               	btfsc	status,0,c
  1489   0002A6  EF57  F001         	goto	u401
  1490   0002AA  EF59  F001         	goto	u400
  1491   0002AE                     u401:
  1492   0002AE  EF2D  F001         	goto	l1142
  1493   0002B2                     u400:
  1494   0002B2                     
  1495                           ;main.c: 141:     timer_value = 65535 - timer_value + 1;
  1496   0002B2  502C               	movf	delay@timer_value^0,w,c
  1497   0002B4  0800               	sublw	0
  1498   0002B6  6E2C               	movwf	delay@timer_value^0,c
  1499   0002B8  0E00               	movlw	0
  1500   0002BA  542D               	subfwb	(delay@timer_value+1)^0,w,c
  1501   0002BC  6E2D               	movwf	(delay@timer_value+1)^0,c
  1502   0002BE  0E01               	movlw	1
  1503   0002C0  542E               	subfwb	(delay@timer_value+2)^0,w,c
  1504   0002C2  6E2E               	movwf	(delay@timer_value+2)^0,c
  1505   0002C4  0E00               	movlw	0
  1506   0002C6  542F               	subfwb	(delay@timer_value+3)^0,w,c
  1507   0002C8  6E2F               	movwf	(delay@timer_value+3)^0,c
  1508   0002CA  0E00               	movlw	0
  1509   0002CC  5430               	subfwb	(delay@timer_value+4)^0,w,c
  1510   0002CE  6E30               	movwf	(delay@timer_value+4)^0,c
  1511   0002D0  0E00               	movlw	0
  1512   0002D2  5431               	subfwb	(delay@timer_value+5)^0,w,c
  1513   0002D4  6E31               	movwf	(delay@timer_value+5)^0,c
  1514   0002D6  0E00               	movlw	0
  1515   0002D8  5432               	subfwb	(delay@timer_value+6)^0,w,c
  1516   0002DA  6E32               	movwf	(delay@timer_value+6)^0,c
  1517   0002DC  0E00               	movlw	0
  1518   0002DE  5433               	subfwb	(delay@timer_value+7)^0,w,c
  1519   0002E0  6E33               	movwf	(delay@timer_value+7)^0,c
  1520   0002E2                     
  1521                           ;main.c: 142:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  1522   0002E2  0E00               	movlw	0
  1523   0002E4  6ECF               	movwf	207,c	;volatile
  1524   0002E6                     
  1525                           ;main.c: 143:     TMR1L = (unsigned char)(0xFF & timer_value);
  1526   0002E6  C02C  FFCE         	movff	delay@timer_value,4046	;volatile
  1527   0002EA                     
  1528                           ;main.c: 144:     T1CONbits.TMR1ON = 1;
  1529   0002EA  80CD               	bsf	205,0,c	;volatile
  1530   0002EC                     l117:
  1531   0002EC  A09E               	btfss	158,0,c	;volatile
  1532   0002EE  EF7B  F001         	goto	u411
  1533   0002F2  EF7D  F001         	goto	u410
  1534   0002F6                     u411:
  1535   0002F6  EF76  F001         	goto	l117
  1536   0002FA                     u410:
  1537   0002FA                     
  1538                           ;main.c: 146:     T1CONbits.TMR1ON = 0;
  1539   0002FA  90CD               	bcf	205,0,c	;volatile
  1540                           
  1541                           ;main.c: 147:     PIR1bits.TMR1IF = 0;
  1542   0002FC  909E               	bcf	158,0,c	;volatile
  1543   0002FE  0012               	return		;funcret
  1544   000300                     __end_of_delay:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function ___lmul *****************
  1548 ;; Defined at:
  1549 ;;		line 15 in file "F:\Program Files\MicroChip\XC8\v2.45\pic\sources\c99\common\Umul32.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  multiplier      4   27[COMRAM] unsigned long 
  1552 ;;  multiplicand    4   31[COMRAM] unsigned long 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  product         4   35[COMRAM] unsigned long 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  4   27[COMRAM] unsigned long 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1
  1564 ;;      Params:         8       0       0
  1565 ;;      Locals:         4       0       0
  1566 ;;      Temps:          0       0       0
  1567 ;;      Totals:        12       0       0
  1568 ;;Total ram usage:       12 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 4
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_delay
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text12
  1579   0005AA                     __ptext12:
  1580                           	callstack 0
  1581   0005AA                     ___lmul:
  1582                           	callstack 22
  1583   0005AA  0E00               	movlw	0
  1584   0005AC  6E24               	movwf	___lmul@product^0,c
  1585   0005AE  0E00               	movlw	0
  1586   0005B0  6E25               	movwf	(___lmul@product+1)^0,c
  1587   0005B2  0E00               	movlw	0
  1588   0005B4  6E26               	movwf	(___lmul@product+2)^0,c
  1589   0005B6  0E00               	movlw	0
  1590   0005B8  6E27               	movwf	(___lmul@product+3)^0,c
  1591   0005BA                     l1128:
  1592   0005BA  A01C               	btfss	___lmul@multiplier^0,0,c
  1593   0005BC  EFE2  F002         	goto	u371
  1594   0005C0  EFE4  F002         	goto	u370
  1595   0005C4                     u371:
  1596   0005C4  EFEC  F002         	goto	l1132
  1597   0005C8                     u370:
  1598   0005C8  5020               	movf	___lmul@multiplicand^0,w,c
  1599   0005CA  2624               	addwf	___lmul@product^0,f,c
  1600   0005CC  5021               	movf	(___lmul@multiplicand+1)^0,w,c
  1601   0005CE  2225               	addwfc	(___lmul@product+1)^0,f,c
  1602   0005D0  5022               	movf	(___lmul@multiplicand+2)^0,w,c
  1603   0005D2  2226               	addwfc	(___lmul@product+2)^0,f,c
  1604   0005D4  5023               	movf	(___lmul@multiplicand+3)^0,w,c
  1605   0005D6  2227               	addwfc	(___lmul@product+3)^0,f,c
  1606   0005D8                     l1132:
  1607   0005D8  90D8               	bcf	status,0,c
  1608   0005DA  3620               	rlcf	___lmul@multiplicand^0,f,c
  1609   0005DC  3621               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1610   0005DE  3622               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1611   0005E0  3623               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1612   0005E2  90D8               	bcf	status,0,c
  1613   0005E4  321F               	rrcf	(___lmul@multiplier+3)^0,f,c
  1614   0005E6  321E               	rrcf	(___lmul@multiplier+2)^0,f,c
  1615   0005E8  321D               	rrcf	(___lmul@multiplier+1)^0,f,c
  1616   0005EA  321C               	rrcf	___lmul@multiplier^0,f,c
  1617   0005EC  501C               	movf	___lmul@multiplier^0,w,c
  1618   0005EE  101D               	iorwf	(___lmul@multiplier+1)^0,w,c
  1619   0005F0  101E               	iorwf	(___lmul@multiplier+2)^0,w,c
  1620   0005F2  101F               	iorwf	(___lmul@multiplier+3)^0,w,c
  1621   0005F4  A4D8               	btfss	status,2,c
  1622   0005F6  EFFF  F002         	goto	u381
  1623   0005FA  EF01  F003         	goto	u380
  1624   0005FE                     u381:
  1625   0005FE  EFDD  F002         	goto	l1128
  1626   000602                     u380:
  1627   000602  C024  F01C         	movff	___lmul@product,?___lmul
  1628   000606  C025  F01D         	movff	___lmul@product+1,?___lmul+1
  1629   00060A  C026  F01E         	movff	___lmul@product+2,?___lmul+2
  1630   00060E  C027  F01F         	movff	___lmul@product+3,?___lmul+3
  1631   000612  0012               	return		;funcret
  1632   000614                     __end_of___lmul:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _ISR *****************
  1636 ;; Defined at:
  1637 ;;		line 79 in file "main.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1
  1651 ;;      Params:         0       0       0
  1652 ;;      Locals:         0       0       0
  1653 ;;      Temps:          3       0       0
  1654 ;;      Totals:         3       0       0
  1655 ;;Total ram usage:        3 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 3
  1658 ;; This function calls:
  1659 ;;		i2_lcd_clear
  1660 ;; This function is called by:
  1661 ;;		Interrupt level 2
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	intcode
  1666   000008                     __pintcode:
  1667                           	callstack 0
  1668   000008                     _ISR:
  1669                           	callstack 22
  1670                           
  1671                           ;incstack = 0
  1672   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1673   00000A  CFD9 F01A          	movff	fsr2l,??_ISR+1
  1674   00000E  CFDA F01B          	movff	fsr2h,??_ISR+2
  1675   000012                     
  1676                           ;main.c: 81:     if(INTCONbits.INT0IF == 1)
  1677   000012  A2F2               	btfss	242,1,c	;volatile
  1678   000014  EF0E  F000         	goto	i2u60_41
  1679   000018  EF10  F000         	goto	i2u60_40
  1680   00001C                     i2u60_41:
  1681   00001C  EF4B  F000         	goto	i2l1336
  1682   000020                     i2u60_40:
  1683   000020                     
  1684                           ;main.c: 82:     {;main.c: 84:         T0CONbits.TMR0ON = 0;
  1685   000020  9ED5               	bcf	213,7,c	;volatile
  1686   000022                     
  1687                           ;main.c: 85:         TMR0H = 0x00;
  1688   000022  0E00               	movlw	0
  1689   000024  6ED7               	movwf	215,c	;volatile
  1690                           
  1691                           ;main.c: 86:         TMR0L = 0x00;
  1692   000026  0E00               	movlw	0
  1693   000028  6ED6               	movwf	214,c	;volatile
  1694   00002A                     
  1695                           ;main.c: 89:         current_character = (PORTB & 0x1F) >> 1;
  1696   00002A  90D8               	bcf	status,0,c
  1697   00002C  3081               	rrcf	129,w,c	;volatile
  1698   00002E  0B0F               	andlw	15
  1699   000030  6E43               	movwf	_current_character^0,c
  1700   000032                     
  1701                           ;main.c: 91:         INTCONbits.INT0IF = 0;
  1702   000032  92F2               	bcf	242,1,c	;volatile
  1703   000034                     i2l101:
  1704   000034  A2F2               	btfss	242,1,c	;volatile
  1705   000036  EF1F  F000         	goto	i2u61_41
  1706   00003A  EF21  F000         	goto	i2u61_40
  1707   00003E                     i2u61_41:
  1708   00003E  EF1A  F000         	goto	i2l101
  1709   000042                     i2u61_40:
  1710   000042                     
  1711                           ;main.c: 93:         current_character = current_character | ((PORTB & 0x1E) << 3);
  1712   000042  CF81 F019          	movff	3969,??_ISR	;volatile
  1713   000046  0E1E               	movlw	30
  1714   000048  1619               	andwf	??_ISR^0,f,c
  1715   00004A  90D8               	bcf	status,0,c
  1716   00004C  3619               	rlcf	??_ISR^0,f,c
  1717   00004E  90D8               	bcf	status,0,c
  1718   000050  3619               	rlcf	??_ISR^0,f,c
  1719   000052  90D8               	bcf	status,0,c
  1720   000054  3419               	rlcf	??_ISR^0,w,c
  1721   000056  1043               	iorwf	_current_character^0,w,c
  1722   000058  6E43               	movwf	_current_character^0,c
  1723   00005A                     
  1724                           ;main.c: 94:         INTCONbits.INT0IF = 0;
  1725   00005A  92F2               	bcf	242,1,c	;volatile
  1726   00005C                     
  1727                           ;main.c: 96:         T0CONbits.TMR0ON = 1;
  1728   00005C  8ED5               	bsf	213,7,c	;volatile
  1729                           
  1730                           ;main.c: 97:         if(current_character != 0xAA)
  1731   00005E  0EAA               	movlw	170
  1732   000060  1843               	xorwf	_current_character^0,w,c
  1733   000062  B4D8               	btfsc	status,2,c
  1734   000064  EF36  F000         	goto	i2u62_41
  1735   000068  EF38  F000         	goto	i2u62_40
  1736   00006C                     i2u62_41:
  1737   00006C  EF43  F000         	goto	i2l1334
  1738   000070                     i2u62_40:
  1739   000070                     
  1740                           ;main.c: 98:         {;main.c: 99:             Receiver_buffer[Buffer_index] = current_c
      +                          haracter;
  1741   000070  503F               	movf	_Buffer_index^0,w,c
  1742   000072  0F44               	addlw	low _Receiver_buffer
  1743   000074  6ED9               	movwf	fsr2l,c
  1744   000076  6ADA               	clrf	fsr2h,c
  1745   000078  C043  FFDF         	movff	_current_character,indf2
  1746   00007C                     
  1747                           ;main.c: 100:             Buffer_index++;
  1748   00007C  2A3F               	incf	_Buffer_index^0,f,c
  1749   00007E                     
  1750                           ;main.c: 101:             new_input = 1;
  1751   00007E  0E01               	movlw	1
  1752   000080  6E41               	movwf	_new_input^0,c
  1753                           
  1754                           ;main.c: 102:         }
  1755   000082  EF4B  F000         	goto	i2l1336
  1756   000086                     i2l1334:
  1757                           
  1758                           ;main.c: 104:         {;main.c: 105:             new_input = 0;
  1759   000086  0E00               	movlw	0
  1760   000088  6E41               	movwf	_new_input^0,c
  1761                           
  1762                           ;main.c: 106:             character_match_cnt = 0;
  1763   00008A  0E00               	movlw	0
  1764   00008C  6E40               	movwf	_character_match_cnt^0,c
  1765                           
  1766                           ;main.c: 107:             current_character = 0;
  1767   00008E  0E00               	movlw	0
  1768   000090  6E43               	movwf	_current_character^0,c
  1769                           
  1770                           ;main.c: 108:             previous_character = 0;
  1771   000092  0E00               	movlw	0
  1772   000094  6E42               	movwf	_previous_character^0,c
  1773   000096                     i2l1336:
  1774                           
  1775                           ;main.c: 111:     if(INTCONbits.TMR0IF == 1)
  1776   000096  A4F2               	btfss	242,2,c	;volatile
  1777   000098  EF50  F000         	goto	i2u63_41
  1778   00009C  EF52  F000         	goto	i2u63_40
  1779   0000A0                     i2u63_41:
  1780   0000A0  EF69  F000         	goto	i2l108
  1781   0000A4                     i2u63_40:
  1782   0000A4                     
  1783                           ;main.c: 112:     {;main.c: 114:         INTCONbits.TMR0IF = 0;
  1784   0000A4  94F2               	bcf	242,2,c	;volatile
  1785   0000A6                     
  1786                           ;main.c: 115:         Time_out++;
  1787   0000A6  2A3E               	incf	_Time_out^0,f,c
  1788   0000A8                     
  1789                           ;main.c: 116:         if(Time_out == 5 && !new_input)
  1790   0000A8  0E05               	movlw	5
  1791   0000AA  183E               	xorwf	_Time_out^0,w,c
  1792   0000AC  A4D8               	btfss	status,2,c
  1793   0000AE  EF5B  F000         	goto	i2u64_41
  1794   0000B2  EF5D  F000         	goto	i2u64_40
  1795   0000B6                     i2u64_41:
  1796   0000B6  EF69  F000         	goto	i2l108
  1797   0000BA                     i2u64_40:
  1798   0000BA  5041               	movf	_new_input^0,w,c
  1799   0000BC  A4D8               	btfss	status,2,c
  1800   0000BE  EF63  F000         	goto	i2u65_41
  1801   0000C2  EF65  F000         	goto	i2u65_40
  1802   0000C6                     i2u65_41:
  1803   0000C6  EF69  F000         	goto	i2l108
  1804   0000CA                     i2u65_40:
  1805   0000CA                     
  1806                           ;main.c: 117:         {;main.c: 118:             lcd_clear();
  1807   0000CA  ECA3  F003         	call	i2_lcd_clear	;wreg free
  1808   0000CE                     
  1809                           ;main.c: 119:             Time_out = 0;
  1810   0000CE  0E00               	movlw	0
  1811   0000D0  6E3E               	movwf	_Time_out^0,c
  1812   0000D2                     i2l108:
  1813   0000D2  C01B  FFDA         	movff	??_ISR+2,fsr2h
  1814   0000D6  C01A  FFD9         	movff	??_ISR+1,fsr2l
  1815   0000DA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1816   0000DC  0011               	retfie		f
  1817   0000DE                     __end_of_ISR:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function i2_lcd_clear *****************
  1821 ;; Defined at:
  1822 ;;		line 244 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1
  1836 ;;      Params:         0       0       0
  1837 ;;      Locals:         0       0       0
  1838 ;;      Temps:          0       0       0
  1839 ;;      Totals:         0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 2
  1843 ;; This function calls:
  1844 ;;		i2_delay
  1845 ;;		i2_i2c_data_tx
  1846 ;;		i2_i2c_start_and_addr
  1847 ;;		i2_i2c_stop
  1848 ;; This function is called by:
  1849 ;;		_ISR
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text14
  1854   000746                     __ptext14:
  1855                           	callstack 0
  1856   000746                     i2_lcd_clear:
  1857                           	callstack 22
  1858   000746                     
  1859                           ;main.c: 246:     i2c_start_and_addr(0x4E);
  1860   000746  0E4E               	movlw	78
  1861   000748  EC4D  F004         	call	i2_i2c_start_and_addr
  1862                           
  1863                           ;main.c: 249:     i2c_data_tx(0b00001100);
  1864   00074C  0E0C               	movlw	12
  1865   00074E  EC7C  F004         	call	i2_i2c_data_tx
  1866   000752                     
  1867                           ;main.c: 250:     delay(1);
  1868   000752  0E01               	movlw	1
  1869   000754  6E0D               	movwf	i2delay@milliseconds^0,c
  1870   000756  0E00               	movlw	0
  1871   000758  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  1872   00075A  0E00               	movlw	0
  1873   00075C  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  1874   00075E  0E00               	movlw	0
  1875   000760  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  1876   000762  EC80  F001         	call	i2_delay	;wreg free
  1877   000766                     
  1878                           ;main.c: 251:     i2c_data_tx(0b00001000);
  1879   000766  0E08               	movlw	8
  1880   000768  EC7C  F004         	call	i2_i2c_data_tx
  1881   00076C                     
  1882                           ;main.c: 254:     i2c_data_tx(0b00011100);
  1883   00076C  0E1C               	movlw	28
  1884   00076E  EC7C  F004         	call	i2_i2c_data_tx
  1885   000772                     
  1886                           ;main.c: 255:     delay(1);
  1887   000772  0E01               	movlw	1
  1888   000774  6E0D               	movwf	i2delay@milliseconds^0,c
  1889   000776  0E00               	movlw	0
  1890   000778  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  1891   00077A  0E00               	movlw	0
  1892   00077C  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  1893   00077E  0E00               	movlw	0
  1894   000780  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  1895   000782  EC80  F001         	call	i2_delay	;wreg free
  1896                           
  1897                           ;main.c: 256:     i2c_data_tx(0b00011000);
  1898   000786  0E18               	movlw	24
  1899   000788  EC7C  F004         	call	i2_i2c_data_tx
  1900   00078C                     
  1901                           ;main.c: 257:     delay(1);
  1902   00078C  0E01               	movlw	1
  1903   00078E  6E0D               	movwf	i2delay@milliseconds^0,c
  1904   000790  0E00               	movlw	0
  1905   000792  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  1906   000794  0E00               	movlw	0
  1907   000796  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  1908   000798  0E00               	movlw	0
  1909   00079A  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  1910   00079C  EC80  F001         	call	i2_delay	;wreg free
  1911   0007A0                     
  1912                           ;main.c: 259:     i2c_stop();
  1913   0007A0  ECA6  F004         	call	i2_i2c_stop	;wreg free
  1914   0007A4  0012               	return		;funcret
  1915   0007A6                     __end_ofi2_lcd_clear:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function i2_i2c_stop *****************
  1919 ;; Defined at:
  1920 ;;		line 273 in file "main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		None
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1
  1934 ;;      Params:         0       0       0
  1935 ;;      Locals:         0       0       0
  1936 ;;      Temps:          0       0       0
  1937 ;;      Totals:         0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		i2_lcd_clear
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text15
  1948   00094C                     __ptext15:
  1949                           	callstack 0
  1950   00094C                     i2_i2c_stop:
  1951                           	callstack 23
  1952   00094C                     
  1953                           ;main.c: 276:     SSPCON2bits.PEN = 1;
  1954   00094C  84C5               	bsf	197,2,c	;volatile
  1955   00094E                     i2l157:
  1956   00094E  A69E               	btfss	158,3,c	;volatile
  1957   000950  EFAC  F004         	goto	i2u23_41
  1958   000954  EFAE  F004         	goto	i2u23_40
  1959   000958                     i2u23_41:
  1960   000958  EFA7  F004         	goto	i2l157
  1961   00095C                     i2u23_40:
  1962   00095C                     
  1963                           ;main.c: 278:     PIR1bits.SSPIF = 0;
  1964   00095C  969E               	bcf	158,3,c	;volatile
  1965   00095E  0012               	return		;funcret
  1966   000960                     __end_ofi2_i2c_stop:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function i2_i2c_start_and_addr *****************
  1970 ;; Defined at:
  1971 ;;		line 281 in file "main.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  address         1    wreg     unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  address         1    0[COMRAM] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1
  1985 ;;      Params:         0       0       0
  1986 ;;      Locals:         1       0       0
  1987 ;;      Temps:          0       0       0
  1988 ;;      Totals:         1       0       0
  1989 ;;Total ram usage:        1 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		i2_lcd_clear
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text16
  1999   00089A                     __ptext16:
  2000                           	callstack 0
  2001   00089A                     i2_i2c_start_and_addr:
  2002                           	callstack 23
  2003                           
  2004                           ;incstack = 0
  2005                           ;i2i2c_start_and_addr@address stored from wreg
  2006   00089A  6E01               	movwf	i2i2c_start_and_addr@address^0,c
  2007   00089C                     
  2008                           ;main.c: 281: void i2c_start_and_addr(unsigned char address);main.c: 282: {;main.c: 284:
      +                               SSPCON2bits.SEN = 1;
  2009   00089C  80C5               	bsf	197,0,c	;volatile
  2010   00089E                     i2l163:
  2011   00089E  A69E               	btfss	158,3,c	;volatile
  2012   0008A0  EF54  F004         	goto	i2u53_41
  2013   0008A4  EF56  F004         	goto	i2u53_40
  2014   0008A8                     i2u53_41:
  2015   0008A8  EF4F  F004         	goto	i2l163
  2016   0008AC                     i2u53_40:
  2017   0008AC                     
  2018                           ;main.c: 286:     PIR1bits.SSPIF = 0;
  2019   0008AC  969E               	bcf	158,3,c	;volatile
  2020   0008AE                     i2l1244:
  2021                           
  2022                           ;main.c: 288:     {;main.c: 289:         SSPBUF = address;
  2023   0008AE  C001  FFC9         	movff	i2i2c_start_and_addr@address,4041	;volatile
  2024   0008B2                     i2l167:
  2025   0008B2  A69E               	btfss	158,3,c	;volatile
  2026   0008B4  EF5E  F004         	goto	i2u54_41
  2027   0008B8  EF60  F004         	goto	i2u54_40
  2028   0008BC                     i2u54_41:
  2029   0008BC  EF59  F004         	goto	i2l167
  2030   0008C0                     i2u54_40:
  2031   0008C0                     
  2032                           ;main.c: 291:         PIR1bits.SSPIF = 0;
  2033   0008C0  969E               	bcf	158,3,c	;volatile
  2034                           
  2035                           ;main.c: 292:     }while(SSPCON2bits.ACKSTAT);
  2036   0008C2  BCC5               	btfsc	197,6,c	;volatile
  2037   0008C4  EF66  F004         	goto	i2u55_41
  2038   0008C8  EF68  F004         	goto	i2u55_40
  2039   0008CC                     i2u55_41:
  2040   0008CC  EF57  F004         	goto	i2l1244
  2041   0008D0                     i2u55_40:
  2042   0008D0  0012               	return		;funcret
  2043   0008D2                     __end_ofi2_i2c_start_and_addr:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function i2_i2c_data_tx *****************
  2047 ;; Defined at:
  2048 ;;		line 262 in file "main.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  data            1    wreg     unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  data            1    0[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1
  2062 ;;      Params:         0       0       0
  2063 ;;      Locals:         1       0       0
  2064 ;;      Temps:          0       0       0
  2065 ;;      Totals:         1       0       0
  2066 ;;Total ram usage:        1 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		i2_lcd_clear
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text17
  2076   0008F8                     __ptext17:
  2077                           	callstack 0
  2078   0008F8                     i2_i2c_data_tx:
  2079                           	callstack 23
  2080                           
  2081                           ;incstack = 0
  2082                           ;i2i2c_data_tx@data stored from wreg
  2083   0008F8  6E01               	movwf	i2i2c_data_tx@data^0,c
  2084   0008FA                     i2l149:
  2085   0008FA                     
  2086                           ;main.c: 265:     {;main.c: 266:         SSPBUF = data;
  2087   0008FA  C001  FFC9         	movff	i2i2c_data_tx@data,4041	;volatile
  2088   0008FE                     i2l150:
  2089   0008FE  A69E               	btfss	158,3,c	;volatile
  2090   000900  EF84  F004         	goto	i2u51_41
  2091   000904  EF86  F004         	goto	i2u51_40
  2092   000908                     i2u51_41:
  2093   000908  EF7F  F004         	goto	i2l150
  2094   00090C                     i2u51_40:
  2095   00090C                     
  2096                           ;main.c: 268:         PIR1bits.SSPIF = 0;
  2097   00090C  969E               	bcf	158,3,c	;volatile
  2098                           
  2099                           ;main.c: 270:     }while(SSPCON2bits.ACKSTAT);
  2100   00090E  BCC5               	btfsc	197,6,c	;volatile
  2101   000910  EF8C  F004         	goto	i2u52_41
  2102   000914  EF8E  F004         	goto	i2u52_40
  2103   000918                     i2u52_41:
  2104   000918  EF7D  F004         	goto	i2l149
  2105   00091C                     i2u52_40:
  2106   00091C  0012               	return		;funcret
  2107   00091E                     __end_ofi2_i2c_data_tx:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function i2_delay *****************
  2111 ;; Defined at:
  2112 ;;		line 126 in file "main.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  milliseconds    4   12[COMRAM] unsigned long 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  timer_value     8   16[COMRAM] unsigned long long 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1
  2126 ;;      Params:         4       0       0
  2127 ;;      Locals:         8       0       0
  2128 ;;      Temps:          0       0       0
  2129 ;;      Totals:        12       0       0
  2130 ;;Total ram usage:       12 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 1
  2133 ;; This function calls:
  2134 ;;		i2___lmul
  2135 ;; This function is called by:
  2136 ;;		i2_lcd_clear
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text18
  2141   000300                     __ptext18:
  2142                           	callstack 0
  2143   000300                     i2_delay:
  2144                           	callstack 22
  2145   000300                     
  2146                           ;main.c: 126: void delay(unsigned long milliseconds);main.c: 127: {;main.c: 128:     T1C
      +                          ON = 0b10110000;
  2147   000300  0EB0               	movlw	176
  2148   000302  6ECD               	movwf	205,c	;volatile
  2149   000304                     
  2150                           ;main.c: 129:     PIE1bits.TMR1IE = 0;
  2151   000304  909D               	bcf	157,0,c	;volatile
  2152   000306                     
  2153                           ;main.c: 130:     unsigned long long timer_value = (milliseconds) * 1000 ;
  2154   000306  C00D  F001         	movff	i2delay@milliseconds,i2___lmul@multiplier
  2155   00030A  C00E  F002         	movff	i2delay@milliseconds+1,i2___lmul@multiplier+1
  2156   00030E  C00F  F003         	movff	i2delay@milliseconds+2,i2___lmul@multiplier+2
  2157   000312  C010  F004         	movff	i2delay@milliseconds+3,i2___lmul@multiplier+3
  2158   000316  0EE8               	movlw	232
  2159   000318  6E05               	movwf	i2___lmul@multiplicand^0,c
  2160   00031A  0E03               	movlw	3
  2161   00031C  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  2162   00031E  0E00               	movlw	0
  2163   000320  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  2164   000322  0E00               	movlw	0
  2165   000324  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  2166   000326  EC0A  F003         	call	i2___lmul	;wreg free
  2167   00032A  5001               	movf	?i2___lmul^0,w,c
  2168   00032C  6E11               	movwf	i2delay@timer_value^0,c
  2169   00032E  5002               	movf	(?i2___lmul+1)^0,w,c
  2170   000330  6E12               	movwf	(i2delay@timer_value+1)^0,c
  2171   000332  5003               	movf	(?i2___lmul+2)^0,w,c
  2172   000334  6E13               	movwf	(i2delay@timer_value+2)^0,c
  2173   000336  5004               	movf	(?i2___lmul+3)^0,w,c
  2174   000338  6E14               	movwf	(i2delay@timer_value+3)^0,c
  2175   00033A  6A15               	clrf	(i2delay@timer_value+4)^0,c
  2176   00033C  6A16               	clrf	(i2delay@timer_value+5)^0,c
  2177   00033E  6A17               	clrf	(i2delay@timer_value+6)^0,c
  2178   000340  6A18               	clrf	(i2delay@timer_value+7)^0,c
  2179                           
  2180                           ;main.c: 131:     while(timer_value > 65535)
  2181   000342  EFC1  F001         	goto	i2l1230
  2182   000346                     i2l1222:
  2183                           
  2184                           ;main.c: 132:     {;main.c: 133:         timer_value -= 65535;
  2185   000346  0EFF               	movlw	255
  2186   000348  5E11               	subwf	i2delay@timer_value^0,f,c
  2187   00034A  0EFF               	movlw	255
  2188   00034C  5A12               	subwfb	(i2delay@timer_value+1)^0,f,c
  2189   00034E  0E00               	movlw	0
  2190   000350  5A13               	subwfb	(i2delay@timer_value+2)^0,f,c
  2191   000352  0E00               	movlw	0
  2192   000354  5A14               	subwfb	(i2delay@timer_value+3)^0,f,c
  2193   000356  0E00               	movlw	0
  2194   000358  5A15               	subwfb	(i2delay@timer_value+4)^0,f,c
  2195   00035A  0E00               	movlw	0
  2196   00035C  5A16               	subwfb	(i2delay@timer_value+5)^0,f,c
  2197   00035E  0E00               	movlw	0
  2198   000360  5A17               	subwfb	(i2delay@timer_value+6)^0,f,c
  2199   000362  0E00               	movlw	0
  2200   000364  5A18               	subwfb	(i2delay@timer_value+7)^0,f,c
  2201   000366                     
  2202                           ;main.c: 134:         TMR1H = 0;
  2203   000366  0E00               	movlw	0
  2204   000368  6ECF               	movwf	207,c	;volatile
  2205   00036A                     
  2206                           ;main.c: 135:         TMR1L = 0;
  2207   00036A  0E00               	movlw	0
  2208   00036C  6ECE               	movwf	206,c	;volatile
  2209   00036E                     
  2210                           ;main.c: 136:         T1CONbits.TMR1ON = 1;
  2211   00036E  80CD               	bsf	205,0,c	;volatile
  2212   000370                     i2l113:
  2213   000370  A09E               	btfss	158,0,c	;volatile
  2214   000372  EFBD  F001         	goto	i2u48_41
  2215   000376  EFBF  F001         	goto	i2u48_40
  2216   00037A                     i2u48_41:
  2217   00037A  EFB8  F001         	goto	i2l113
  2218   00037E                     i2u48_40:
  2219   00037E                     
  2220                           ;main.c: 138:         T1CONbits.TMR1ON = 0;
  2221   00037E  90CD               	bcf	205,0,c	;volatile
  2222                           
  2223                           ;main.c: 139:         PIR1bits.TMR1IF = 0;
  2224   000380  909E               	bcf	158,0,c	;volatile
  2225   000382                     i2l1230:
  2226                           
  2227                           ;main.c: 131:     while(timer_value > 65535)
  2228   000382  5018               	movf	(i2delay@timer_value+7)^0,w,c
  2229   000384  1017               	iorwf	(i2delay@timer_value+6)^0,w,c
  2230   000386  1016               	iorwf	(i2delay@timer_value+5)^0,w,c
  2231   000388  1015               	iorwf	(i2delay@timer_value+4)^0,w,c
  2232   00038A  1014               	iorwf	(i2delay@timer_value+3)^0,w,c
  2233   00038C  E106               	bnz	i2u49_41
  2234   00038E  0413               	decf	(i2delay@timer_value+2)^0,w,c
  2235   000390  B0D8               	btfsc	status,0,c
  2236   000392  EFCD  F001         	goto	i2u49_41
  2237   000396  EFCF  F001         	goto	i2u49_40
  2238   00039A                     i2u49_41:
  2239   00039A  EFA3  F001         	goto	i2l1222
  2240   00039E                     i2u49_40:
  2241   00039E                     
  2242                           ;main.c: 141:     timer_value = 65535 - timer_value + 1;
  2243   00039E  5011               	movf	i2delay@timer_value^0,w,c
  2244   0003A0  0800               	sublw	0
  2245   0003A2  6E11               	movwf	i2delay@timer_value^0,c
  2246   0003A4  0E00               	movlw	0
  2247   0003A6  5412               	subfwb	(i2delay@timer_value+1)^0,w,c
  2248   0003A8  6E12               	movwf	(i2delay@timer_value+1)^0,c
  2249   0003AA  0E01               	movlw	1
  2250   0003AC  5413               	subfwb	(i2delay@timer_value+2)^0,w,c
  2251   0003AE  6E13               	movwf	(i2delay@timer_value+2)^0,c
  2252   0003B0  0E00               	movlw	0
  2253   0003B2  5414               	subfwb	(i2delay@timer_value+3)^0,w,c
  2254   0003B4  6E14               	movwf	(i2delay@timer_value+3)^0,c
  2255   0003B6  0E00               	movlw	0
  2256   0003B8  5415               	subfwb	(i2delay@timer_value+4)^0,w,c
  2257   0003BA  6E15               	movwf	(i2delay@timer_value+4)^0,c
  2258   0003BC  0E00               	movlw	0
  2259   0003BE  5416               	subfwb	(i2delay@timer_value+5)^0,w,c
  2260   0003C0  6E16               	movwf	(i2delay@timer_value+5)^0,c
  2261   0003C2  0E00               	movlw	0
  2262   0003C4  5417               	subfwb	(i2delay@timer_value+6)^0,w,c
  2263   0003C6  6E17               	movwf	(i2delay@timer_value+6)^0,c
  2264   0003C8  0E00               	movlw	0
  2265   0003CA  5418               	subfwb	(i2delay@timer_value+7)^0,w,c
  2266   0003CC  6E18               	movwf	(i2delay@timer_value+7)^0,c
  2267   0003CE                     
  2268                           ;main.c: 142:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  2269   0003CE  0E00               	movlw	0
  2270   0003D0  6ECF               	movwf	207,c	;volatile
  2271   0003D2                     
  2272                           ;main.c: 143:     TMR1L = (unsigned char)(0xFF & timer_value);
  2273   0003D2  C011  FFCE         	movff	i2delay@timer_value,4046	;volatile
  2274   0003D6                     
  2275                           ;main.c: 144:     T1CONbits.TMR1ON = 1;
  2276   0003D6  80CD               	bsf	205,0,c	;volatile
  2277   0003D8                     i2l117:
  2278   0003D8  A09E               	btfss	158,0,c	;volatile
  2279   0003DA  EFF1  F001         	goto	i2u50_41
  2280   0003DE  EFF3  F001         	goto	i2u50_40
  2281   0003E2                     i2u50_41:
  2282   0003E2  EFEC  F001         	goto	i2l117
  2283   0003E6                     i2u50_40:
  2284   0003E6                     
  2285                           ;main.c: 146:     T1CONbits.TMR1ON = 0;
  2286   0003E6  90CD               	bcf	205,0,c	;volatile
  2287                           
  2288                           ;main.c: 147:     PIR1bits.TMR1IF = 0;
  2289   0003E8  909E               	bcf	158,0,c	;volatile
  2290   0003EA  0012               	return		;funcret
  2291   0003EC                     __end_ofi2_delay:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function i2___lmul *****************
  2295 ;; Defined at:
  2296 ;;		line 15 in file "F:\Program Files\MicroChip\XC8\v2.45\pic\sources\c99\common\Umul32.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  multiplier      4    0[COMRAM] unsigned long 
  2299 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  product         4    8[COMRAM] unsigned long 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  4    0[COMRAM] unsigned long 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1
  2311 ;;      Params:         8       0       0
  2312 ;;      Locals:         4       0       0
  2313 ;;      Temps:          0       0       0
  2314 ;;      Totals:        12       0       0
  2315 ;;Total ram usage:       12 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		i2_delay
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text19
  2325   000614                     __ptext19:
  2326                           	callstack 0
  2327   000614                     i2___lmul:
  2328                           	callstack 22
  2329   000614  0E00               	movlw	0
  2330   000616  6E09               	movwf	i2___lmul@product^0,c
  2331   000618  0E00               	movlw	0
  2332   00061A  6E0A               	movwf	(i2___lmul@product+1)^0,c
  2333   00061C  0E00               	movlw	0
  2334   00061E  6E0B               	movwf	(i2___lmul@product+2)^0,c
  2335   000620  0E00               	movlw	0
  2336   000622  6E0C               	movwf	(i2___lmul@product+3)^0,c
  2337   000624                     i2l1178:
  2338   000624  A001               	btfss	i2___lmul@multiplier^0,0,c
  2339   000626  EF17  F003         	goto	i2u42_41
  2340   00062A  EF19  F003         	goto	i2u42_40
  2341   00062E                     i2u42_41:
  2342   00062E  EF21  F003         	goto	i2l1182
  2343   000632                     i2u42_40:
  2344   000632  5005               	movf	i2___lmul@multiplicand^0,w,c
  2345   000634  2609               	addwf	i2___lmul@product^0,f,c
  2346   000636  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  2347   000638  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  2348   00063A  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  2349   00063C  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  2350   00063E  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  2351   000640  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  2352   000642                     i2l1182:
  2353   000642  90D8               	bcf	status,0,c
  2354   000644  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  2355   000646  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  2356   000648  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  2357   00064A  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  2358   00064C  90D8               	bcf	status,0,c
  2359   00064E  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  2360   000650  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  2361   000652  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  2362   000654  3201               	rrcf	i2___lmul@multiplier^0,f,c
  2363   000656  5001               	movf	i2___lmul@multiplier^0,w,c
  2364   000658  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  2365   00065A  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  2366   00065C  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  2367   00065E  A4D8               	btfss	status,2,c
  2368   000660  EF34  F003         	goto	i2u43_41
  2369   000664  EF36  F003         	goto	i2u43_40
  2370   000668                     i2u43_41:
  2371   000668  EF12  F003         	goto	i2l1178
  2372   00066C                     i2u43_40:
  2373   00066C  C009  F001         	movff	i2___lmul@product,?i2___lmul
  2374   000670  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  2375   000674  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  2376   000678  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  2377   00067C  0012               	return		;funcret
  2378   00067E                     __end_ofi2___lmul:
  2379                           	callstack 0
  2380                           
  2381                           	psect	rparam
  2382   000000                     
  2383                           	psect	temp
  2384   00004E                     btemp:
  2385                           	callstack 0
  2386   00004E                     	ds	1
  2387   000000                     int$flags	set	btemp
  2388   000000                     wtemp8	set	btemp+1
  2389   000000                     ttemp5	set	btemp+1
  2390   000000                     ttemp6	set	btemp+4
  2391   000000                     ttemp7	set	btemp+8
  2392                           
  2393                           	psect	config
  2394                           
  2395                           ; Padding undefined space
  2396   300000                     	org	3145728
  2397   300000  FF                 	db	255
  2398                           
  2399                           ;Config register CONFIG1H @ 0x300001
  2400                           ;	Oscillator
  2401                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  2402                           ;	Fail-Safe Clock Monitor Enable bit
  2403                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2404                           ;	Internal/External Oscillator Switchover bit
  2405                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2406   300001                     	org	3145729
  2407   300001  08                 	db	8
  2408                           
  2409                           ;Config register CONFIG2L @ 0x300002
  2410                           ;	Power-up Timer Enable bit
  2411                           ;	PWRT = OFF, PWRT disabled
  2412                           ;	Brown-out Reset Enable bits
  2413                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2414                           ;	Brown-out Reset Voltage bits
  2415                           ;	BORV = 3, Minimum Setting
  2416   300002                     	org	3145730
  2417   300002  1F                 	db	31
  2418                           
  2419                           ;Config register CONFIG2H @ 0x300003
  2420                           ;	Watchdog Timer Enable bit
  2421                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2422                           ;	Watchdog Timer Postscale Select bits
  2423                           ;	WDTPS = 32768, 1:32768
  2424   300003                     	org	3145731
  2425   300003  1E                 	db	30
  2426                           
  2427                           ; Padding undefined space
  2428   300004                     	org	3145732
  2429   300004  FF                 	db	255
  2430                           
  2431                           ;Config register CONFIG3H @ 0x300005
  2432                           ;	CCP2 MUX bit
  2433                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2434                           ;	PORTB A/D Enable bit
  2435                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  2436                           ;	Low-Power Timer1 Oscillator Enable bit
  2437                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2438                           ;	MCLR Pin Enable bit
  2439                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2440   300005                     	org	3145733
  2441   300005  83                 	db	131
  2442                           
  2443                           ;Config register CONFIG4L @ 0x300006
  2444                           ;	Stack Full/Underflow Reset Enable bit
  2445                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2446                           ;	Single-Supply ICSP Enable bit
  2447                           ;	LVP = OFF, Single-Supply ICSP disabled
  2448                           ;	Boot Block Size Select bits
  2449                           ;	BBSIZ = BB256, 256 Word
  2450                           ;	Extended Instruction Set Enable bit
  2451                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2452                           ;	Background Debugger Enable bit
  2453                           ;	DEBUG = 0x1, unprogrammed default
  2454   300006                     	org	3145734
  2455   300006  81                 	db	129
  2456                           
  2457                           ; Padding undefined space
  2458   300007                     	org	3145735
  2459   300007  FF                 	db	255
  2460                           
  2461                           ;Config register CONFIG5L @ 0x300008
  2462                           ;	Code Protection bit
  2463                           ;	CP0 = OFF, Block 0 not code-protected
  2464                           ;	Code Protection bit
  2465                           ;	CP1 = OFF, Block 1 not code-protected
  2466   300008                     	org	3145736
  2467   300008  03                 	db	3
  2468                           
  2469                           ;Config register CONFIG5H @ 0x300009
  2470                           ;	Boot Block Code Protection bitProtect Boot
  2471                           ;	CPB = OFF, Boot block not code-protected
  2472                           ;	Data EEPROM Code Protection bit
  2473                           ;	CPD = OFF, Data EEPROM not code-protected
  2474   300009                     	org	3145737
  2475   300009  C0                 	db	192
  2476                           
  2477                           ;Config register CONFIG6L @ 0x30000A
  2478                           ;	Write Protection bit
  2479                           ;	WRT0 = OFF, Block 0 not write-protected
  2480                           ;	Write Protection bit
  2481                           ;	WRT1 = OFF, Block 1 not write-protected
  2482   30000A                     	org	3145738
  2483   30000A  03                 	db	3
  2484                           
  2485                           ;Config register CONFIG6H @ 0x30000B
  2486                           ;	Configuration Register Write Protection bit
  2487                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2488                           ;	Boot Block Write Protection bit
  2489                           ;	WRTB = OFF, Boot block not write-protected
  2490                           ;	Data EEPROM Write Protection bit
  2491                           ;	WRTD = OFF, Data EEPROM not write-protected
  2492   30000B                     	org	3145739
  2493   30000B  E0                 	db	224
  2494                           
  2495                           ;Config register CONFIG7L @ 0x30000C
  2496                           ;	Table Read Protection bit
  2497                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  2498                           ;	Table Read Protection bit
  2499                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  2500   30000C                     	org	3145740
  2501   30000C  03                 	db	3
  2502                           
  2503                           ;Config register CONFIG7H @ 0x30000D
  2504                           ;	Boot Block Table Read Protection bit
  2505                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  2506   30000D                     	org	3145741
  2507   30000D  40                 	db	64
  2508                           tosu	equ	0xFFF
  2509                           tosh	equ	0xFFE
  2510                           tosl	equ	0xFFD
  2511                           stkptr	equ	0xFFC
  2512                           pclatu	equ	0xFFB
  2513                           pclath	equ	0xFFA
  2514                           pcl	equ	0xFF9
  2515                           tblptru	equ	0xFF8
  2516                           tblptrh	equ	0xFF7
  2517                           tblptrl	equ	0xFF6
  2518                           tablat	equ	0xFF5
  2519                           prodh	equ	0xFF4
  2520                           prodl	equ	0xFF3
  2521                           indf0	equ	0xFEF
  2522                           postinc0	equ	0xFEE
  2523                           postdec0	equ	0xFED
  2524                           preinc0	equ	0xFEC
  2525                           plusw0	equ	0xFEB
  2526                           fsr0h	equ	0xFEA
  2527                           fsr0l	equ	0xFE9
  2528                           wreg	equ	0xFE8
  2529                           indf1	equ	0xFE7
  2530                           postinc1	equ	0xFE6
  2531                           postdec1	equ	0xFE5
  2532                           preinc1	equ	0xFE4
  2533                           plusw1	equ	0xFE3
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           bsr	equ	0xFE0
  2537                           indf2	equ	0xFDF
  2538                           postinc2	equ	0xFDE
  2539                           postdec2	equ	0xFDD
  2540                           preinc2	equ	0xFDC
  2541                           plusw2	equ	0xFDB
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     61      77
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    lcd_message@message	PTR unsigned char  size(2) Largest target is 10
		 -> Receiver_buffer(COMRAM[10]), STR_1(CODE[7]), STR_2(CODE[9]), STR_3(CODE[2]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_move_cursor
    _lcd_move_cursor->_lcd_command
    _lcd_command->_delay
    _lcd_message->_lcd_char
    _lcd_char->_i2c_data_tx
    _lcd_clear->_delay
    _delay->___lmul

Critical Paths under _ISR in COMRAM

    i2_lcd_clear->i2_delay
    i2_delay->i2___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7341
                                             60 COMRAM     1     1      0
                           _lcd_init
                        _lcd_message
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    6902
                          _lcd_clear
                        _lcd_command
                        _lcd_message
                    _lcd_move_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1    2905
                                             58 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          7     4      3    2687
                                             51 COMRAM     7     4      3
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _lcd_message                                          2     0      2     439
                                             30 COMRAM     2     0      2
                 _i2c_start_and_addr
                           _i2c_stop
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             2     2      0      75
                                             28 COMRAM     2     2      0
                        _i2c_data_tx
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     871
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start_and_addr                                   1     1      0      15
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_data_tx                                          1     1      0      15
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _delay                                               12     8      4     841
                                             39 COMRAM    12     8      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                             27 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0     357
                                             24 COMRAM     3     3      0
                        i2_lcd_clear
 ---------------------------------------------------------------------------------
 (7) i2_lcd_clear                                          0     0      0     357
                            i2_delay
                      i2_i2c_data_tx
               i2_i2c_start_and_addr
                         i2_i2c_stop
 ---------------------------------------------------------------------------------
 (8) i2_i2c_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_i2c_start_and_addr                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_i2c_data_tx                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_delay                                             12     8      4     313
                                             12 COMRAM    12     8      4
                           i2___lmul
 ---------------------------------------------------------------------------------
 (9) i2___lmul                                            12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_clear
       _delay
         ___lmul
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_command
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_message
       _i2c_start_and_addr
       _i2c_stop
       _lcd_char
         _i2c_data_tx
     _lcd_move_cursor
       _lcd_command
   _lcd_message
   _system_init

 _ISR (ROOT)
   i2_lcd_clear
     i2_delay
       i2___lmul
     i2_i2c_data_tx
     i2_i2c_start_and_addr
     i2_i2c_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3D      4D       1       61.1%
BITBIGSFRlhlhll     22      0       0      14        0.0%
BITBIGSFRhlh        19      0       0       9        0.0%
BITBIGSFRlhllll     11      0       0      17        0.0%
BITBIGSFRhh          D      0       0       8        0.0%
BITBIGSFRlhlllh      6      0       0      16        0.0%
BITBIGSFRlhlhll      3      0       0      13        0.0%
BITBIGSFRlhlhh       3      0       0      12        0.0%
BITBIGSFRlhhhl       2      0       0      11        0.0%
BITBIGSFRlhllh       1      0       0      15        0.0%
BITBIGSFRlhhhh       1      0       0      10        0.0%
BITBIGSFRll          1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      19        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 13 16:09:37 2024

                 _SSPSTATbits 0FC7                            u60 0874                            u61 0870  
                          u70 0888                            u71 0884                            u80 0898  
                          u81 0894                            u90 08E6                            u91 08E2  
         __end_of_system_init 07E6                           l120 02FE                           l113 0284  
                         l115 0292                           l131 0824                           l123 05A8  
                         l140 06E4                           l117 02EC                           l150 08D8  
                         l134 0534                           l119 02FA                           l143 0860  
                         l152 08E6                           l160 094A                           l154 08F6  
                         l146 0744                           l171 0898                           l163 0866  
                         l149 08D4                           l165 0874                           l157 093A  
                         l174 07E4                           l167 087A                           l159 0948  
                         l169 0888                           l188 0602                           l189 0612  
                         l908 0828                           l890 0938                           l884 0864  
                         l886 0876                           l990 07B4                           l982 07A6  
                         l888 08D4                           l992 07B6                           l984 07AA  
                         l994 07BC                           l986 07B0                           l996 07BE  
                         l988 07B2                           l998 07C4                           u100 08F6  
                         u101 08F2                           u110 0948                           u111 0944  
                         u400 02B2                           u401 02AE                           u410 02FA  
                         u411 02F6                           u440 06A8                           u370 05C8  
                         u450 06D0                           u371 05C4                           u380 0602  
                         u460 06E0                           _ISR 0008                           u381 05FE  
                         u461 06DC                           u390 0292                           u470 07F8  
                         u391 028E                           u447 069E                           u471 07F4  
                         u560 0416                           u457 06C6                           u561 0412  
                         u570 0426                           u571 0422                           u580 0454  
                         u581 0450                           u590 046C                           u591 0468  
                         wreg 0FE8                lcd_char@letter 001E                          ?_ISR 0001  
                        l1000 07CA                          l1010 07E0                          l1002 07CC  
                        l1012 07E2                          l1004 07CE                          l1006 07D0  
                        l1200 0706                          l1008 07D6                          l1130 05C8  
                        l1202 070C                          l1210 07E8                          l1132 05D8  
                        l1140 021A                          l1204 0712                          l1212 07F8  
                        l1300 046C                          l1134 05E2                          l1126 05AA  
                        l1142 025A                          l1150 0296                          l1206 072C  
                        l1214 0810                          l1310 048C                          l1302 047C  
                        l1128 05BA                          l1152 02B2                          l1144 027A  
                        l1136 0214                          l1208 0740                          l1160 049A  
                        l1304 0480                          l1154 02E2                          l1146 027E  
                        l1138 0218                          l1170 0512                          l1162 04A0  
                        l1250 058A                          l1306 0484                          l1156 02E6  
                        l1148 0282                          l1172 0526                          l1164 04C6  
                        l1252 05A4                          l1308 0488                          l1158 02EA  
                        l1190 06AC                          l1174 0530                          l1166 04DA  
                        l1246 0536                          l1270 03F0                          l1192 06B0  
                        l1168 04E4                          l1248 057A                          l1280 0402  
                        l1272 03F4                          l1194 06E0                          l1186 067E  
                        l1290 0432                          l1282 0404                          l1274 03F8  
                        l1196 06E6                          l1188 0688                          l1292 043A  
                        l1284 0406                          l1276 03FA                          l1268 03EC  
                        l1198 06F2                          l1294 0454                          l1286 0416  
                        l1278 03FE                          l1288 0426                          l1298 045A  
                        STR_1 020A                          STR_2 0201                          STR_3 0211  
             ??i2_i2c_data_tx 0001                 ??_i2c_data_tx 001C                          _main 03EC  
                        fsr0h 0FEA                          indf0 0FEF                          fsr2h 0FDA  
                        fsr0l 0FE9                          indf2 0FDF                          fsr2l 0FD9  
                        btemp 004E               __end_ofi2_delay 03EC                          start 00DE  
   i2c_start_and_addr@address 001C              ?_lcd_move_cursor 003B                  ___param_bank 0000  
                       ??_ISR 0019                 lcd_command@lt 0034                 lcd_command@rs 0036  
               lcd_command@rw 0035                   i2_lcd_clear 0746                         ?_main 0001  
                       _T0CON 0FD5                         _T1CON 0FCD                         i2l101 0034  
                       i2l120 03EA                         i2l113 0370                         i2l115 037E  
                       i2l108 00D2                         i2l117 03D8                         i2l150 08FE  
                       i2l119 03E6                         i2l152 090C                         i2l160 095E  
                       i2l154 091C                         i2l146 07A4                         i2l171 08D0  
                       i2l163 089E                         i2l149 08FA                         i2l165 08AC  
                       i2l157 094E                         i2l167 08B2                         i2l159 095C  
                       i2l169 08C0                         i2l188 066C                         i2l189 067C  
                       i2l976 094C                         _TMR0H 0FD7                         _TMR1H 0FCF  
                       _TMR0L 0FD6                         _TMR1L 0FCE                         _PORTB 0F81  
                       _TRISB 0F93           ___lmul@multiplicand 0020                         _delay 0214  
             i2c_data_tx@data 001C                         tablat 0FF5              __end_ofi2___lmul 067E  
                 ?i2_i2c_stop 0001                         ttemp5 004F                         ttemp6 0052  
                       ttemp7 0056                         status 0FD8                         wtemp8 004F  
             _Receiver_buffer 0044           _character_match_cnt 0040           __end_of_i2c_data_tx 08F8  
             __initialization 091E                   _system_init 07A6                  __end_of_main 0498  
            __end_of_i2c_stop 094C                        ??_main 003D                 __activetblptr 0002  
          _i2c_start_and_addr 0862                        ?_delay 0028           ?_i2c_start_and_addr 0001  
                   ??i2_delay 0011                        i2l1220 0306                        i2l1222 0346  
                      i2l1230 0382                        i2l1232 039E                        i2l1224 0366  
                      i2l1216 0300                        i2l1240 08FA                        i2l1320 0032  
                      i2l1312 0012                        i2l1234 03CE                        i2l1226 036A  
                      i2l1218 0304                        i2l1242 089C                        i2l1330 007C  
                      i2l1322 0042                        i2l1314 0020                        i2l1180 0632  
                      i2l1236 03D2                        i2l1228 036E                        i2l1244 08AE  
                      i2l1260 076C                        i2l1340 00A6                        i2l1332 007E  
                      i2l1324 005A                        i2l1316 0022                        i2l1182 0642  
                      i2l1238 03D6                        i2l1262 0772                        i2l1254 0746  
                      i2l1342 00A8                        i2l1334 0086                        i2l1326 005C  
                      i2l1318 002A                        i2l1184 064C                        i2l1176 0614  
                      i2l1264 078C                        i2l1256 0752                        i2l1344 00BA  
                      i2l1328 0070                        i2l1336 0096                        i2l1178 0624  
                      i2l1266 07A0                        i2l1258 0766                        i2l1346 00CA  
                      i2l1338 00A4                        i2l1348 00CE              i2___lmul@product 0009  
                      _SSPADD 0FC8                        _SSPBUF 0FC9              __end_of_lcd_char 0862  
            __end_of_lcd_init 05AA                        ___lmul 05AA          ??_i2c_start_and_addr 001C  
                      clear_0 0924                        isa$std 0001                  __mediumconst 0000  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
     lcd_move_cursor@position 003B                    __accesstop 0080       __end_of__initialization 092A  
                 _i2c_data_tx 08D2                 ___rparam_used 0001                __pcstackCOMRAM 0001  
               __end_of_delay 0300                     ?i2___lmul 0001                       ??_delay 002C  
                   ?_i2c_stop 0001               lcd_command@data 003A                       ?___lmul 001C  
                ?i2_lcd_clear 0001                ___lmul@product 0024                    ??i2___lmul 0009  
                     i2u23_40 095C                       i2u23_41 0958                       i2u42_40 0632  
                     i2u50_40 03E6                       i2u42_41 062E                       i2u50_41 03E2  
                     i2u43_40 066C                       i2u51_40 090C                       i2u43_41 0668  
                     i2u51_41 0908                       i2u52_40 091C                       i2u60_40 0020  
                     i2u52_41 0918                       i2u60_41 001C                       i2u53_40 08AC  
                     i2u61_40 0042                       i2u53_41 08A8                       i2u61_41 003E  
                     i2u54_40 08C0                       i2u62_40 0070                       i2u54_41 08BC  
                     i2u62_41 006C                       i2u55_40 08D0                       i2u63_40 00A4  
                     i2u55_41 08CC                       i2u63_41 00A0                       i2u48_40 037E  
                     i2u64_40 00BA                       i2u48_41 037A                       i2u64_41 00B6  
                     i2u49_40 039E                       i2u65_40 00CA                       i2u49_41 039A  
                     i2u65_41 00C6                     ?_lcd_char 0001                     ?_lcd_init 0001  
                     i2_delay 0300                  _Buffer_index 003F                  ??i2_i2c_stop 0001  
                  ??_i2c_stop 001C         __end_ofi2_i2c_data_tx 091E           lcd_move_cursor@line 003C  
__end_ofi2_i2c_start_and_addr 08D2                       __Hparam 0000                       __Lparam 0000  
           __end_of_lcd_clear 0746                  ?_system_init 0001                  __psmallconst 0200  
                     __pcinit 091E                       __ramtop 0200                       __ptext0 03EC  
                     __ptext1 07A6                       __ptext2 0536                       __ptext3 07E6  
                     __ptext4 0498                       __ptext5 067E                       __ptext6 0826  
                     __ptext7 06E6                       __ptext8 0938                       __ptext9 0862  
                   _T0CONbits 0FD5                     _T1CONbits 0FCD            __end_ofi2_i2c_stop 0960  
                  ??_lcd_char 001D                    ??_lcd_init 003D          end_of_initialization 092A  
               __Lmediumconst 0000                       postinc0 0FEE                       postinc2 0FDE  
         i2___lmul@multiplier 0001                     _TRISCbits 0F94            lcd_message@message 001F  
                ?_i2c_data_tx 0001                 ??_lcd_command 0037   i2i2c_start_and_addr@address 0001  
               ??_lcd_message 0021                __end_of___lmul 0614              delay@timer_value 002C  
        i2_i2c_start_and_addr 089A           start_initialization 091E                   __end_of_ISR 00DE  
           ??_lcd_move_cursor 003C           i2delay@milliseconds 000D                      ??___lmul 0024  
         __end_of_lcd_command 0536           __end_of_lcd_message 06E6         ?i2_i2c_start_and_addr 0001  
                 __pbssCOMRAM 003E                      ?i2_delay 000D                     __pintcode 0008  
                   _lcd_clear 06E6                   __smallconst 0200                     _new_input 0041  
                    _PIE1bits 0F9D                   _lcd_command 0498                      _PIR1bits 0F9E  
                 _lcd_message 067E                      _RCONbits 0FD0                    ?_lcd_clear 0001  
      ??i2_i2c_start_and_addr 0001                    _ADCON1bits 0FC1                      i2___lmul 0614  
           ___lmul@multiplier 001C                   _INTCON2bits 0FF1             i2i2c_data_tx@data 0001  
                    _i2c_stop 0938                      __Hrparam 0000                      __Lrparam 0000  
                    _Time_out 003E               _lcd_move_cursor 07E6            _previous_character 0042  
                    __ptext10 08D2                      __ptext11 0214                      __ptext12 05AA  
                    __ptext14 0746                      __ptext15 094C                      __ptext16 089A  
                    __ptext17 08F8                      __ptext18 0300                      __ptext19 0614  
                    _lcd_char 0826                      _lcd_init 0536                 i2_i2c_data_tx 08F8  
  __end_of_i2c_start_and_addr 089A                      isa$xinst 0000                      int$flags 004E  
           delay@milliseconds 0028                 ??i2_lcd_clear 0019                   ??_lcd_clear 0034  
                 _OSCTUNEbits 0F9B                    _INTCONbits 0FF2         i2___lmul@multiplicand 0005  
          i2delay@timer_value 0011                      intlevel2 0000                ?i2_i2c_data_tx 0001  
                  _OSCCONbits 0FD3       __end_of_lcd_move_cursor 0826                 ??_system_init 001C  
         __end_ofi2_lcd_clear 07A6             _current_character 0043                   _SSPCON1bits 0FC6  
                 _SSPCON2bits 0FC5                    i2_i2c_stop 094C                  ?_lcd_command 0034  
                ?_lcd_message 001F  
