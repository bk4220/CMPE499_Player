

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Mar 22 19:18:13 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 09/02/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F2221 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     _SSPCON1bits	set	4038
    74   000000                     _SSPADD	set	4040
    75   000000                     _SSPSTATbits	set	4039
    76   000000                     _TMR1L	set	4046
    77   000000                     _TMR1H	set	4047
    78   000000                     _TMR0L	set	4054
    79   000000                     _TMR0H	set	4055
    80   000000                     _INTCONbits	set	4082
    81   000000                     _T1CONbits	set	4045
    82   000000                     _T0CONbits	set	4053
    83   000000                     _PORTB	set	3969
    84   000000                     _T0CON	set	4053
    85   000000                     _INTCON2bits	set	4081
    86   000000                     _TRISB	set	3987
    87   000000                     _OSCTUNEbits	set	3995
    88   000000                     _PIE1bits	set	3997
    89   000000                     _T1CON	set	4045
    90   000000                     _ADCON1bits	set	4033
    91   000000                     _SSPCON2bits	set	4037
    92   000000                     _SSPBUF	set	4041
    93   000000                     _PIR1bits	set	3998
    94   000000                     _RCONbits	set	4048
    95   000000                     _OSCCONbits	set	4051
    96   000000                     _TRISCbits	set	3988
    97                           
    98                           	psect	smallconst
    99   000344                     __psmallconst:
   100                           	callstack 0
   101   000344  00                 	db	0
   102   000345                     STR_2:
   103   000345  43                 	db	67	;'C'
   104   000346  61                 	db	97	;'a'
   105   000347  70                 	db	112	;'p'
   106   000348  73                 	db	115	;'s'
   107   000349  74                 	db	116	;'t'
   108   00034A  6F                 	db	111	;'o'
   109   00034B  6E                 	db	110	;'n'
   110   00034C  65                 	db	101	;'e'
   111   00034D  00                 	db	0
   112   00034E                     STR_1:
   113   00034E  53                 	db	83	;'S'
   114   00034F  65                 	db	101	;'e'
   115   000350  6E                 	db	110	;'n'
   116   000351  69                 	db	105	;'i'
   117   000352  6F                 	db	111	;'o'
   118   000353  72                 	db	114	;'r'
   119   000354  00                 	db	0
   120   000355  20                 	db	32
   121   000356  00                 	db	0
   122   000357  00                 	db	0	; dummy byte at the end
   123   000000                     
   124                           ; #config settings
   125                           
   126                           	psect	cinit
   127   000C08                     __pcinit:
   128                           	callstack 0
   129   000C08                     start_initialization:
   130                           	callstack 0
   131   000C08                     __initialization:
   132                           	callstack 0
   133                           
   134                           ; Clear objects allocated to BANK0 (55 bytes)
   135   000C08  EE00  F080         	lfsr	0,__pbssBANK0
   136   000C0C  0E37               	movlw	55
   137   000C0E                     clear_0:
   138   000C0E  6AEE               	clrf	postinc0,c
   139   000C10  06E8               	decf	wreg,f,c
   140   000C12  E1FD               	bnz	clear_0
   141                           
   142                           ; Clear objects allocated to COMRAM (9 bytes)
   143   000C14  EE00  F04C         	lfsr	0,__pbssCOMRAM
   144   000C18  0E09               	movlw	9
   145   000C1A                     clear_1:
   146   000C1A  6AEE               	clrf	postinc0,c
   147   000C1C  06E8               	decf	wreg,f,c
   148   000C1E  E1FD               	bnz	clear_1
   149   000C20                     end_of_initialization:
   150                           	callstack 0
   151   000C20                     __end_of__initialization:
   152                           	callstack 0
   153   000C20  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   154   000C22  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   155   000C24  0E00               	movlw	low (__Lmediumconst shr (0+16))
   156   000C26  6EF8               	movwf	tblptru,c
   157   000C28  0100               	movlb	0
   158   000C2A  EFAC  F001         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161   00004C                     __pbssCOMRAM:
   162                           	callstack 0
   163   00004C                     _screen_has_text:
   164                           	callstack 0
   165   00004C                     	ds	1
   166   00004D                     _Time_out:
   167                           	callstack 0
   168   00004D                     	ds	1
   169   00004E                     _Buffer_row_index:
   170                           	callstack 0
   171   00004E                     	ds	1
   172   00004F                     _Buffer_col_index:
   173                           	callstack 0
   174   00004F                     	ds	1
   175   000050                     _character_match_cnt:
   176                           	callstack 0
   177   000050                     	ds	1
   178   000051                     _new_input:
   179                           	callstack 0
   180   000051                     	ds	1
   181   000052                     _has_prior_check:
   182                           	callstack 0
   183   000052                     	ds	1
   184   000053                     _current_character:
   185                           	callstack 0
   186   000053                     	ds	1
   187   000054                     _has_printed_message:
   188                           	callstack 0
   189   000054                     	ds	1
   190                           
   191                           	psect	bssBANK0
   192   000080                     __pbssBANK0:
   193                           	callstack 0
   194   000080                     _Receiver_buffer:
   195                           	callstack 0
   196   000080                     	ds	55
   197                           
   198                           	psect	cstackBANK0
   199   0000B7                     __pcstackBANK0:
   200                           	callstack 0
   201   0000B7                     ??_main:
   202                           
   203                           ; 1 bytes @ 0x0
   204   0000B7                     	ds	2
   205   0000B9                     main@i_731:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x2
   209   0000B9                     	ds	2
   210   0000BB                     main@j:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x4
   214   0000BB                     	ds	2
   215                           
   216                           	psect	cstackCOMRAM
   217   000001                     __pcstackCOMRAM:
   218                           	callstack 0
   219   000001                     ?i2___wmul:
   220                           	callstack 0
   221   000001                     ?i2___lmul:
   222                           	callstack 0
   223   000001                     i2i2c_data_tx@data:
   224                           	callstack 0
   225   000001                     i2i2c_start_and_addr@address:
   226                           	callstack 0
   227   000001                     i2___wmul@multiplier:
   228                           	callstack 0
   229   000001                     i2___lmul@multiplier:
   230                           	callstack 0
   231                           
   232                           ; 4 bytes @ 0x0
   233   000001                     	ds	2
   234   000003                     i2___wmul@multiplicand:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x2
   238   000003                     	ds	2
   239   000005                     i2___wmul@product:
   240                           	callstack 0
   241   000005                     i2___lmul@multiplicand:
   242                           	callstack 0
   243                           
   244                           ; 4 bytes @ 0x4
   245   000005                     	ds	4
   246   000009                     i2___lmul@product:
   247                           	callstack 0
   248                           
   249                           ; 4 bytes @ 0x8
   250   000009                     	ds	4
   251   00000D                     i2delay@milliseconds:
   252                           	callstack 0
   253                           
   254                           ; 4 bytes @ 0xC
   255   00000D                     	ds	4
   256   000011                     i2delay@timer_value:
   257                           	callstack 0
   258                           
   259                           ; 8 bytes @ 0x10
   260   000011                     	ds	8
   261   000019                     ??_ISR:
   262   000019                     
   263                           ; 1 bytes @ 0x18
   264   000019                     	ds	6
   265   00001F                     ISR@i:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x1E
   269   00001F                     	ds	2
   270   000021                     ISR@j:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x20
   274   000021                     	ds	2
   275   000023                     ISR@i_740:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279   000023                     	ds	2
   280   000025                     ISR@j_741:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284   000025                     	ds	2
   285   000027                     ISR@i_742:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x26
   289   000027                     	ds	2
   290   000029                     ISR@j_743:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x28
   294   000029                     	ds	2
   295   00002B                     ?___wmul:
   296                           	callstack 0
   297   00002B                     ?___lmul:
   298                           	callstack 0
   299   00002B                     i2c_data_tx@data:
   300                           	callstack 0
   301   00002B                     i2c_start_and_addr@address:
   302                           	callstack 0
   303   00002B                     ___wmul@multiplier:
   304                           	callstack 0
   305   00002B                     ___lmul@multiplier:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x2A
   309   00002B                     	ds	1
   310   00002C                     ??_lcd_char:
   311                           
   312                           ; 1 bytes @ 0x2B
   313   00002C                     	ds	1
   314   00002D                     lcd_char@letter:
   315                           	callstack 0
   316   00002D                     ___wmul@multiplicand:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x2C
   320   00002D                     	ds	1
   321   00002E                     lcd_message@message:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x2D
   325   00002E                     	ds	1
   326   00002F                     ___wmul@product:
   327                           	callstack 0
   328   00002F                     ___lmul@multiplicand:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x2E
   332   00002F                     	ds	1
   333   000030                     
   334                           ; 1 bytes @ 0x2F
   335   000030                     	ds	1
   336   000031                     ??_system_init:
   337   000031                     ??_check_strings:
   338                           
   339                           ; 1 bytes @ 0x30
   340   000031                     	ds	2
   341   000033                     system_init@i:
   342                           	callstack 0
   343   000033                     ___lmul@product:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x32
   347   000033                     	ds	2
   348   000035                     system_init@j:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x34
   352   000035                     	ds	2
   353   000037                     check_strings@match_cnt:
   354                           	callstack 0
   355   000037                     delay@milliseconds:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x36
   359   000037                     	ds	1
   360   000038                     check_strings@i:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x37
   364   000038                     	ds	2
   365   00003A                     check_strings@currently_match:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x39
   369   00003A                     	ds	1
   370   00003B                     check_strings@j:
   371                           	callstack 0
   372   00003B                     delay@timer_value:
   373                           	callstack 0
   374                           
   375                           ; 8 bytes @ 0x3A
   376   00003B                     	ds	8
   377   000043                     lcd_command@lt:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x42
   381   000043                     	ds	1
   382   000044                     lcd_command@rw:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x43
   386   000044                     	ds	1
   387   000045                     lcd_command@rs:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x44
   391   000045                     	ds	1
   392   000046                     ??_lcd_command:
   393                           
   394                           ; 1 bytes @ 0x45
   395   000046                     	ds	3
   396   000049                     lcd_command@data:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x48
   400   000049                     	ds	1
   401   00004A                     lcd_move_cursor@position:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x49
   405   00004A                     	ds	1
   406   00004B                     lcd_move_cursor@line:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x4A
   410   00004B                     	ds	1
   411   00004C                     
   412                           ; 1 bytes @ 0x4B
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 38 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  j               2    4[BANK0 ] int 
   423 ;;  i               2    2[BANK0 ] int 
   424 ;;  i               1    0        unsigned char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1
   434 ;;      Params:         0       0       0
   435 ;;      Locals:         0       4       0
   436 ;;      Temps:          0       2       0
   437 ;;      Totals:         0       6       0
   438 ;;Total ram usage:        6 bytes
   439 ;; Hardware stack levels required when called: 9
   440 ;; This function calls:
   441 ;;		___wmul
   442 ;;		_check_strings
   443 ;;		_lcd_init
   444 ;;		_lcd_message
   445 ;;		_system_init
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text0
   452   000358                     __ptext0:
   453                           	callstack 0
   454   000358                     _main:
   455                           	callstack 22
   456   000358                     
   457                           ;main.c: 42:     system_init();
   458   000358  ECAC  F003         	call	_system_init	;wreg free
   459   00035C                     
   460                           ;main.c: 44:     lcd_init();
   461   00035C  EC5A  F004         	call	_lcd_init	;wreg free
   462   000360                     
   463                           ;main.c: 47:     T0CON = 0b00000111;
   464   000360  0E07               	movlw	7
   465   000362  6ED5               	movwf	213,c	;volatile
   466   000364                     
   467                           ;main.c: 48:     INTCONbits.TMR0IF = 0;
   468   000364  94F2               	bcf	242,2,c	;volatile
   469   000366                     
   470                           ;main.c: 49:     TMR0H = 0x00;
   471   000366  0E00               	movlw	0
   472   000368  6ED7               	movwf	215,c	;volatile
   473   00036A                     
   474                           ;main.c: 50:     TMR0L = 0x00;
   475   00036A  0E00               	movlw	0
   476   00036C  6ED6               	movwf	214,c	;volatile
   477   00036E                     
   478                           ;main.c: 51:     INTCONbits.TMR0IE = 1;
   479   00036E  8AF2               	bsf	242,5,c	;volatile
   480   000370                     
   481                           ;main.c: 52:     T0CONbits.TMR0ON = 1;
   482   000370  8ED5               	bsf	213,7,c	;volatile
   483   000372                     l2015:
   484                           
   485                           ;main.c: 55:     {;main.c: 56:        if(new_input)
   486   000372  5051               	movf	_new_input^0,w,c
   487   000374  B4D8               	btfsc	status,2,c
   488   000376  EFBF  F001         	goto	u1391
   489   00037A  EFC1  F001         	goto	u1390
   490   00037E                     u1391:
   491   00037E  EFB9  F001         	goto	l2015
   492   000382                     u1390:
   493   000382                     
   494                           ;main.c: 57:        {;main.c: 58:            if(has_prior_check == 0)
   495   000382  5052               	movf	_has_prior_check^0,w,c
   496   000384  A4D8               	btfss	status,2,c
   497   000386  EFC7  F001         	goto	u1401
   498   00038A  EFC9  F001         	goto	u1400
   499   00038E                     u1401:
   500   00038E  EFCF  F001         	goto	l2021
   501   000392                     u1400:
   502   000392                     
   503                           ;main.c: 59:            {;main.c: 60:                has_prior_check = 1;
   504   000392  0E01               	movlw	1
   505   000394  6E52               	movwf	_has_prior_check^0,c
   506                           
   507                           ;main.c: 61:                new_input = 0;
   508   000396  0E00               	movlw	0
   509   000398  6E51               	movwf	_new_input^0,c
   510                           
   511                           ;main.c: 62:            }
   512   00039A  EFD4  F001         	goto	l2025
   513   00039E                     l2021:
   514                           
   515                           ;main.c: 64:            {;main.c: 65:                character_match_cnt = check_strings
      +                          ();
   516   00039E  EC43  F002         	call	_check_strings	;wreg free
   517   0003A2  6E50               	movwf	_character_match_cnt^0,c
   518   0003A4                     
   519                           ;main.c: 66:                new_input = 0;
   520   0003A4  0E00               	movlw	0
   521   0003A6  6E51               	movwf	_new_input^0,c
   522   0003A8                     l2025:
   523                           
   524                           ;main.c: 69:            if(character_match_cnt >= 2 && !has_printed_message)
   525   0003A8  0E01               	movlw	1
   526   0003AA  6450               	cpfsgt	_character_match_cnt^0,c
   527   0003AC  EFDA  F001         	goto	u1411
   528   0003B0  EFDC  F001         	goto	u1410
   529   0003B4                     u1411:
   530   0003B4  EFB9  F001         	goto	l2015
   531   0003B8                     u1410:
   532   0003B8  5054               	movf	_has_printed_message^0,w,c
   533   0003BA  A4D8               	btfss	status,2,c
   534   0003BC  EFE2  F001         	goto	u1421
   535   0003C0  EFE4  F001         	goto	u1420
   536   0003C4                     u1421:
   537   0003C4  EFB9  F001         	goto	l2015
   538   0003C8                     u1420:
   539   0003C8                     
   540                           ;main.c: 79:                 lcd_message(Receiver_buffer + (Buffer_row_index - 1) * 11);
   541   0003C8  504E               	movf	_Buffer_row_index^0,w,c
   542   0003CA  0D0B               	mullw	11
   543   0003CC  0E75               	movlw	low (_Receiver_buffer+-11)
   544   0003CE  24F3               	addwf	243,w,c
   545   0003D0  6E2E               	movwf	lcd_message@message^0,c
   546   0003D2  0E00               	movlw	high (_Receiver_buffer+-11)
   547   0003D4  20F4               	addwfc	prodh,w,c
   548   0003D6  6E2F               	movwf	(lcd_message@message+1)^0,c
   549   0003D8  ECFA  F004         	call	_lcd_message	;wreg free
   550   0003DC                     
   551                           ;main.c: 80:                 screen_has_text = 1;
   552   0003DC  0E01               	movlw	1
   553   0003DE  6E4C               	movwf	_screen_has_text^0,c
   554   0003E0                     
   555                           ;main.c: 81:                 has_printed_message = 1;
   556   0003E0  0E01               	movlw	1
   557   0003E2  6E54               	movwf	_has_printed_message^0,c
   558   0003E4                     
   559                           ;main.c: 82:                 new_input = 0;
   560   0003E4  0E00               	movlw	0
   561   0003E6  6E51               	movwf	_new_input^0,c
   562   0003E8                     
   563                           ;main.c: 83:                 has_prior_check = 0;
   564   0003E8  0E00               	movlw	0
   565   0003EA  6E52               	movwf	_has_prior_check^0,c
   566   0003EC                     
   567                           ;main.c: 84:                 character_match_cnt = 0;
   568   0003EC  0E00               	movlw	0
   569   0003EE  6E50               	movwf	_character_match_cnt^0,c
   570   0003F0                     
   571                           ;main.c: 85:                 Buffer_col_index = 0;
   572   0003F0  0E00               	movlw	0
   573   0003F2  6E4F               	movwf	_Buffer_col_index^0,c
   574   0003F4                     
   575                           ;main.c: 86:                 Buffer_row_index = 0;
   576   0003F4  0E00               	movlw	0
   577   0003F6  6E4E               	movwf	_Buffer_row_index^0,c
   578   0003F8                     
   579                           ;main.c: 87:                 Time_out = 0;
   580   0003F8  0E00               	movlw	0
   581   0003FA  6E4D               	movwf	_Time_out^0,c
   582   0003FC                     
   583                           ;main.c: 88:                 for(int i = 0; i < 5;i++)
   584   0003FC  0E00               	movlw	0
   585   0003FE  0100               	movlb	0	; () banked
   586   000400  6FBA               	movwf	(main@i_731+1)& (0+255),b
   587   000402  0E00               	movlw	0
   588   000404  6FB9               	movwf	main@i_731& (0+255),b
   589   000406                     l2055:
   590                           
   591                           ; BSR set to: 0
   592                           ;main.c: 89:                 {;main.c: 91:                     for(int j = 0; j < 11;j++
      +                          )
   593   000406  0E00               	movlw	0
   594   000408  6FBC               	movwf	(main@j+1)& (0+255),b
   595   00040A  0E00               	movlw	0
   596   00040C  6FBB               	movwf	main@j& (0+255),b
   597   00040E                     l2061:
   598                           
   599                           ; BSR set to: 0
   600                           ;main.c: 92:                     {;main.c: 93:                         Receiver_buffer[i
      +                          ][j] = '\0';
   601   00040E  C0B9  F02B         	movff	main@i_731,___wmul@multiplier
   602   000412  C0BA  F02C         	movff	main@i_731+1,___wmul@multiplier+1
   603   000416  0E00               	movlw	0
   604   000418  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
   605   00041A  0E0B               	movlw	11
   606   00041C  6E2D               	movwf	___wmul@multiplicand^0,c
   607   00041E  EC2A  F006         	call	___wmul	;wreg free
   608   000422  0E80               	movlw	low _Receiver_buffer
   609   000424  242B               	addwf	?___wmul^0,w,c
   610   000426  0100               	movlb	0	; () banked
   611   000428  6FB7               	movwf	??_main& (0+255),b
   612   00042A  0E00               	movlw	high _Receiver_buffer
   613   00042C  202C               	addwfc	(?___wmul+1)^0,w,c
   614   00042E  6FB8               	movwf	(??_main+1)& (0+255),b
   615   000430  51BB               	movf	main@j& (0+255),w,b
   616   000432  25B7               	addwf	??_main& (0+255),w,b
   617   000434  6ED9               	movwf	fsr2l,c
   618   000436  51BC               	movf	(main@j+1)& (0+255),w,b
   619   000438  21B8               	addwfc	(??_main+1)& (0+255),w,b
   620   00043A  6EDA               	movwf	fsr2h,c
   621   00043C  6ADF               	clrf	indf2,c
   622   00043E                     
   623                           ; BSR set to: 0
   624                           ;main.c: 94:                     }
   625   00043E  4BBB               	infsnz	main@j& (0+255),f,b
   626   000440  2BBC               	incf	(main@j+1)& (0+255),f,b
   627   000442                     
   628                           ; BSR set to: 0
   629   000442  BFBC               	btfsc	(main@j+1)& (0+255),7,b
   630   000444  EF2D  F002         	goto	u1431
   631   000448  51BC               	movf	(main@j+1)& (0+255),w,b
   632   00044A  E109               	bnz	u1430
   633   00044C  0E0B               	movlw	11
   634   00044E  5DBB               	subwf	main@j& (0+255),w,b
   635   000450  A0D8               	btfss	status,0,c
   636   000452  EF2D  F002         	goto	u1431
   637   000456  EF2F  F002         	goto	u1430
   638   00045A                     u1431:
   639   00045A  EF07  F002         	goto	l2061
   640   00045E                     u1430:
   641   00045E                     
   642                           ; BSR set to: 0
   643                           ;main.c: 95:                 }
   644   00045E  4BB9               	infsnz	main@i_731& (0+255),f,b
   645   000460  2BBA               	incf	(main@i_731+1)& (0+255),f,b
   646   000462                     
   647                           ; BSR set to: 0
   648   000462  BFBA               	btfsc	(main@i_731+1)& (0+255),7,b
   649   000464  EF3D  F002         	goto	u1441
   650   000468  51BA               	movf	(main@i_731+1)& (0+255),w,b
   651   00046A  E109               	bnz	u1440
   652   00046C  0E05               	movlw	5
   653   00046E  5DB9               	subwf	main@i_731& (0+255),w,b
   654   000470  A0D8               	btfss	status,0,c
   655   000472  EF3D  F002         	goto	u1441
   656   000476  EF3F  F002         	goto	u1440
   657   00047A                     u1441:
   658   00047A  EF03  F002         	goto	l2055
   659   00047E                     u1440:
   660   00047E  EFB9  F001         	goto	l2015
   661   000482  EFA0  F001         	goto	start
   662   000486                     __end_of_main:
   663                           	callstack 0
   664                           
   665 ;; *************** function _system_init *****************
   666 ;; Defined at:
   667 ;;		line 407 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  j               2   52[COMRAM] int 
   672 ;;  i               2   50[COMRAM] int 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1
   682 ;;      Params:         0       0       0
   683 ;;      Locals:         4       0       0
   684 ;;      Temps:          2       0       0
   685 ;;      Totals:         6       0       0
   686 ;;Total ram usage:        6 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 5
   689 ;; This function calls:
   690 ;;		___wmul
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text1
   697   000758                     __ptext1:
   698                           	callstack 0
   699   000758                     _system_init:
   700                           	callstack 25
   701   000758                     
   702                           ;main.c: 410:     OSCCONbits.SCS = 0;
   703   000758  0EFC               	movlw	-4
   704   00075A  16D3               	andwf	211,f,c	;volatile
   705   00075C                     
   706                           ;main.c: 411:     OSCCONbits.IDLEN = 1;
   707   00075C  8ED3               	bsf	211,7,c	;volatile
   708                           
   709                           ;main.c: 412:     OSCCONbits.IRCF = 7;
   710   00075E  0E70               	movlw	112
   711   000760  12D3               	iorwf	211,f,c	;volatile
   712   000762                     
   713                           ;main.c: 413:     OSCTUNEbits.PLLEN = 1;
   714   000762  8C9B               	bsf	155,6,c	;volatile
   715   000764                     
   716                           ;main.c: 416:     INTCONbits.GIE = 1;
   717   000764  8EF2               	bsf	242,7,c	;volatile
   718   000766                     
   719                           ;main.c: 417:     INTCONbits.PEIE = 1;
   720   000766  8CF2               	bsf	242,6,c	;volatile
   721   000768                     
   722                           ;main.c: 419:     INTCON2bits.RBPU = 0;
   723   000768  9EF1               	bcf	241,7,c	;volatile
   724                           
   725                           ;main.c: 422:     ADCON1bits.PCFG = 15;
   726   00076A  0E0F               	movlw	15
   727   00076C  12C1               	iorwf	193,f,c	;volatile
   728   00076E                     
   729                           ;main.c: 425:     RCONbits.IPEN = 0;
   730   00076E  9ED0               	bcf	208,7,c	;volatile
   731   000770                     
   732                           ;main.c: 428:     TRISB = TRISB | 0x1F;
   733   000770  5093               	movf	147,w,c	;volatile
   734   000772  091F               	iorlw	31
   735   000774  6E93               	movwf	147,c	;volatile
   736   000776                     
   737                           ;main.c: 429:     PORTB = PORTB & 0xE0;
   738   000776  5081               	movf	129,w,c	;volatile
   739   000778  0BE0               	andlw	224
   740   00077A  6E81               	movwf	129,c	;volatile
   741   00077C                     
   742                           ;main.c: 430:     INTCONbits.INT0IE = 1;
   743   00077C  88F2               	bsf	242,4,c	;volatile
   744   00077E                     
   745                           ;main.c: 431:     INTCON2bits.INTEDG0 = 1;
   746   00077E  8CF1               	bsf	241,6,c	;volatile
   747   000780                     
   748                           ;main.c: 434:     SSPSTATbits.SMP = 1;
   749   000780  8EC7               	bsf	199,7,c	;volatile
   750   000782                     
   751                           ;main.c: 435:     SSPSTATbits.CKE = 0;
   752   000782  9CC7               	bcf	199,6,c	;volatile
   753                           
   754                           ;main.c: 436:     SSPADD = 0x50;
   755   000784  0E50               	movlw	80
   756   000786  6EC8               	movwf	200,c	;volatile
   757   000788                     
   758                           ;main.c: 437:     SSPCON1bits.SSPEN = 1;
   759   000788  8AC6               	bsf	198,5,c	;volatile
   760                           
   761                           ;main.c: 438:     SSPCON1bits.SSPM = 0b1000;
   762   00078A  50C6               	movf	198,w,c	;volatile
   763   00078C  0BF0               	andlw	-16
   764   00078E  0908               	iorlw	8
   765   000790  6EC6               	movwf	198,c	;volatile
   766   000792                     
   767                           ;main.c: 439:     TRISCbits.RC3 = 1;
   768   000792  8694               	bsf	148,3,c	;volatile
   769   000794                     
   770                           ;main.c: 440:     TRISCbits.RC4 = 1;
   771   000794  8894               	bsf	148,4,c	;volatile
   772                           
   773                           ;main.c: 443:     for(int i = 0; i < 5;i++)
   774   000796  0E00               	movlw	0
   775   000798  6E34               	movwf	(system_init@i+1)^0,c
   776   00079A  0E00               	movlw	0
   777   00079C  6E33               	movwf	system_init@i^0,c
   778   00079E                     l1951:
   779                           
   780                           ;main.c: 444:     {;main.c: 446:         for(int j = 0; j < 11;j++)
   781   00079E  0E00               	movlw	0
   782   0007A0  6E36               	movwf	(system_init@j+1)^0,c
   783   0007A2  0E00               	movlw	0
   784   0007A4  6E35               	movwf	system_init@j^0,c
   785   0007A6                     l1957:
   786                           
   787                           ;main.c: 447:         {;main.c: 448:             Receiver_buffer[i][j] = '\0';
   788   0007A6  C033  F02B         	movff	system_init@i,___wmul@multiplier
   789   0007AA  C034  F02C         	movff	system_init@i+1,___wmul@multiplier+1
   790   0007AE  0E00               	movlw	0
   791   0007B0  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
   792   0007B2  0E0B               	movlw	11
   793   0007B4  6E2D               	movwf	___wmul@multiplicand^0,c
   794   0007B6  EC2A  F006         	call	___wmul	;wreg free
   795   0007BA  0E80               	movlw	low _Receiver_buffer
   796   0007BC  242B               	addwf	?___wmul^0,w,c
   797   0007BE  6E31               	movwf	??_system_init^0,c
   798   0007C0  0E00               	movlw	high _Receiver_buffer
   799   0007C2  202C               	addwfc	(?___wmul+1)^0,w,c
   800   0007C4  6E32               	movwf	(??_system_init+1)^0,c
   801   0007C6  5035               	movf	system_init@j^0,w,c
   802   0007C8  2431               	addwf	??_system_init^0,w,c
   803   0007CA  6ED9               	movwf	fsr2l,c
   804   0007CC  5036               	movf	(system_init@j+1)^0,w,c
   805   0007CE  2032               	addwfc	(??_system_init+1)^0,w,c
   806   0007D0  6EDA               	movwf	fsr2h,c
   807   0007D2  6ADF               	clrf	indf2,c
   808   0007D4                     
   809                           ;main.c: 449:         }
   810   0007D4  4A35               	infsnz	system_init@j^0,f,c
   811   0007D6  2A36               	incf	(system_init@j+1)^0,f,c
   812   0007D8  BE36               	btfsc	(system_init@j+1)^0,7,c
   813   0007DA  EFF8  F003         	goto	u1321
   814   0007DE  5036               	movf	(system_init@j+1)^0,w,c
   815   0007E0  E109               	bnz	u1320
   816   0007E2  0E0B               	movlw	11
   817   0007E4  5C35               	subwf	system_init@j^0,w,c
   818   0007E6  A0D8               	btfss	status,0,c
   819   0007E8  EFF8  F003         	goto	u1321
   820   0007EC  EFFA  F003         	goto	u1320
   821   0007F0                     u1321:
   822   0007F0  EFD3  F003         	goto	l1957
   823   0007F4                     u1320:
   824   0007F4                     
   825                           ;main.c: 450:     }
   826   0007F4  4A33               	infsnz	system_init@i^0,f,c
   827   0007F6  2A34               	incf	(system_init@i+1)^0,f,c
   828   0007F8  BE34               	btfsc	(system_init@i+1)^0,7,c
   829   0007FA  EF08  F004         	goto	u1331
   830   0007FE  5034               	movf	(system_init@i+1)^0,w,c
   831   000800  E109               	bnz	u1330
   832   000802  0E05               	movlw	5
   833   000804  5C33               	subwf	system_init@i^0,w,c
   834   000806  A0D8               	btfss	status,0,c
   835   000808  EF08  F004         	goto	u1331
   836   00080C  EF0A  F004         	goto	u1330
   837   000810                     u1331:
   838   000810  EFCF  F003         	goto	l1951
   839   000814                     u1330:
   840   000814  0012               	return		;funcret
   841   000816                     __end_of_system_init:
   842                           	callstack 0
   843                           
   844 ;; *************** function _lcd_init *****************
   845 ;; Defined at:
   846 ;;		line 261 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1
   860 ;;      Params:         0       0       0
   861 ;;      Locals:         0       0       0
   862 ;;      Temps:          0       0       0
   863 ;;      Totals:         0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 8
   867 ;; This function calls:
   868 ;;		_lcd_clear
   869 ;;		_lcd_command
   870 ;;		_lcd_message
   871 ;;		_lcd_move_cursor
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text2
   878   0008B4                     __ptext2:
   879                           	callstack 0
   880   0008B4                     _lcd_init:
   881                           	callstack 22
   882   0008B4                     
   883                           ;main.c: 268:     lcd_command(0x02, 1, 0, 0);
   884   0008B4  0E01               	movlw	1
   885   0008B6  6E43               	movwf	lcd_command@lt^0,c
   886   0008B8  0E00               	movlw	0
   887   0008BA  6E44               	movwf	lcd_command@rw^0,c
   888   0008BC  0E00               	movlw	0
   889   0008BE  6E45               	movwf	lcd_command@rs^0,c
   890   0008C0  0E02               	movlw	2
   891   0008C2  EC0B  F004         	call	_lcd_command
   892                           
   893                           ;main.c: 269:     lcd_command(0x28, 1, 0, 0);
   894   0008C6  0E01               	movlw	1
   895   0008C8  6E43               	movwf	lcd_command@lt^0,c
   896   0008CA  0E00               	movlw	0
   897   0008CC  6E44               	movwf	lcd_command@rw^0,c
   898   0008CE  0E00               	movlw	0
   899   0008D0  6E45               	movwf	lcd_command@rs^0,c
   900   0008D2  0E28               	movlw	40
   901   0008D4  EC0B  F004         	call	_lcd_command
   902                           
   903                           ;main.c: 271:     lcd_clear();
   904   0008D8  EC2E  F005         	call	_lcd_clear	;wreg free
   905                           
   906                           ;main.c: 274:     lcd_command(0x0F, 1, 0, 0);
   907   0008DC  0E01               	movlw	1
   908   0008DE  6E43               	movwf	lcd_command@lt^0,c
   909   0008E0  0E00               	movlw	0
   910   0008E2  6E44               	movwf	lcd_command@rw^0,c
   911   0008E4  0E00               	movlw	0
   912   0008E6  6E45               	movwf	lcd_command@rs^0,c
   913   0008E8  0E0F               	movlw	15
   914   0008EA  EC0B  F004         	call	_lcd_command
   915                           
   916                           ;main.c: 279:     lcd_move_cursor(0, 5);
   917   0008EE  0E05               	movlw	5
   918   0008F0  6E4A               	movwf	lcd_move_cursor@position^0,c
   919   0008F2  0E00               	movlw	0
   920   0008F4  EC8E  F005         	call	_lcd_move_cursor
   921   0008F8                     
   922                           ;main.c: 280:     lcd_message("Senior");
   923   0008F8  0E4E               	movlw	low STR_1
   924   0008FA  6E2E               	movwf	lcd_message@message^0,c
   925   0008FC  0E03               	movlw	high STR_1
   926   0008FE  6E2F               	movwf	(lcd_message@message+1)^0,c
   927   000900  ECFA  F004         	call	_lcd_message	;wreg free
   928   000904                     
   929                           ;main.c: 281:     lcd_move_cursor(1, 4);
   930   000904  0E04               	movlw	4
   931   000906  6E4A               	movwf	lcd_move_cursor@position^0,c
   932   000908  0E01               	movlw	1
   933   00090A  EC8E  F005         	call	_lcd_move_cursor
   934                           
   935                           ;main.c: 282:     lcd_message("Capstone");
   936   00090E  0E45               	movlw	low STR_2
   937   000910  6E2E               	movwf	lcd_message@message^0,c
   938   000912  0E03               	movlw	high STR_2
   939   000914  6E2F               	movwf	(lcd_message@message+1)^0,c
   940   000916  ECFA  F004         	call	_lcd_message	;wreg free
   941   00091A                     
   942                           ;main.c: 284:     lcd_clear();
   943   00091A  EC2E  F005         	call	_lcd_clear	;wreg free
   944   00091E  0012               	return		;funcret
   945   000920                     __end_of_lcd_init:
   946                           	callstack 0
   947                           
   948 ;; *************** function _lcd_move_cursor *****************
   949 ;; Defined at:
   950 ;;		line 302 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  line            1    wreg     unsigned char 
   953 ;;  position        1   73[COMRAM] unsigned char 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  line            1   74[COMRAM] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1
   965 ;;      Params:         1       0       0
   966 ;;      Locals:         1       0       0
   967 ;;      Temps:          0       0       0
   968 ;;      Totals:         2       0       0
   969 ;;Total ram usage:        2 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 7
   972 ;; This function calls:
   973 ;;		_lcd_command
   974 ;; This function is called by:
   975 ;;		_lcd_init
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text3
   980   000B1C                     __ptext3:
   981                           	callstack 0
   982   000B1C                     _lcd_move_cursor:
   983                           	callstack 22
   984                           
   985                           ;incstack = 0
   986                           ;lcd_move_cursor@line stored from wreg
   987   000B1C  6E4B               	movwf	lcd_move_cursor@line^0,c
   988   000B1E                     
   989                           ;main.c: 302: void lcd_move_cursor(char line, char position);main.c: 303: {;main.c: 304:
      +                               if(!line)
   990   000B1E  504B               	movf	lcd_move_cursor@line^0,w,c
   991   000B20  A4D8               	btfss	status,2,c
   992   000B22  EF95  F005         	goto	u1311
   993   000B26  EF97  F005         	goto	u1310
   994   000B2A                     u1311:
   995   000B2A  EFA3  F005         	goto	l1907
   996   000B2E                     u1310:
   997   000B2E                     
   998                           ;main.c: 305:     {;main.c: 306:         lcd_command(0x80 | position, 1, 0, 0);
   999   000B2E  0E01               	movlw	1
  1000   000B30  6E43               	movwf	lcd_command@lt^0,c
  1001   000B32  0E00               	movlw	0
  1002   000B34  6E44               	movwf	lcd_command@rw^0,c
  1003   000B36  0E00               	movlw	0
  1004   000B38  6E45               	movwf	lcd_command@rs^0,c
  1005   000B3A  504A               	movf	lcd_move_cursor@position^0,w,c
  1006   000B3C  0980               	iorlw	128
  1007   000B3E  EC0B  F004         	call	_lcd_command
  1008                           
  1009                           ;main.c: 307:     }
  1010   000B42  EFAD  F005         	goto	l172
  1011   000B46                     l1907:
  1012                           
  1013                           ;main.c: 309:     {;main.c: 310:         lcd_command(0xC0 | position, 1, 0, 0);
  1014   000B46  0E01               	movlw	1
  1015   000B48  6E43               	movwf	lcd_command@lt^0,c
  1016   000B4A  0E00               	movlw	0
  1017   000B4C  6E44               	movwf	lcd_command@rw^0,c
  1018   000B4E  0E00               	movlw	0
  1019   000B50  6E45               	movwf	lcd_command@rs^0,c
  1020   000B52  504A               	movf	lcd_move_cursor@position^0,w,c
  1021   000B54  09C0               	iorlw	192
  1022   000B56  EC0B  F004         	call	_lcd_command
  1023   000B5A                     l172:
  1024   000B5A  0012               	return		;funcret
  1025   000B5C                     __end_of_lcd_move_cursor:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _lcd_command *****************
  1029 ;; Defined at:
  1030 ;;		line 316 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  data            1    wreg     unsigned char 
  1033 ;;  lt              1   66[COMRAM] unsigned char 
  1034 ;;  rw              1   67[COMRAM] unsigned char 
  1035 ;;  rs              1   68[COMRAM] unsigned char 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  data            1   72[COMRAM] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1
  1047 ;;      Params:         3       0       0
  1048 ;;      Locals:         1       0       0
  1049 ;;      Temps:          3       0       0
  1050 ;;      Totals:         7       0       0
  1051 ;;Total ram usage:        7 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 6
  1054 ;; This function calls:
  1055 ;;		_delay
  1056 ;;		_i2c_data_tx
  1057 ;;		_i2c_start_and_addr
  1058 ;;		_i2c_stop
  1059 ;; This function is called by:
  1060 ;;		_lcd_init
  1061 ;;		_lcd_move_cursor
  1062 ;;		_lcd_backspace
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text4
  1067   000816                     __ptext4:
  1068                           	callstack 0
  1069   000816                     _lcd_command:
  1070                           	callstack 22
  1071                           
  1072                           ;incstack = 0
  1073                           ;lcd_command@data stored from wreg
  1074   000816  6E49               	movwf	lcd_command@data^0,c
  1075   000818                     
  1076                           ;main.c: 316: void lcd_command(char data, char lt, char rw, char rs);main.c: 317: {;main
      +                          .c: 318:     i2c_start_and_addr(0x4E);
  1077   000818  0E4E               	movlw	78
  1078   00081A  ECCC  F005         	call	_i2c_start_and_addr
  1079   00081E                     
  1080                           ;main.c: 320:     i2c_data_tx((data & 0xF0) | (lt << 3) | 4 | (rw <<1) | rs);
  1081   00081E  90D8               	bcf	status,0,c
  1082   000820  3444               	rlcf	lcd_command@rw^0,w,c
  1083   000822  6E46               	movwf	??_lcd_command^0,c
  1084   000824  C043  F047         	movff	lcd_command@lt,??_lcd_command+1
  1085   000828  90D8               	bcf	status,0,c
  1086   00082A  3647               	rlcf	(??_lcd_command+1)^0,f,c
  1087   00082C  90D8               	bcf	status,0,c
  1088   00082E  3647               	rlcf	(??_lcd_command+1)^0,f,c
  1089   000830  90D8               	bcf	status,0,c
  1090   000832  3647               	rlcf	(??_lcd_command+1)^0,f,c
  1091   000834  5049               	movf	lcd_command@data^0,w,c
  1092   000836  0BF0               	andlw	240
  1093   000838  1047               	iorwf	(??_lcd_command+1)^0,w,c
  1094   00083A  1046               	iorwf	??_lcd_command^0,w,c
  1095   00083C  1045               	iorwf	lcd_command@rs^0,w,c
  1096   00083E  0904               	iorlw	4
  1097   000840  EC17  F006         	call	_i2c_data_tx
  1098   000844                     
  1099                           ;main.c: 321:     delay(1);
  1100   000844  0E01               	movlw	1
  1101   000846  6E37               	movwf	delay@milliseconds^0,c
  1102   000848  0E00               	movlw	0
  1103   00084A  6E38               	movwf	(delay@milliseconds+1)^0,c
  1104   00084C  0E00               	movlw	0
  1105   00084E  6E39               	movwf	(delay@milliseconds+2)^0,c
  1106   000850  0E00               	movlw	0
  1107   000852  6E3A               	movwf	(delay@milliseconds+3)^0,c
  1108   000854  ECC0  F002         	call	_delay	;wreg free
  1109   000858                     
  1110                           ;main.c: 322:     i2c_data_tx(lt<<3);
  1111   000858  3843               	swapf	lcd_command@lt^0,w,c
  1112   00085A  42E8               	rrncf	wreg,f,c
  1113   00085C  0BF8               	andlw	248
  1114   00085E  EC17  F006         	call	_i2c_data_tx
  1115   000862                     
  1116                           ;main.c: 325:     i2c_data_tx(((data & 0x0F) <<4) | (lt << 3) | 4 | (rw <<1) | rs);
  1117   000862  90D8               	bcf	status,0,c
  1118   000864  3444               	rlcf	lcd_command@rw^0,w,c
  1119   000866  6E46               	movwf	??_lcd_command^0,c
  1120   000868  C043  F047         	movff	lcd_command@lt,??_lcd_command+1
  1121   00086C  90D8               	bcf	status,0,c
  1122   00086E  3647               	rlcf	(??_lcd_command+1)^0,f,c
  1123   000870  90D8               	bcf	status,0,c
  1124   000872  3647               	rlcf	(??_lcd_command+1)^0,f,c
  1125   000874  90D8               	bcf	status,0,c
  1126   000876  3647               	rlcf	(??_lcd_command+1)^0,f,c
  1127   000878  C049  F048         	movff	lcd_command@data,??_lcd_command+2
  1128   00087C  0E0F               	movlw	15
  1129   00087E  1648               	andwf	(??_lcd_command+2)^0,f,c
  1130   000880  3848               	swapf	(??_lcd_command+2)^0,w,c
  1131   000882  0BF0               	andlw	240
  1132   000884  1047               	iorwf	(??_lcd_command+1)^0,w,c
  1133   000886  1046               	iorwf	??_lcd_command^0,w,c
  1134   000888  1045               	iorwf	lcd_command@rs^0,w,c
  1135   00088A  0904               	iorlw	4
  1136   00088C  EC17  F006         	call	_i2c_data_tx
  1137   000890                     
  1138                           ;main.c: 326:     delay(1);
  1139   000890  0E01               	movlw	1
  1140   000892  6E37               	movwf	delay@milliseconds^0,c
  1141   000894  0E00               	movlw	0
  1142   000896  6E38               	movwf	(delay@milliseconds+1)^0,c
  1143   000898  0E00               	movlw	0
  1144   00089A  6E39               	movwf	(delay@milliseconds+2)^0,c
  1145   00089C  0E00               	movlw	0
  1146   00089E  6E3A               	movwf	(delay@milliseconds+3)^0,c
  1147   0008A0  ECC0  F002         	call	_delay	;wreg free
  1148   0008A4                     
  1149                           ;main.c: 327:     i2c_data_tx(lt<<3);
  1150   0008A4  3843               	swapf	lcd_command@lt^0,w,c
  1151   0008A6  42E8               	rrncf	wreg,f,c
  1152   0008A8  0BF8               	andlw	248
  1153   0008AA  EC17  F006         	call	_i2c_data_tx
  1154   0008AE                     
  1155                           ;main.c: 329:     i2c_stop();
  1156   0008AE  EC63  F006         	call	_i2c_stop	;wreg free
  1157   0008B2  0012               	return		;funcret
  1158   0008B4                     __end_of_lcd_command:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _lcd_message *****************
  1162 ;; Defined at:
  1163 ;;		line 332 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  message         2   45[COMRAM] PTR unsigned char 
  1166 ;;		 -> STR_3(2), STR_2(9), STR_1(7), Receiver_buffer(55), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1
  1178 ;;      Params:         2       0       0
  1179 ;;      Locals:         0       0       0
  1180 ;;      Temps:          0       0       0
  1181 ;;      Totals:         2       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 6
  1185 ;; This function calls:
  1186 ;;		_i2c_start_and_addr
  1187 ;;		_i2c_stop
  1188 ;;		_lcd_char
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;;		_lcd_init
  1192 ;;		_lcd_backspace
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text5
  1197   0009F4                     __ptext5:
  1198                           	callstack 0
  1199   0009F4                     _lcd_message:
  1200                           	callstack 24
  1201   0009F4                     
  1202                           ;main.c: 332: void lcd_message(char* message);main.c: 333: {;main.c: 334:     i2c_start_
      +                          and_addr(0x4E);
  1203   0009F4  0E4E               	movlw	78
  1204   0009F6  ECCC  F005         	call	_i2c_start_and_addr
  1205                           
  1206                           ;main.c: 335:     while(*message != 0)
  1207   0009FA  EF13  F005         	goto	l1885
  1208   0009FE                     l1881:
  1209                           
  1210                           ;main.c: 336:     {;main.c: 337:         lcd_char(*message);
  1211   0009FE  C02E  FFF6         	movff	lcd_message@message,tblptrl
  1212   000A02  C02F  FFF7         	movff	lcd_message@message+1,tblptrh
  1213   000A06  6AF8               	clrf	tblptru,c
  1214   000A08  0E01               	movlw	(high __ramtop+-1)
  1215   000A0A  64F7               	cpfsgt	tblptrh,c
  1216   000A0C  D003               	bra	u1287
  1217   000A0E  0008               	tblrd		*
  1218   000A10  50F5               	movf	tablat,w,c
  1219   000A12  D005               	bra	u1280
  1220   000A14                     u1287:
  1221   000A14  CFF6 FFE9          	movff	tblptrl,fsr0l
  1222   000A18  CFF7 FFEA          	movff	tblptrh,fsr0h
  1223   000A1C  50EF               	movf	indf0,w,c
  1224   000A1E                     u1280:
  1225   000A1E  ECAE  F005         	call	_lcd_char
  1226   000A22                     
  1227                           ;main.c: 338:         message++;
  1228   000A22  4A2E               	infsnz	lcd_message@message^0,f,c
  1229   000A24  2A2F               	incf	(lcd_message@message+1)^0,f,c
  1230   000A26                     l1885:
  1231                           
  1232                           ;main.c: 335:     while(*message != 0)
  1233   000A26  C02E  FFF6         	movff	lcd_message@message,tblptrl
  1234   000A2A  C02F  FFF7         	movff	lcd_message@message+1,tblptrh
  1235   000A2E  6AF8               	clrf	tblptru,c
  1236   000A30  0E01               	movlw	(high __ramtop+-1)
  1237   000A32  64F7               	cpfsgt	tblptrh,c
  1238   000A34  D003               	bra	u1297
  1239   000A36  0008               	tblrd		*
  1240   000A38  50F5               	movf	tablat,w,c
  1241   000A3A  D005               	bra	u1290
  1242   000A3C                     u1297:
  1243   000A3C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1244   000A40  CFF7 FFEA          	movff	tblptrh,fsr0h
  1245   000A44  50EF               	movf	indf0,w,c
  1246   000A46                     u1290:
  1247   000A46  0900               	iorlw	0
  1248   000A48  A4D8               	btfss	status,2,c
  1249   000A4A  EF29  F005         	goto	u1301
  1250   000A4E  EF2B  F005         	goto	u1300
  1251   000A52                     u1301:
  1252   000A52  EFFF  F004         	goto	l1881
  1253   000A56                     u1300:
  1254   000A56                     
  1255                           ;main.c: 340:     i2c_stop();
  1256   000A56  EC63  F006         	call	_i2c_stop	;wreg free
  1257   000A5A  0012               	return		;funcret
  1258   000A5C                     __end_of_lcd_message:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _lcd_char *****************
  1262 ;; Defined at:
  1263 ;;		line 343 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  letter          1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  letter          1   44[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1
  1277 ;;      Params:         0       0       0
  1278 ;;      Locals:         1       0       0
  1279 ;;      Temps:          1       0       0
  1280 ;;      Totals:         2       0       0
  1281 ;;Total ram usage:        2 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 5
  1284 ;; This function calls:
  1285 ;;		_i2c_data_tx
  1286 ;; This function is called by:
  1287 ;;		_lcd_message
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text6
  1292   000B5C                     __ptext6:
  1293                           	callstack 0
  1294   000B5C                     _lcd_char:
  1295                           	callstack 24
  1296                           
  1297                           ;incstack = 0
  1298                           ;lcd_char@letter stored from wreg
  1299   000B5C  6E2D               	movwf	lcd_char@letter^0,c
  1300   000B5E                     
  1301                           ;main.c: 343: void lcd_char(char letter);main.c: 344: {;main.c: 345:     i2c_data_tx((le
      +                          tter & 0xF0) | 0b1101);
  1302   000B5E  502D               	movf	lcd_char@letter^0,w,c
  1303   000B60  0BF0               	andlw	240
  1304   000B62  090D               	iorlw	13
  1305   000B64  EC17  F006         	call	_i2c_data_tx
  1306                           
  1307                           ;main.c: 346:     i2c_data_tx((letter & 0xF0) | 8);
  1308   000B68  502D               	movf	lcd_char@letter^0,w,c
  1309   000B6A  0BF0               	andlw	240
  1310   000B6C  0908               	iorlw	8
  1311   000B6E  EC17  F006         	call	_i2c_data_tx
  1312                           
  1313                           ;main.c: 350:     i2c_data_tx(((letter & 0x0F) << 4) | 0b1101);
  1314   000B72  C02D  F02C         	movff	lcd_char@letter,??_lcd_char
  1315   000B76  0E0F               	movlw	15
  1316   000B78  162C               	andwf	??_lcd_char^0,f,c
  1317   000B7A  382C               	swapf	??_lcd_char^0,w,c
  1318   000B7C  0BF0               	andlw	240
  1319   000B7E  090D               	iorlw	13
  1320   000B80  EC17  F006         	call	_i2c_data_tx
  1321                           
  1322                           ;main.c: 351:     i2c_data_tx(((letter & 0x0F) << 4) | 8);
  1323   000B84  C02D  F02C         	movff	lcd_char@letter,??_lcd_char
  1324   000B88  0E0F               	movlw	15
  1325   000B8A  162C               	andwf	??_lcd_char^0,f,c
  1326   000B8C  382C               	swapf	??_lcd_char^0,w,c
  1327   000B8E  0BF0               	andlw	240
  1328   000B90  0908               	iorlw	8
  1329   000B92  EC17  F006         	call	_i2c_data_tx
  1330   000B96  0012               	return		;funcret
  1331   000B98                     __end_of_lcd_char:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _lcd_clear *****************
  1335 ;; Defined at:
  1336 ;;		line 355 in file "main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1
  1350 ;;      Params:         0       0       0
  1351 ;;      Locals:         0       0       0
  1352 ;;      Temps:          0       0       0
  1353 ;;      Totals:         0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 6
  1357 ;; This function calls:
  1358 ;;		_delay
  1359 ;;		_i2c_data_tx
  1360 ;;		_i2c_start_and_addr
  1361 ;;		_i2c_stop
  1362 ;; This function is called by:
  1363 ;;		_lcd_init
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text7
  1368   000A5C                     __ptext7:
  1369                           	callstack 0
  1370   000A5C                     _lcd_clear:
  1371                           	callstack 23
  1372   000A5C                     
  1373                           ;main.c: 357:     i2c_start_and_addr(0x4E);
  1374   000A5C  0E4E               	movlw	78
  1375   000A5E  ECCC  F005         	call	_i2c_start_and_addr
  1376                           
  1377                           ;main.c: 360:     i2c_data_tx(0b00001100);
  1378   000A62  0E0C               	movlw	12
  1379   000A64  EC17  F006         	call	_i2c_data_tx
  1380   000A68                     
  1381                           ;main.c: 361:     delay(1);
  1382   000A68  0E01               	movlw	1
  1383   000A6A  6E37               	movwf	delay@milliseconds^0,c
  1384   000A6C  0E00               	movlw	0
  1385   000A6E  6E38               	movwf	(delay@milliseconds+1)^0,c
  1386   000A70  0E00               	movlw	0
  1387   000A72  6E39               	movwf	(delay@milliseconds+2)^0,c
  1388   000A74  0E00               	movlw	0
  1389   000A76  6E3A               	movwf	(delay@milliseconds+3)^0,c
  1390   000A78  ECC0  F002         	call	_delay	;wreg free
  1391   000A7C                     
  1392                           ;main.c: 362:     i2c_data_tx(0b00001000);
  1393   000A7C  0E08               	movlw	8
  1394   000A7E  EC17  F006         	call	_i2c_data_tx
  1395   000A82                     
  1396                           ;main.c: 365:     i2c_data_tx(0b00011100);
  1397   000A82  0E1C               	movlw	28
  1398   000A84  EC17  F006         	call	_i2c_data_tx
  1399   000A88                     
  1400                           ;main.c: 366:     delay(1);
  1401   000A88  0E01               	movlw	1
  1402   000A8A  6E37               	movwf	delay@milliseconds^0,c
  1403   000A8C  0E00               	movlw	0
  1404   000A8E  6E38               	movwf	(delay@milliseconds+1)^0,c
  1405   000A90  0E00               	movlw	0
  1406   000A92  6E39               	movwf	(delay@milliseconds+2)^0,c
  1407   000A94  0E00               	movlw	0
  1408   000A96  6E3A               	movwf	(delay@milliseconds+3)^0,c
  1409   000A98  ECC0  F002         	call	_delay	;wreg free
  1410                           
  1411                           ;main.c: 367:     i2c_data_tx(0b00011000);
  1412   000A9C  0E18               	movlw	24
  1413   000A9E  EC17  F006         	call	_i2c_data_tx
  1414   000AA2                     
  1415                           ;main.c: 368:     delay(1);
  1416   000AA2  0E01               	movlw	1
  1417   000AA4  6E37               	movwf	delay@milliseconds^0,c
  1418   000AA6  0E00               	movlw	0
  1419   000AA8  6E38               	movwf	(delay@milliseconds+1)^0,c
  1420   000AAA  0E00               	movlw	0
  1421   000AAC  6E39               	movwf	(delay@milliseconds+2)^0,c
  1422   000AAE  0E00               	movlw	0
  1423   000AB0  6E3A               	movwf	(delay@milliseconds+3)^0,c
  1424   000AB2  ECC0  F002         	call	_delay	;wreg free
  1425   000AB6                     
  1426                           ;main.c: 370:     i2c_stop();
  1427   000AB6  EC63  F006         	call	_i2c_stop	;wreg free
  1428   000ABA  0012               	return		;funcret
  1429   000ABC                     __end_of_lcd_clear:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _i2c_stop *****************
  1433 ;; Defined at:
  1434 ;;		line 384 in file "main.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		None
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1
  1448 ;;      Params:         0       0       0
  1449 ;;      Locals:         0       0       0
  1450 ;;      Temps:          0       0       0
  1451 ;;      Totals:         0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 4
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_lcd_command
  1459 ;;		_lcd_message
  1460 ;;		_lcd_clear
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text8
  1465   000CC6                     __ptext8:
  1466                           	callstack 0
  1467   000CC6                     _i2c_stop:
  1468                           	callstack 25
  1469   000CC6                     
  1470                           ;main.c: 387:     SSPCON2bits.PEN = 1;
  1471   000CC6  84C5               	bsf	197,2,c	;volatile
  1472   000CC8                     l198:
  1473   000CC8  A69E               	btfss	158,3,c	;volatile
  1474   000CCA  EF69  F006         	goto	u1271
  1475   000CCE  EF6B  F006         	goto	u1270
  1476   000CD2                     u1271:
  1477   000CD2  EF64  F006         	goto	l198
  1478   000CD6                     u1270:
  1479   000CD6                     
  1480                           ;main.c: 389:     PIR1bits.SSPIF = 0;
  1481   000CD6  969E               	bcf	158,3,c	;volatile
  1482   000CD8  0012               	return		;funcret
  1483   000CDA                     __end_of_i2c_stop:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _i2c_start_and_addr *****************
  1487 ;; Defined at:
  1488 ;;		line 392 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  address         1    wreg     unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  address         1   42[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1
  1502 ;;      Params:         0       0       0
  1503 ;;      Locals:         1       0       0
  1504 ;;      Temps:          0       0       0
  1505 ;;      Totals:         1       0       0
  1506 ;;Total ram usage:        1 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 4
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_lcd_command
  1513 ;;		_lcd_message
  1514 ;;		_lcd_clear
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text9
  1519   000B98                     __ptext9:
  1520                           	callstack 0
  1521   000B98                     _i2c_start_and_addr:
  1522                           	callstack 25
  1523                           
  1524                           ;incstack = 0
  1525                           ;i2c_start_and_addr@address stored from wreg
  1526   000B98  6E2B               	movwf	i2c_start_and_addr@address^0,c
  1527   000B9A                     
  1528                           ;main.c: 392: void i2c_start_and_addr(unsigned char address);main.c: 393: {;main.c: 395:
      +                               SSPCON2bits.SEN = 1;
  1529   000B9A  80C5               	bsf	197,0,c	;volatile
  1530   000B9C                     l204:
  1531   000B9C  A69E               	btfss	158,3,c	;volatile
  1532   000B9E  EFD3  F005         	goto	u1221
  1533   000BA2  EFD5  F005         	goto	u1220
  1534   000BA6                     u1221:
  1535   000BA6  EFCE  F005         	goto	l204
  1536   000BAA                     u1220:
  1537   000BAA                     
  1538                           ;main.c: 397:     PIR1bits.SSPIF = 0;
  1539   000BAA  969E               	bcf	158,3,c	;volatile
  1540   000BAC                     l1855:
  1541                           
  1542                           ;main.c: 399:     {;main.c: 400:         SSPBUF = address;
  1543   000BAC  C02B  FFC9         	movff	i2c_start_and_addr@address,4041	;volatile
  1544   000BB0                     l208:
  1545   000BB0  A69E               	btfss	158,3,c	;volatile
  1546   000BB2  EFDD  F005         	goto	u1231
  1547   000BB6  EFDF  F005         	goto	u1230
  1548   000BBA                     u1231:
  1549   000BBA  EFD8  F005         	goto	l208
  1550   000BBE                     u1230:
  1551   000BBE                     
  1552                           ;main.c: 402:         PIR1bits.SSPIF = 0;
  1553   000BBE  969E               	bcf	158,3,c	;volatile
  1554                           
  1555                           ;main.c: 403:     }while(SSPCON2bits.ACKSTAT);
  1556   000BC0  BCC5               	btfsc	197,6,c	;volatile
  1557   000BC2  EFE5  F005         	goto	u1241
  1558   000BC6  EFE7  F005         	goto	u1240
  1559   000BCA                     u1241:
  1560   000BCA  EFD6  F005         	goto	l1855
  1561   000BCE                     u1240:
  1562   000BCE  0012               	return		;funcret
  1563   000BD0                     __end_of_i2c_start_and_addr:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _i2c_data_tx *****************
  1567 ;; Defined at:
  1568 ;;		line 373 in file "main.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  data            1    wreg     unsigned char 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  data            1   42[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1
  1582 ;;      Params:         0       0       0
  1583 ;;      Locals:         1       0       0
  1584 ;;      Temps:          0       0       0
  1585 ;;      Totals:         1       0       0
  1586 ;;Total ram usage:        1 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 4
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_lcd_command
  1593 ;;		_lcd_char
  1594 ;;		_lcd_clear
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text10
  1599   000C2E                     __ptext10:
  1600                           	callstack 0
  1601   000C2E                     _i2c_data_tx:
  1602                           	callstack 24
  1603                           
  1604                           ;incstack = 0
  1605                           ;i2c_data_tx@data stored from wreg
  1606   000C2E  6E2B               	movwf	i2c_data_tx@data^0,c
  1607   000C30                     l190:
  1608   000C30                     
  1609                           ;main.c: 376:     {;main.c: 377:         SSPBUF = data;
  1610   000C30  C02B  FFC9         	movff	i2c_data_tx@data,4041	;volatile
  1611   000C34                     l191:
  1612   000C34  A69E               	btfss	158,3,c	;volatile
  1613   000C36  EF1F  F006         	goto	u1251
  1614   000C3A  EF21  F006         	goto	u1250
  1615   000C3E                     u1251:
  1616   000C3E  EF1A  F006         	goto	l191
  1617   000C42                     u1250:
  1618   000C42                     
  1619                           ;main.c: 379:         PIR1bits.SSPIF = 0;
  1620   000C42  969E               	bcf	158,3,c	;volatile
  1621                           
  1622                           ;main.c: 381:     }while(SSPCON2bits.ACKSTAT);
  1623   000C44  BCC5               	btfsc	197,6,c	;volatile
  1624   000C46  EF27  F006         	goto	u1261
  1625   000C4A  EF29  F006         	goto	u1260
  1626   000C4E                     u1261:
  1627   000C4E  EF18  F006         	goto	l190
  1628   000C52                     u1260:
  1629   000C52  0012               	return		;funcret
  1630   000C54                     __end_of_i2c_data_tx:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _delay *****************
  1634 ;; Defined at:
  1635 ;;		line 237 in file "main.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  milliseconds    4   54[COMRAM] unsigned long 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  timer_value     8   58[COMRAM] unsigned long long 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1
  1649 ;;      Params:         4       0       0
  1650 ;;      Locals:         8       0       0
  1651 ;;      Temps:          0       0       0
  1652 ;;      Totals:        12       0       0
  1653 ;;Total ram usage:       12 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 5
  1656 ;; This function calls:
  1657 ;;		___lmul
  1658 ;; This function is called by:
  1659 ;;		_lcd_command
  1660 ;;		_lcd_clear
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text11
  1665   000580                     __ptext11:
  1666                           	callstack 0
  1667   000580                     _delay:
  1668                           	callstack 22
  1669   000580                     
  1670                           ;main.c: 237: void delay(unsigned long milliseconds);main.c: 238: {;main.c: 239:     T1C
      +                          ON = 0b10110000;
  1671   000580  0EB0               	movlw	176
  1672   000582  6ECD               	movwf	205,c	;volatile
  1673   000584                     
  1674                           ;main.c: 240:     PIE1bits.TMR1IE = 0;
  1675   000584  909D               	bcf	157,0,c	;volatile
  1676   000586                     
  1677                           ;main.c: 241:     unsigned long long timer_value = (milliseconds) * 1000 ;
  1678   000586  C037  F02B         	movff	delay@milliseconds,___lmul@multiplier
  1679   00058A  C038  F02C         	movff	delay@milliseconds+1,___lmul@multiplier+1
  1680   00058E  C039  F02D         	movff	delay@milliseconds+2,___lmul@multiplier+2
  1681   000592  C03A  F02E         	movff	delay@milliseconds+3,___lmul@multiplier+3
  1682   000596  0EE8               	movlw	232
  1683   000598  6E2F               	movwf	___lmul@multiplicand^0,c
  1684   00059A  0E03               	movlw	3
  1685   00059C  6E30               	movwf	(___lmul@multiplicand+1)^0,c
  1686   00059E  0E00               	movlw	0
  1687   0005A0  6E31               	movwf	(___lmul@multiplicand+2)^0,c
  1688   0005A2  0E00               	movlw	0
  1689   0005A4  6E32               	movwf	(___lmul@multiplicand+3)^0,c
  1690   0005A6  EC90  F004         	call	___lmul	;wreg free
  1691   0005AA  502B               	movf	?___lmul^0,w,c
  1692   0005AC  6E3B               	movwf	delay@timer_value^0,c
  1693   0005AE  502C               	movf	(?___lmul+1)^0,w,c
  1694   0005B0  6E3C               	movwf	(delay@timer_value+1)^0,c
  1695   0005B2  502D               	movf	(?___lmul+2)^0,w,c
  1696   0005B4  6E3D               	movwf	(delay@timer_value+2)^0,c
  1697   0005B6  502E               	movf	(?___lmul+3)^0,w,c
  1698   0005B8  6E3E               	movwf	(delay@timer_value+3)^0,c
  1699   0005BA  6A3F               	clrf	(delay@timer_value+4)^0,c
  1700   0005BC  6A40               	clrf	(delay@timer_value+5)^0,c
  1701   0005BE  6A41               	clrf	(delay@timer_value+6)^0,c
  1702   0005C0  6A42               	clrf	(delay@timer_value+7)^0,c
  1703                           
  1704                           ;main.c: 242:     while(timer_value > 65535)
  1705   0005C2  EF01  F003         	goto	l1843
  1706   0005C6                     l1835:
  1707                           
  1708                           ;main.c: 243:     {;main.c: 244:         timer_value -= 65535;
  1709   0005C6  0EFF               	movlw	255
  1710   0005C8  5E3B               	subwf	delay@timer_value^0,f,c
  1711   0005CA  0EFF               	movlw	255
  1712   0005CC  5A3C               	subwfb	(delay@timer_value+1)^0,f,c
  1713   0005CE  0E00               	movlw	0
  1714   0005D0  5A3D               	subwfb	(delay@timer_value+2)^0,f,c
  1715   0005D2  0E00               	movlw	0
  1716   0005D4  5A3E               	subwfb	(delay@timer_value+3)^0,f,c
  1717   0005D6  0E00               	movlw	0
  1718   0005D8  5A3F               	subwfb	(delay@timer_value+4)^0,f,c
  1719   0005DA  0E00               	movlw	0
  1720   0005DC  5A40               	subwfb	(delay@timer_value+5)^0,f,c
  1721   0005DE  0E00               	movlw	0
  1722   0005E0  5A41               	subwfb	(delay@timer_value+6)^0,f,c
  1723   0005E2  0E00               	movlw	0
  1724   0005E4  5A42               	subwfb	(delay@timer_value+7)^0,f,c
  1725   0005E6                     
  1726                           ;main.c: 245:         TMR1H = 0;
  1727   0005E6  0E00               	movlw	0
  1728   0005E8  6ECF               	movwf	207,c	;volatile
  1729   0005EA                     
  1730                           ;main.c: 246:         TMR1L = 0;
  1731   0005EA  0E00               	movlw	0
  1732   0005EC  6ECE               	movwf	206,c	;volatile
  1733   0005EE                     
  1734                           ;main.c: 247:         T1CONbits.TMR1ON = 1;
  1735   0005EE  80CD               	bsf	205,0,c	;volatile
  1736   0005F0                     l154:
  1737   0005F0  A09E               	btfss	158,0,c	;volatile
  1738   0005F2  EFFD  F002         	goto	u1191
  1739   0005F6  EFFF  F002         	goto	u1190
  1740   0005FA                     u1191:
  1741   0005FA  EFF8  F002         	goto	l154
  1742   0005FE                     u1190:
  1743   0005FE                     
  1744                           ;main.c: 249:         T1CONbits.TMR1ON = 0;
  1745   0005FE  90CD               	bcf	205,0,c	;volatile
  1746                           
  1747                           ;main.c: 250:         PIR1bits.TMR1IF = 0;
  1748   000600  909E               	bcf	158,0,c	;volatile
  1749   000602                     l1843:
  1750                           
  1751                           ;main.c: 242:     while(timer_value > 65535)
  1752   000602  5042               	movf	(delay@timer_value+7)^0,w,c
  1753   000604  1041               	iorwf	(delay@timer_value+6)^0,w,c
  1754   000606  1040               	iorwf	(delay@timer_value+5)^0,w,c
  1755   000608  103F               	iorwf	(delay@timer_value+4)^0,w,c
  1756   00060A  103E               	iorwf	(delay@timer_value+3)^0,w,c
  1757   00060C  E106               	bnz	u1201
  1758   00060E  043D               	decf	(delay@timer_value+2)^0,w,c
  1759   000610  B0D8               	btfsc	status,0,c
  1760   000612  EF0D  F003         	goto	u1201
  1761   000616  EF0F  F003         	goto	u1200
  1762   00061A                     u1201:
  1763   00061A  EFE3  F002         	goto	l1835
  1764   00061E                     u1200:
  1765   00061E                     
  1766                           ;main.c: 252:     timer_value = 65535 - timer_value + 1;
  1767   00061E  503B               	movf	delay@timer_value^0,w,c
  1768   000620  0800               	sublw	0
  1769   000622  6E3B               	movwf	delay@timer_value^0,c
  1770   000624  0E00               	movlw	0
  1771   000626  543C               	subfwb	(delay@timer_value+1)^0,w,c
  1772   000628  6E3C               	movwf	(delay@timer_value+1)^0,c
  1773   00062A  0E01               	movlw	1
  1774   00062C  543D               	subfwb	(delay@timer_value+2)^0,w,c
  1775   00062E  6E3D               	movwf	(delay@timer_value+2)^0,c
  1776   000630  0E00               	movlw	0
  1777   000632  543E               	subfwb	(delay@timer_value+3)^0,w,c
  1778   000634  6E3E               	movwf	(delay@timer_value+3)^0,c
  1779   000636  0E00               	movlw	0
  1780   000638  543F               	subfwb	(delay@timer_value+4)^0,w,c
  1781   00063A  6E3F               	movwf	(delay@timer_value+4)^0,c
  1782   00063C  0E00               	movlw	0
  1783   00063E  5440               	subfwb	(delay@timer_value+5)^0,w,c
  1784   000640  6E40               	movwf	(delay@timer_value+5)^0,c
  1785   000642  0E00               	movlw	0
  1786   000644  5441               	subfwb	(delay@timer_value+6)^0,w,c
  1787   000646  6E41               	movwf	(delay@timer_value+6)^0,c
  1788   000648  0E00               	movlw	0
  1789   00064A  5442               	subfwb	(delay@timer_value+7)^0,w,c
  1790   00064C  6E42               	movwf	(delay@timer_value+7)^0,c
  1791   00064E                     
  1792                           ;main.c: 253:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  1793   00064E  0E00               	movlw	0
  1794   000650  6ECF               	movwf	207,c	;volatile
  1795   000652                     
  1796                           ;main.c: 254:     TMR1L = (unsigned char)(0xFF & timer_value);
  1797   000652  C03B  FFCE         	movff	delay@timer_value,4046	;volatile
  1798   000656                     
  1799                           ;main.c: 255:     T1CONbits.TMR1ON = 1;
  1800   000656  80CD               	bsf	205,0,c	;volatile
  1801   000658                     l158:
  1802   000658  A09E               	btfss	158,0,c	;volatile
  1803   00065A  EF31  F003         	goto	u1211
  1804   00065E  EF33  F003         	goto	u1210
  1805   000662                     u1211:
  1806   000662  EF2C  F003         	goto	l158
  1807   000666                     u1210:
  1808   000666                     
  1809                           ;main.c: 257:     T1CONbits.TMR1ON = 0;
  1810   000666  90CD               	bcf	205,0,c	;volatile
  1811                           
  1812                           ;main.c: 258:     PIR1bits.TMR1IF = 0;
  1813   000668  909E               	bcf	158,0,c	;volatile
  1814   00066A  0012               	return		;funcret
  1815   00066C                     __end_of_delay:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function ___lmul *****************
  1819 ;; Defined at:
  1820 ;;		line 15 in file "C:\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  multiplier      4   42[COMRAM] unsigned long 
  1823 ;;  multiplicand    4   46[COMRAM] unsigned long 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  product         4   50[COMRAM] unsigned long 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  4   42[COMRAM] unsigned long 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1
  1835 ;;      Params:         8       0       0
  1836 ;;      Locals:         4       0       0
  1837 ;;      Temps:          0       0       0
  1838 ;;      Totals:        12       0       0
  1839 ;;Total ram usage:       12 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; Hardware stack levels required when called: 4
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_delay
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text12
  1850   000920                     __ptext12:
  1851                           	callstack 0
  1852   000920                     ___lmul:
  1853                           	callstack 22
  1854   000920  0E00               	movlw	0
  1855   000922  6E33               	movwf	___lmul@product^0,c
  1856   000924  0E00               	movlw	0
  1857   000926  6E34               	movwf	(___lmul@product+1)^0,c
  1858   000928  0E00               	movlw	0
  1859   00092A  6E35               	movwf	(___lmul@product+2)^0,c
  1860   00092C  0E00               	movlw	0
  1861   00092E  6E36               	movwf	(___lmul@product+3)^0,c
  1862   000930                     l1821:
  1863   000930  A02B               	btfss	___lmul@multiplier^0,0,c
  1864   000932  EF9D  F004         	goto	u1171
  1865   000936  EF9F  F004         	goto	u1170
  1866   00093A                     u1171:
  1867   00093A  EFA7  F004         	goto	l1825
  1868   00093E                     u1170:
  1869   00093E  502F               	movf	___lmul@multiplicand^0,w,c
  1870   000940  2633               	addwf	___lmul@product^0,f,c
  1871   000942  5030               	movf	(___lmul@multiplicand+1)^0,w,c
  1872   000944  2234               	addwfc	(___lmul@product+1)^0,f,c
  1873   000946  5031               	movf	(___lmul@multiplicand+2)^0,w,c
  1874   000948  2235               	addwfc	(___lmul@product+2)^0,f,c
  1875   00094A  5032               	movf	(___lmul@multiplicand+3)^0,w,c
  1876   00094C  2236               	addwfc	(___lmul@product+3)^0,f,c
  1877   00094E                     l1825:
  1878   00094E  90D8               	bcf	status,0,c
  1879   000950  362F               	rlcf	___lmul@multiplicand^0,f,c
  1880   000952  3630               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1881   000954  3631               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1882   000956  3632               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1883   000958  90D8               	bcf	status,0,c
  1884   00095A  322E               	rrcf	(___lmul@multiplier+3)^0,f,c
  1885   00095C  322D               	rrcf	(___lmul@multiplier+2)^0,f,c
  1886   00095E  322C               	rrcf	(___lmul@multiplier+1)^0,f,c
  1887   000960  322B               	rrcf	___lmul@multiplier^0,f,c
  1888   000962  502B               	movf	___lmul@multiplier^0,w,c
  1889   000964  102C               	iorwf	(___lmul@multiplier+1)^0,w,c
  1890   000966  102D               	iorwf	(___lmul@multiplier+2)^0,w,c
  1891   000968  102E               	iorwf	(___lmul@multiplier+3)^0,w,c
  1892   00096A  A4D8               	btfss	status,2,c
  1893   00096C  EFBA  F004         	goto	u1181
  1894   000970  EFBC  F004         	goto	u1180
  1895   000974                     u1181:
  1896   000974  EF98  F004         	goto	l1821
  1897   000978                     u1180:
  1898   000978  C033  F02B         	movff	___lmul@product,?___lmul
  1899   00097C  C034  F02C         	movff	___lmul@product+1,?___lmul+1
  1900   000980  C035  F02D         	movff	___lmul@product+2,?___lmul+2
  1901   000984  C036  F02E         	movff	___lmul@product+3,?___lmul+3
  1902   000988  0012               	return		;funcret
  1903   00098A                     __end_of___lmul:
  1904                           	callstack 0
  1905                           
  1906 ;; *************** function _check_strings *****************
  1907 ;; Defined at:
  1908 ;;		line 210 in file "main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  i               2   55[COMRAM] int 
  1913 ;;  j               1   58[COMRAM] unsigned char 
  1914 ;;  currently_ma    1   57[COMRAM] unsigned char 
  1915 ;;  match_cnt       1   54[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      unsigned char 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1
  1925 ;;      Params:         0       0       0
  1926 ;;      Locals:         5       0       0
  1927 ;;      Temps:          6       0       0
  1928 ;;      Totals:        11       0       0
  1929 ;;Total ram usage:       11 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 5
  1932 ;; This function calls:
  1933 ;;		___wmul
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text13
  1940   000486                     __ptext13:
  1941                           	callstack 0
  1942   000486                     _check_strings:
  1943                           	callstack 25
  1944   000486                     
  1945                           ;main.c: 212:     char match_cnt = 0;
  1946   000486  0E00               	movlw	0
  1947   000488  6E37               	movwf	check_strings@match_cnt^0,c
  1948                           
  1949                           ;main.c: 213:     char j = 0;
  1950   00048A  0E00               	movlw	0
  1951   00048C  6E3B               	movwf	check_strings@j^0,c
  1952                           
  1953                           ;main.c: 214:     char currently_match = 1;
  1954   00048E  0E01               	movlw	1
  1955   000490  6E3A               	movwf	check_strings@currently_match^0,c
  1956                           
  1957                           ;main.c: 215:     for(int i = 0; i < Buffer_row_index; i++)
  1958   000492  0E00               	movlw	0
  1959   000494  6E39               	movwf	(check_strings@i+1)^0,c
  1960   000496  0E00               	movlw	0
  1961   000498  6E38               	movwf	check_strings@i^0,c
  1962   00049A  EFAC  F002         	goto	l1993
  1963   00049E                     l1977:
  1964                           
  1965                           ;main.c: 218:         {;main.c: 219:             if(Receiver_buffer[Buffer_row_index - 1
      +                          ][j] == Receiver_buffer[i][j])
  1966   00049E  C038  F02B         	movff	check_strings@i,___wmul@multiplier
  1967   0004A2  C039  F02C         	movff	check_strings@i+1,___wmul@multiplier+1
  1968   0004A6  0E00               	movlw	0
  1969   0004A8  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1970   0004AA  0E0B               	movlw	11
  1971   0004AC  6E2D               	movwf	___wmul@multiplicand^0,c
  1972   0004AE  EC2A  F006         	call	___wmul	;wreg free
  1973   0004B2  0E80               	movlw	low _Receiver_buffer
  1974   0004B4  242B               	addwf	?___wmul^0,w,c
  1975   0004B6  6E31               	movwf	??_check_strings^0,c
  1976   0004B8  0E00               	movlw	high _Receiver_buffer
  1977   0004BA  202C               	addwfc	(?___wmul+1)^0,w,c
  1978   0004BC  6E32               	movwf	(??_check_strings+1)^0,c
  1979   0004BE  503B               	movf	check_strings@j^0,w,c
  1980   0004C0  2431               	addwf	??_check_strings^0,w,c
  1981   0004C2  6ED9               	movwf	fsr2l,c
  1982   0004C4  0E00               	movlw	0
  1983   0004C6  2032               	addwfc	(??_check_strings+1)^0,w,c
  1984   0004C8  6EDA               	movwf	fsr2h,c
  1985   0004CA  504E               	movf	_Buffer_row_index^0,w,c
  1986   0004CC  0D0B               	mullw	11
  1987   0004CE  0E75               	movlw	low (_Receiver_buffer+65525)
  1988   0004D0  24F3               	addwf	243,w,c
  1989   0004D2  6E34               	movwf	(??_check_strings+3)^0,c
  1990   0004D4  0E00               	movlw	high (_Receiver_buffer+65525)
  1991   0004D6  20F4               	addwfc	prodh,w,c
  1992   0004D8  6E35               	movwf	(??_check_strings+4)^0,c
  1993   0004DA  503B               	movf	check_strings@j^0,w,c
  1994   0004DC  2434               	addwf	(??_check_strings+3)^0,w,c
  1995   0004DE  6EE1               	movwf	fsr1l,c
  1996   0004E0  0E00               	movlw	0
  1997   0004E2  2035               	addwfc	(??_check_strings+4)^0,w,c
  1998   0004E4  6EE2               	movwf	fsr1h,c
  1999   0004E6  50DE               	movf	postinc2,w,c
  2000   0004E8  18E6               	xorwf	postinc1,w,c
  2001   0004EA  A4D8               	btfss	status,2,c
  2002   0004EC  EF7A  F002         	goto	u1341
  2003   0004F0  EF7C  F002         	goto	u1340
  2004   0004F4                     u1341:
  2005   0004F4  EF7F  F002         	goto	l1981
  2006   0004F8                     u1340:
  2007   0004F8                     
  2008                           ;main.c: 220:             {;main.c: 221:                 j++;
  2009   0004F8  2A3B               	incf	check_strings@j^0,f,c
  2010                           
  2011                           ;main.c: 222:             }
  2012   0004FA  EF81  F002         	goto	l140
  2013   0004FE                     l1981:
  2014                           
  2015                           ;main.c: 224:             {;main.c: 225:                currently_match = 0;
  2016   0004FE  0E00               	movlw	0
  2017   000500  6E3A               	movwf	check_strings@currently_match^0,c
  2018   000502                     l140:
  2019                           
  2020                           ;main.c: 217:         while(currently_match && Receiver_buffer[Buffer_row_index - 1][j] 
      +                          != '\0')
  2021   000502  503A               	movf	check_strings@currently_match^0,w,c
  2022   000504  B4D8               	btfsc	status,2,c
  2023   000506  EF87  F002         	goto	u1351
  2024   00050A  EF89  F002         	goto	u1350
  2025   00050E                     u1351:
  2026   00050E  EF9F  F002         	goto	l1985
  2027   000512                     u1350:
  2028   000512  504E               	movf	_Buffer_row_index^0,w,c
  2029   000514  0D0B               	mullw	11
  2030   000516  0E75               	movlw	low (_Receiver_buffer+65525)
  2031   000518  24F3               	addwf	243,w,c
  2032   00051A  6E31               	movwf	??_check_strings^0,c
  2033   00051C  0E00               	movlw	high (_Receiver_buffer+65525)
  2034   00051E  20F4               	addwfc	prodh,w,c
  2035   000520  6E32               	movwf	(??_check_strings+1)^0,c
  2036   000522  503B               	movf	check_strings@j^0,w,c
  2037   000524  2431               	addwf	??_check_strings^0,w,c
  2038   000526  6ED9               	movwf	fsr2l,c
  2039   000528  0E00               	movlw	0
  2040   00052A  2032               	addwfc	(??_check_strings+1)^0,w,c
  2041   00052C  6EDA               	movwf	fsr2h,c
  2042   00052E  50DF               	movf	indf2,w,c
  2043   000530  A4D8               	btfss	status,2,c
  2044   000532  EF9D  F002         	goto	u1361
  2045   000536  EF9F  F002         	goto	u1360
  2046   00053A                     u1361:
  2047   00053A  EF4F  F002         	goto	l1977
  2048   00053E                     u1360:
  2049   00053E                     l1985:
  2050                           
  2051                           ;main.c: 228:         if(currently_match)
  2052   00053E  503A               	movf	check_strings@currently_match^0,w,c
  2053   000540  B4D8               	btfsc	status,2,c
  2054   000542  EFA5  F002         	goto	u1371
  2055   000546  EFA7  F002         	goto	u1370
  2056   00054A                     u1371:
  2057   00054A  EFA8  F002         	goto	l1989
  2058   00054E                     u1370:
  2059   00054E                     
  2060                           ;main.c: 229:         {;main.c: 230:             match_cnt++;
  2061   00054E  2A37               	incf	check_strings@match_cnt^0,f,c
  2062   000550                     l1989:
  2063                           
  2064                           ;main.c: 232:         j = 0;
  2065   000550  0E00               	movlw	0
  2066   000552  6E3B               	movwf	check_strings@j^0,c
  2067   000554                     
  2068                           ;main.c: 233:     }
  2069   000554  4A38               	infsnz	check_strings@i^0,f,c
  2070   000556  2A39               	incf	(check_strings@i+1)^0,f,c
  2071   000558                     l1993:
  2072   000558  504E               	movf	_Buffer_row_index^0,w,c
  2073   00055A  6E31               	movwf	??_check_strings^0,c
  2074   00055C  6A32               	clrf	(??_check_strings+1)^0,c
  2075   00055E  5031               	movf	??_check_strings^0,w,c
  2076   000560  5C38               	subwf	check_strings@i^0,w,c
  2077   000562  5039               	movf	(check_strings@i+1)^0,w,c
  2078   000564  0A80               	xorlw	128
  2079   000566  6E33               	movwf	(??_check_strings+2)^0,c
  2080   000568  5032               	movf	(??_check_strings+1)^0,w,c
  2081   00056A  0A80               	xorlw	128
  2082   00056C  5833               	subwfb	(??_check_strings+2)^0,w,c
  2083   00056E  A0D8               	btfss	status,0,c
  2084   000570  EFBC  F002         	goto	u1381
  2085   000574  EFBE  F002         	goto	u1380
  2086   000578                     u1381:
  2087   000578  EF81  F002         	goto	l140
  2088   00057C                     u1380:
  2089   00057C                     
  2090                           ;main.c: 234:     return match_cnt;
  2091   00057C  5037               	movf	check_strings@match_cnt^0,w,c
  2092   00057E  0012               	return		;funcret
  2093   000580                     __end_of_check_strings:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function ___wmul *****************
  2097 ;; Defined at:
  2098 ;;		line 15 in file "C:\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  multiplier      2   42[COMRAM] unsigned int 
  2101 ;;  multiplicand    2   44[COMRAM] unsigned int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  product         2   46[COMRAM] unsigned int 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   42[COMRAM] unsigned int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, prodl, prodh
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1
  2113 ;;      Params:         4       0       0
  2114 ;;      Locals:         2       0       0
  2115 ;;      Temps:          0       0       0
  2116 ;;      Totals:         6       0       0
  2117 ;;Total ram usage:        6 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 4
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;;		_check_strings
  2125 ;;		_system_init
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text14
  2130   000C54                     __ptext14:
  2131                           	callstack 0
  2132   000C54                     ___wmul:
  2133                           	callstack 25
  2134   000C54  502B               	movf	___wmul@multiplier^0,w,c
  2135   000C56  022D               	mulwf	___wmul@multiplicand^0,c
  2136   000C58  CFF3 F02F          	movff	prodl,___wmul@product
  2137   000C5C  CFF4 F030          	movff	prodh,___wmul@product+1
  2138   000C60  502B               	movf	___wmul@multiplier^0,w,c
  2139   000C62  022E               	mulwf	(___wmul@multiplicand+1)^0,c
  2140   000C64  50F3               	movf	243,w,c
  2141   000C66  2630               	addwf	(___wmul@product+1)^0,f,c
  2142   000C68  502C               	movf	(___wmul@multiplier+1)^0,w,c
  2143   000C6A  022D               	mulwf	___wmul@multiplicand^0,c
  2144   000C6C  50F3               	movf	243,w,c
  2145   000C6E  2630               	addwf	(___wmul@product+1)^0,f,c
  2146   000C70  C02F  F02B         	movff	___wmul@product,?___wmul
  2147   000C74  C030  F02C         	movff	___wmul@product+1,?___wmul+1
  2148   000C78  0012               	return		;funcret
  2149   000C7A                     __end_of___wmul:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _ISR *****************
  2153 ;; Defined at:
  2154 ;;		line 103 in file "main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  j               2   32[COMRAM] int 
  2159 ;;  j               2   40[COMRAM] int 
  2160 ;;  j               2   36[COMRAM] int 
  2161 ;;  i               2   30[COMRAM] int 
  2162 ;;  i               2   38[COMRAM] int 
  2163 ;;  i               2   34[COMRAM] int 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1
  2173 ;;      Params:         0       0       0
  2174 ;;      Locals:        12       0       0
  2175 ;;      Temps:          6       0       0
  2176 ;;      Totals:        18       0       0
  2177 ;;Total ram usage:       18 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 3
  2180 ;; This function calls:
  2181 ;;		i2___wmul
  2182 ;;		i2_lcd_clear
  2183 ;; This function is called by:
  2184 ;;		Interrupt level 2
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	intcode
  2189   000008                     __pintcode:
  2190                           	callstack 0
  2191   000008                     _ISR:
  2192                           	callstack 22
  2193                           
  2194                           ;incstack = 0
  2195   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2196   00000A  CFD9 F01B          	movff	fsr2l,??_ISR+2
  2197   00000E  CFDA F01C          	movff	fsr2h,??_ISR+3
  2198   000012  CFF3 F01D          	movff	prodl,??_ISR+4
  2199   000016  CFF4 F01E          	movff	prodh,??_ISR+5
  2200   00001A                     
  2201                           ;main.c: 105:     if(INTCONbits.INT0IF == 1)
  2202   00001A  A2F2               	btfss	242,1,c	;volatile
  2203   00001C  EF12  F000         	goto	i2u98_41
  2204   000020  EF14  F000         	goto	i2u98_40
  2205   000024                     i2u98_41:
  2206   000024  EF26  F001         	goto	i2l111
  2207   000028                     i2u98_40:
  2208   000028                     
  2209                           ;main.c: 106:     {;main.c: 113:         current_character = (PORTB & 0x1F) >> 1;
  2210   000028  90D8               	bcf	status,0,c
  2211   00002A  3081               	rrcf	129,w,c	;volatile
  2212   00002C  0B0F               	andlw	15
  2213   00002E  6E53               	movwf	_current_character^0,c
  2214   000030                     
  2215                           ;main.c: 115:         INTCONbits.INT0IF = 0;
  2216   000030  92F2               	bcf	242,1,c	;volatile
  2217                           
  2218                           ;main.c: 116:         while(!INTCONbits.INT0IF)
  2219   000032  EF8E  F000         	goto	i2l112
  2220   000036                     i2l113:
  2221                           
  2222                           ;main.c: 117:         {;main.c: 118:          if(INTCONbits.TMR0IF == 1)
  2223   000036  A4F2               	btfss	242,2,c	;volatile
  2224   000038  EF20  F000         	goto	i2u99_41
  2225   00003C  EF22  F000         	goto	i2u99_40
  2226   000040                     i2u99_41:
  2227   000040  EF8E  F000         	goto	i2l112
  2228   000044                     i2u99_40:
  2229   000044                     
  2230                           ;main.c: 119:          {;main.c: 120:              INTCONbits.TMR0IF = 0;
  2231   000044  94F2               	bcf	242,2,c	;volatile
  2232   000046                     
  2233                           ;main.c: 121:             Time_out++;
  2234   000046  2A4D               	incf	_Time_out^0,f,c
  2235   000048                     
  2236                           ;main.c: 122:             if(Time_out == 3 && !new_input && screen_has_text)
  2237   000048  0E03               	movlw	3
  2238   00004A  184D               	xorwf	_Time_out^0,w,c
  2239   00004C  A4D8               	btfss	status,2,c
  2240   00004E  EF2B  F000         	goto	i2u100_41
  2241   000052  EF2D  F000         	goto	i2u100_40
  2242   000056                     i2u100_41:
  2243   000056  EF8E  F000         	goto	i2l112
  2244   00005A                     i2u100_40:
  2245   00005A  5051               	movf	_new_input^0,w,c
  2246   00005C  A4D8               	btfss	status,2,c
  2247   00005E  EF33  F000         	goto	i2u101_41
  2248   000062  EF35  F000         	goto	i2u101_40
  2249   000066                     i2u101_41:
  2250   000066  EF8E  F000         	goto	i2l112
  2251   00006A                     i2u101_40:
  2252   00006A  504C               	movf	_screen_has_text^0,w,c
  2253   00006C  B4D8               	btfsc	status,2,c
  2254   00006E  EF3B  F000         	goto	i2u102_41
  2255   000072  EF3D  F000         	goto	i2u102_40
  2256   000076                     i2u102_41:
  2257   000076  EF8E  F000         	goto	i2l112
  2258   00007A                     i2u102_40:
  2259   00007A                     
  2260                           ;main.c: 123:             {;main.c: 124:              lcd_clear();
  2261   00007A  EC5E  F005         	call	i2_lcd_clear	;wreg free
  2262   00007E                     
  2263                           ;main.c: 125:              screen_has_text = 0;
  2264   00007E  0E00               	movlw	0
  2265   000080  6E4C               	movwf	_screen_has_text^0,c
  2266   000082                     
  2267                           ;main.c: 126:              Time_out = 0;
  2268   000082  0E00               	movlw	0
  2269   000084  6E4D               	movwf	_Time_out^0,c
  2270   000086                     
  2271                           ;main.c: 127:                 new_input = 0;
  2272   000086  0E00               	movlw	0
  2273   000088  6E51               	movwf	_new_input^0,c
  2274   00008A                     
  2275                           ;main.c: 128:              has_prior_check = 0;
  2276   00008A  0E00               	movlw	0
  2277   00008C  6E52               	movwf	_has_prior_check^0,c
  2278   00008E                     
  2279                           ;main.c: 129:                 character_match_cnt = 0;
  2280   00008E  0E00               	movlw	0
  2281   000090  6E50               	movwf	_character_match_cnt^0,c
  2282   000092                     
  2283                           ;main.c: 130:                 Buffer_row_index = 0;
  2284   000092  0E00               	movlw	0
  2285   000094  6E4E               	movwf	_Buffer_row_index^0,c
  2286   000096                     
  2287                           ;main.c: 131:                 Buffer_col_index = 0;
  2288   000096  0E00               	movlw	0
  2289   000098  6E4F               	movwf	_Buffer_col_index^0,c
  2290   00009A                     
  2291                           ;main.c: 132:             for(int i = 0; i < 5;i++)
  2292   00009A  0E00               	movlw	0
  2293   00009C  6E20               	movwf	(ISR@i+1)^0,c
  2294   00009E  0E00               	movlw	0
  2295   0000A0  6E1F               	movwf	ISR@i^0,c
  2296   0000A2                     i2l1709:
  2297                           
  2298                           ;main.c: 133:             {;main.c: 135:                 for(int j = 0; j < 11;j++)
  2299   0000A2  0E00               	movlw	0
  2300   0000A4  6E22               	movwf	(ISR@j+1)^0,c
  2301   0000A6  0E00               	movlw	0
  2302   0000A8  6E21               	movwf	ISR@j^0,c
  2303   0000AA                     i2l1715:
  2304                           
  2305                           ;main.c: 136:                 {;main.c: 137:                   Receiver_buffer[i][j] = '
      +                          \0';
  2306   0000AA  C01F  F001         	movff	ISR@i,i2___wmul@multiplier
  2307   0000AE  C020  F002         	movff	ISR@i+1,i2___wmul@multiplier+1
  2308   0000B2  0E00               	movlw	0
  2309   0000B4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2310   0000B6  0E0B               	movlw	11
  2311   0000B8  6E03               	movwf	i2___wmul@multiplicand^0,c
  2312   0000BA  EC50  F006         	call	i2___wmul	;wreg free
  2313   0000BE  0E80               	movlw	low _Receiver_buffer
  2314   0000C0  2401               	addwf	?i2___wmul^0,w,c
  2315   0000C2  6E19               	movwf	??_ISR^0,c
  2316   0000C4  0E00               	movlw	high _Receiver_buffer
  2317   0000C6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2318   0000C8  6E1A               	movwf	(??_ISR+1)^0,c
  2319   0000CA  5021               	movf	ISR@j^0,w,c
  2320   0000CC  2419               	addwf	??_ISR^0,w,c
  2321   0000CE  6ED9               	movwf	fsr2l,c
  2322   0000D0  5022               	movf	(ISR@j+1)^0,w,c
  2323   0000D2  201A               	addwfc	(??_ISR+1)^0,w,c
  2324   0000D4  6EDA               	movwf	fsr2h,c
  2325   0000D6  6ADF               	clrf	indf2,c
  2326   0000D8                     
  2327                           ;main.c: 138:                 }
  2328   0000D8  4A21               	infsnz	ISR@j^0,f,c
  2329   0000DA  2A22               	incf	(ISR@j+1)^0,f,c
  2330   0000DC  BE22               	btfsc	(ISR@j+1)^0,7,c
  2331   0000DE  EF7A  F000         	goto	i2u103_41
  2332   0000E2  5022               	movf	(ISR@j+1)^0,w,c
  2333   0000E4  E109               	bnz	i2u103_40
  2334   0000E6  0E0B               	movlw	11
  2335   0000E8  5C21               	subwf	ISR@j^0,w,c
  2336   0000EA  A0D8               	btfss	status,0,c
  2337   0000EC  EF7A  F000         	goto	i2u103_41
  2338   0000F0  EF7C  F000         	goto	i2u103_40
  2339   0000F4                     i2u103_41:
  2340   0000F4  EF55  F000         	goto	i2l1715
  2341   0000F8                     i2u103_40:
  2342   0000F8                     
  2343                           ;main.c: 139:             }
  2344   0000F8  4A1F               	infsnz	ISR@i^0,f,c
  2345   0000FA  2A20               	incf	(ISR@i+1)^0,f,c
  2346   0000FC  BE20               	btfsc	(ISR@i+1)^0,7,c
  2347   0000FE  EF8A  F000         	goto	i2u104_41
  2348   000102  5020               	movf	(ISR@i+1)^0,w,c
  2349   000104  E109               	bnz	i2u104_40
  2350   000106  0E05               	movlw	5
  2351   000108  5C1F               	subwf	ISR@i^0,w,c
  2352   00010A  A0D8               	btfss	status,0,c
  2353   00010C  EF8A  F000         	goto	i2u104_41
  2354   000110  EF8C  F000         	goto	i2u104_40
  2355   000114                     i2u104_41:
  2356   000114  EF51  F000         	goto	i2l1709
  2357   000118                     i2u104_40:
  2358   000118  EF96  F001         	goto	i2l120
  2359   00011C                     i2l112:
  2360                           
  2361                           ;main.c: 116:         while(!INTCONbits.INT0IF)
  2362   00011C  A2F2               	btfss	242,1,c	;volatile
  2363   00011E  EF93  F000         	goto	i2u105_41
  2364   000122  EF95  F000         	goto	i2u105_40
  2365   000126                     i2u105_41:
  2366   000126  EF1B  F000         	goto	i2l113
  2367   00012A                     i2u105_40:
  2368   00012A                     
  2369                           ;main.c: 145:         current_character = current_character | ((PORTB & 0x1E) << 3);
  2370   00012A  CF81 F019          	movff	3969,??_ISR	;volatile
  2371   00012E  0E1E               	movlw	30
  2372   000130  1619               	andwf	??_ISR^0,f,c
  2373   000132  90D8               	bcf	status,0,c
  2374   000134  3619               	rlcf	??_ISR^0,f,c
  2375   000136  90D8               	bcf	status,0,c
  2376   000138  3619               	rlcf	??_ISR^0,f,c
  2377   00013A  90D8               	bcf	status,0,c
  2378   00013C  3419               	rlcf	??_ISR^0,w,c
  2379   00013E  1053               	iorwf	_current_character^0,w,c
  2380   000140  6E53               	movwf	_current_character^0,c
  2381   000142                     
  2382                           ;main.c: 146:         INTCONbits.INT0IF = 0;
  2383   000142  92F2               	bcf	242,1,c	;volatile
  2384                           
  2385                           ;main.c: 149:         if(current_character != 0xAA && current_character != 0xBB)
  2386   000144  0EAA               	movlw	170
  2387   000146  1853               	xorwf	_current_character^0,w,c
  2388   000148  B4D8               	btfsc	status,2,c
  2389   00014A  EFA9  F000         	goto	i2u106_41
  2390   00014E  EFAB  F000         	goto	i2u106_40
  2391   000152                     i2u106_41:
  2392   000152  EFC7  F000         	goto	i2l1735
  2393   000156                     i2u106_40:
  2394   000156  0EBB               	movlw	187
  2395   000158  1853               	xorwf	_current_character^0,w,c
  2396   00015A  B4D8               	btfsc	status,2,c
  2397   00015C  EFB2  F000         	goto	i2u107_41
  2398   000160  EFB4  F000         	goto	i2u107_40
  2399   000164                     i2u107_41:
  2400   000164  EFC7  F000         	goto	i2l1735
  2401   000168                     i2u107_40:
  2402   000168                     
  2403                           ;main.c: 150:         {;main.c: 151:             Receiver_buffer[Buffer_row_index][Buffe
      +                          r_col_index] = current_character;
  2404   000168  504E               	movf	_Buffer_row_index^0,w,c
  2405   00016A  0D0B               	mullw	11
  2406   00016C  0E80               	movlw	low _Receiver_buffer
  2407   00016E  24F3               	addwf	243,w,c
  2408   000170  6E19               	movwf	??_ISR^0,c
  2409   000172  0E00               	movlw	high _Receiver_buffer
  2410   000174  20F4               	addwfc	prodh,w,c
  2411   000176  6E1A               	movwf	(??_ISR+1)^0,c
  2412   000178  504F               	movf	_Buffer_col_index^0,w,c
  2413   00017A  2419               	addwf	??_ISR^0,w,c
  2414   00017C  6ED9               	movwf	fsr2l,c
  2415   00017E  0E00               	movlw	0
  2416   000180  201A               	addwfc	(??_ISR+1)^0,w,c
  2417   000182  6EDA               	movwf	fsr2h,c
  2418   000184  C053  FFDF         	movff	_current_character,indf2
  2419   000188                     
  2420                           ;main.c: 152:             Buffer_col_index++;
  2421   000188  2A4F               	incf	_Buffer_col_index^0,f,c
  2422                           
  2423                           ;main.c: 154:         }
  2424   00018A  EF26  F001         	goto	i2l111
  2425   00018E                     i2l1735:
  2426   00018E  0EBB               	movlw	187
  2427   000190  1853               	xorwf	_current_character^0,w,c
  2428   000192  A4D8               	btfss	status,2,c
  2429   000194  EFCE  F000         	goto	i2u108_41
  2430   000198  EFD0  F000         	goto	i2u108_40
  2431   00019C                     i2u108_41:
  2432   00019C  EFD7  F000         	goto	i2l1743
  2433   0001A0                     i2u108_40:
  2434   0001A0                     
  2435                           ;main.c: 156:         {;main.c: 157:             Buffer_row_index++;
  2436   0001A0  2A4E               	incf	_Buffer_row_index^0,f,c
  2437   0001A2                     
  2438                           ;main.c: 158:             Buffer_col_index = 0;
  2439   0001A2  0E00               	movlw	0
  2440   0001A4  6E4F               	movwf	_Buffer_col_index^0,c
  2441   0001A6                     
  2442                           ;main.c: 159:             new_input = 1;
  2443   0001A6  0E01               	movlw	1
  2444   0001A8  6E51               	movwf	_new_input^0,c
  2445                           
  2446                           ;main.c: 160:         }
  2447   0001AA  EF26  F001         	goto	i2l111
  2448   0001AE                     i2l1743:
  2449                           
  2450                           ;main.c: 162:         {;main.c: 163:             has_printed_message = 0;
  2451   0001AE  0E00               	movlw	0
  2452   0001B0  6E54               	movwf	_has_printed_message^0,c
  2453                           
  2454                           ;main.c: 164:             new_input = 0;
  2455   0001B2  0E00               	movlw	0
  2456   0001B4  6E51               	movwf	_new_input^0,c
  2457                           
  2458                           ;main.c: 165:             character_match_cnt = 0;
  2459   0001B6  0E00               	movlw	0
  2460   0001B8  6E50               	movwf	_character_match_cnt^0,c
  2461                           
  2462                           ;main.c: 166:             current_character = 0;
  2463   0001BA  0E00               	movlw	0
  2464   0001BC  6E53               	movwf	_current_character^0,c
  2465                           
  2466                           ;main.c: 167:             has_prior_check = 0;
  2467   0001BE  0E00               	movlw	0
  2468   0001C0  6E52               	movwf	_has_prior_check^0,c
  2469                           
  2470                           ;main.c: 168:             Time_out = 0;
  2471   0001C2  0E00               	movlw	0
  2472   0001C4  6E4D               	movwf	_Time_out^0,c
  2473                           
  2474                           ;main.c: 169:             Buffer_row_index = 0;
  2475   0001C6  0E00               	movlw	0
  2476   0001C8  6E4E               	movwf	_Buffer_row_index^0,c
  2477                           
  2478                           ;main.c: 170:             Buffer_col_index = 0;
  2479   0001CA  0E00               	movlw	0
  2480   0001CC  6E4F               	movwf	_Buffer_col_index^0,c
  2481                           
  2482                           ;main.c: 171:             for(int i = 0; i < 5;i++)
  2483   0001CE  0E00               	movlw	0
  2484   0001D0  6E24               	movwf	(ISR@i_740+1)^0,c
  2485   0001D2  0E00               	movlw	0
  2486   0001D4  6E23               	movwf	ISR@i_740^0,c
  2487   0001D6                     i2l1749:
  2488                           
  2489                           ;main.c: 172:             {;main.c: 174:               for(int j = 0; j < 11;j++)
  2490   0001D6  0E00               	movlw	0
  2491   0001D8  6E26               	movwf	(ISR@j_741+1)^0,c
  2492   0001DA  0E00               	movlw	0
  2493   0001DC  6E25               	movwf	ISR@j_741^0,c
  2494   0001DE                     i2l1755:
  2495                           
  2496                           ;main.c: 175:               {;main.c: 176:                  Receiver_buffer[i][j] = '\0'
      +                          ;
  2497   0001DE  C023  F001         	movff	ISR@i_740,i2___wmul@multiplier
  2498   0001E2  C024  F002         	movff	ISR@i_740+1,i2___wmul@multiplier+1
  2499   0001E6  0E00               	movlw	0
  2500   0001E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2501   0001EA  0E0B               	movlw	11
  2502   0001EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  2503   0001EE  EC50  F006         	call	i2___wmul	;wreg free
  2504   0001F2  0E80               	movlw	low _Receiver_buffer
  2505   0001F4  2401               	addwf	?i2___wmul^0,w,c
  2506   0001F6  6E19               	movwf	??_ISR^0,c
  2507   0001F8  0E00               	movlw	high _Receiver_buffer
  2508   0001FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2509   0001FC  6E1A               	movwf	(??_ISR+1)^0,c
  2510   0001FE  5025               	movf	ISR@j_741^0,w,c
  2511   000200  2419               	addwf	??_ISR^0,w,c
  2512   000202  6ED9               	movwf	fsr2l,c
  2513   000204  5026               	movf	(ISR@j_741+1)^0,w,c
  2514   000206  201A               	addwfc	(??_ISR+1)^0,w,c
  2515   000208  6EDA               	movwf	fsr2h,c
  2516   00020A  6ADF               	clrf	indf2,c
  2517   00020C                     
  2518                           ;main.c: 177:                 }
  2519   00020C  4A25               	infsnz	ISR@j_741^0,f,c
  2520   00020E  2A26               	incf	(ISR@j_741+1)^0,f,c
  2521   000210  BE26               	btfsc	(ISR@j_741+1)^0,7,c
  2522   000212  EF14  F001         	goto	i2u109_41
  2523   000216  5026               	movf	(ISR@j_741+1)^0,w,c
  2524   000218  E109               	bnz	i2u109_40
  2525   00021A  0E0B               	movlw	11
  2526   00021C  5C25               	subwf	ISR@j_741^0,w,c
  2527   00021E  A0D8               	btfss	status,0,c
  2528   000220  EF14  F001         	goto	i2u109_41
  2529   000224  EF16  F001         	goto	i2u109_40
  2530   000228                     i2u109_41:
  2531   000228  EFEF  F000         	goto	i2l1755
  2532   00022C                     i2u109_40:
  2533   00022C                     
  2534                           ;main.c: 178:             }
  2535   00022C  4A23               	infsnz	ISR@i_740^0,f,c
  2536   00022E  2A24               	incf	(ISR@i_740+1)^0,f,c
  2537   000230  BE24               	btfsc	(ISR@i_740+1)^0,7,c
  2538   000232  EF24  F001         	goto	i2u110_41
  2539   000236  5024               	movf	(ISR@i_740+1)^0,w,c
  2540   000238  E109               	bnz	i2u110_40
  2541   00023A  0E05               	movlw	5
  2542   00023C  5C23               	subwf	ISR@i_740^0,w,c
  2543   00023E  A0D8               	btfss	status,0,c
  2544   000240  EF24  F001         	goto	i2u110_41
  2545   000244  EF26  F001         	goto	i2u110_40
  2546   000248                     i2u110_41:
  2547   000248  EFEB  F000         	goto	i2l1749
  2548   00024C                     i2u110_40:
  2549   00024C                     i2l111:
  2550                           
  2551                           ;main.c: 181:     if(INTCONbits.TMR0IF == 1)
  2552   00024C  A4F2               	btfss	242,2,c	;volatile
  2553   00024E  EF2B  F001         	goto	i2u111_41
  2554   000252  EF2D  F001         	goto	i2u111_40
  2555   000256                     i2u111_41:
  2556   000256  EF96  F001         	goto	i2l120
  2557   00025A                     i2u111_40:
  2558   00025A                     
  2559                           ;main.c: 182:     {;main.c: 184:         INTCONbits.TMR0IF = 0;
  2560   00025A  94F2               	bcf	242,2,c	;volatile
  2561   00025C                     
  2562                           ;main.c: 185:         Time_out++;
  2563   00025C  2A4D               	incf	_Time_out^0,f,c
  2564   00025E                     
  2565                           ;main.c: 186:         if(Time_out >= 3 && !new_input && screen_has_text)
  2566   00025E  0E02               	movlw	2
  2567   000260  644D               	cpfsgt	_Time_out^0,c
  2568   000262  EF35  F001         	goto	i2u112_41
  2569   000266  EF37  F001         	goto	i2u112_40
  2570   00026A                     i2u112_41:
  2571   00026A  EF96  F001         	goto	i2l120
  2572   00026E                     i2u112_40:
  2573   00026E  5051               	movf	_new_input^0,w,c
  2574   000270  A4D8               	btfss	status,2,c
  2575   000272  EF3D  F001         	goto	i2u113_41
  2576   000276  EF3F  F001         	goto	i2u113_40
  2577   00027A                     i2u113_41:
  2578   00027A  EF96  F001         	goto	i2l120
  2579   00027E                     i2u113_40:
  2580   00027E  504C               	movf	_screen_has_text^0,w,c
  2581   000280  B4D8               	btfsc	status,2,c
  2582   000282  EF45  F001         	goto	i2u114_41
  2583   000286  EF47  F001         	goto	i2u114_40
  2584   00028A                     i2u114_41:
  2585   00028A  EF96  F001         	goto	i2l120
  2586   00028E                     i2u114_40:
  2587   00028E                     
  2588                           ;main.c: 187:         {;main.c: 188:             lcd_clear();
  2589   00028E  EC5E  F005         	call	i2_lcd_clear	;wreg free
  2590   000292                     
  2591                           ;main.c: 189:             screen_has_text = 0;
  2592   000292  0E00               	movlw	0
  2593   000294  6E4C               	movwf	_screen_has_text^0,c
  2594   000296                     
  2595                           ;main.c: 190:             Time_out = 0;
  2596   000296  0E00               	movlw	0
  2597   000298  6E4D               	movwf	_Time_out^0,c
  2598   00029A                     
  2599                           ;main.c: 191:             new_input = 0;
  2600   00029A  0E00               	movlw	0
  2601   00029C  6E51               	movwf	_new_input^0,c
  2602   00029E                     
  2603                           ;main.c: 192:             has_prior_check = 0;
  2604   00029E  0E00               	movlw	0
  2605   0002A0  6E52               	movwf	_has_prior_check^0,c
  2606   0002A2                     
  2607                           ;main.c: 193:             character_match_cnt = 0;
  2608   0002A2  0E00               	movlw	0
  2609   0002A4  6E50               	movwf	_character_match_cnt^0,c
  2610   0002A6                     
  2611                           ;main.c: 194:             Buffer_row_index = 0;
  2612   0002A6  0E00               	movlw	0
  2613   0002A8  6E4E               	movwf	_Buffer_row_index^0,c
  2614   0002AA                     
  2615                           ;main.c: 195:             Buffer_col_index = 0;
  2616   0002AA  0E00               	movlw	0
  2617   0002AC  6E4F               	movwf	_Buffer_col_index^0,c
  2618   0002AE                     
  2619                           ;main.c: 196:             for(int i = 0; i < 5;i++)
  2620   0002AE  0E00               	movlw	0
  2621   0002B0  6E28               	movwf	(ISR@i_742+1)^0,c
  2622   0002B2  0E00               	movlw	0
  2623   0002B4  6E27               	movwf	ISR@i_742^0,c
  2624   0002B6                     i2l1797:
  2625                           
  2626                           ;main.c: 197:             {;main.c: 199:                 for(int j = 0; j < 11;j++)
  2627   0002B6  0E00               	movlw	0
  2628   0002B8  6E2A               	movwf	(ISR@j_743+1)^0,c
  2629   0002BA  0E00               	movlw	0
  2630   0002BC  6E29               	movwf	ISR@j_743^0,c
  2631   0002BE                     i2l1803:
  2632                           
  2633                           ;main.c: 200:                 {;main.c: 201:                     Receiver_buffer[i][j] =
      +                           '\0';
  2634   0002BE  C027  F001         	movff	ISR@i_742,i2___wmul@multiplier
  2635   0002C2  C028  F002         	movff	ISR@i_742+1,i2___wmul@multiplier+1
  2636   0002C6  0E00               	movlw	0
  2637   0002C8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2638   0002CA  0E0B               	movlw	11
  2639   0002CC  6E03               	movwf	i2___wmul@multiplicand^0,c
  2640   0002CE  EC50  F006         	call	i2___wmul	;wreg free
  2641   0002D2  0E80               	movlw	low _Receiver_buffer
  2642   0002D4  2401               	addwf	?i2___wmul^0,w,c
  2643   0002D6  6E19               	movwf	??_ISR^0,c
  2644   0002D8  0E00               	movlw	high _Receiver_buffer
  2645   0002DA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2646   0002DC  6E1A               	movwf	(??_ISR+1)^0,c
  2647   0002DE  5029               	movf	ISR@j_743^0,w,c
  2648   0002E0  2419               	addwf	??_ISR^0,w,c
  2649   0002E2  6ED9               	movwf	fsr2l,c
  2650   0002E4  502A               	movf	(ISR@j_743+1)^0,w,c
  2651   0002E6  201A               	addwfc	(??_ISR+1)^0,w,c
  2652   0002E8  6EDA               	movwf	fsr2h,c
  2653   0002EA  6ADF               	clrf	indf2,c
  2654   0002EC                     
  2655                           ;main.c: 202:                 }
  2656   0002EC  4A29               	infsnz	ISR@j_743^0,f,c
  2657   0002EE  2A2A               	incf	(ISR@j_743+1)^0,f,c
  2658   0002F0  BE2A               	btfsc	(ISR@j_743+1)^0,7,c
  2659   0002F2  EF84  F001         	goto	i2u115_41
  2660   0002F6  502A               	movf	(ISR@j_743+1)^0,w,c
  2661   0002F8  E109               	bnz	i2u115_40
  2662   0002FA  0E0B               	movlw	11
  2663   0002FC  5C29               	subwf	ISR@j_743^0,w,c
  2664   0002FE  A0D8               	btfss	status,0,c
  2665   000300  EF84  F001         	goto	i2u115_41
  2666   000304  EF86  F001         	goto	i2u115_40
  2667   000308                     i2u115_41:
  2668   000308  EF5F  F001         	goto	i2l1803
  2669   00030C                     i2u115_40:
  2670   00030C                     
  2671                           ;main.c: 203:             }
  2672   00030C  4A27               	infsnz	ISR@i_742^0,f,c
  2673   00030E  2A28               	incf	(ISR@i_742+1)^0,f,c
  2674   000310  BE28               	btfsc	(ISR@i_742+1)^0,7,c
  2675   000312  EF94  F001         	goto	i2u116_41
  2676   000316  5028               	movf	(ISR@i_742+1)^0,w,c
  2677   000318  E109               	bnz	i2u116_40
  2678   00031A  0E05               	movlw	5
  2679   00031C  5C27               	subwf	ISR@i_742^0,w,c
  2680   00031E  A0D8               	btfss	status,0,c
  2681   000320  EF94  F001         	goto	i2u116_41
  2682   000324  EF96  F001         	goto	i2u116_40
  2683   000328                     i2u116_41:
  2684   000328  EF5B  F001         	goto	i2l1797
  2685   00032C                     i2u116_40:
  2686   00032C                     i2l120:
  2687   00032C  C01E  FFF4         	movff	??_ISR+5,prodh
  2688   000330  C01D  FFF3         	movff	??_ISR+4,prodl
  2689   000334  C01C  FFDA         	movff	??_ISR+3,fsr2h
  2690   000338  C01B  FFD9         	movff	??_ISR+2,fsr2l
  2691   00033C  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2692   00033E  0011               	retfie		f
  2693   000340                     __end_of_ISR:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function i2_lcd_clear *****************
  2697 ;; Defined at:
  2698 ;;		line 355 in file "main.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1
  2712 ;;      Params:         0       0       0
  2713 ;;      Locals:         0       0       0
  2714 ;;      Temps:          0       0       0
  2715 ;;      Totals:         0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 2
  2719 ;; This function calls:
  2720 ;;		i2_delay
  2721 ;;		i2_i2c_data_tx
  2722 ;;		i2_i2c_start_and_addr
  2723 ;;		i2_i2c_stop
  2724 ;; This function is called by:
  2725 ;;		_ISR
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text16
  2730   000ABC                     __ptext16:
  2731                           	callstack 0
  2732   000ABC                     i2_lcd_clear:
  2733                           	callstack 22
  2734   000ABC                     
  2735                           ;main.c: 357:     i2c_start_and_addr(0x4E);
  2736   000ABC  0E4E               	movlw	78
  2737   000ABE  ECE8  F005         	call	i2_i2c_start_and_addr
  2738                           
  2739                           ;main.c: 360:     i2c_data_tx(0b00001100);
  2740   000AC2  0E0C               	movlw	12
  2741   000AC4  EC3D  F006         	call	i2_i2c_data_tx
  2742   000AC8                     
  2743                           ;main.c: 361:     delay(1);
  2744   000AC8  0E01               	movlw	1
  2745   000ACA  6E0D               	movwf	i2delay@milliseconds^0,c
  2746   000ACC  0E00               	movlw	0
  2747   000ACE  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  2748   000AD0  0E00               	movlw	0
  2749   000AD2  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  2750   000AD4  0E00               	movlw	0
  2751   000AD6  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  2752   000AD8  EC36  F003         	call	i2_delay	;wreg free
  2753   000ADC                     
  2754                           ;main.c: 362:     i2c_data_tx(0b00001000);
  2755   000ADC  0E08               	movlw	8
  2756   000ADE  EC3D  F006         	call	i2_i2c_data_tx
  2757   000AE2                     
  2758                           ;main.c: 365:     i2c_data_tx(0b00011100);
  2759   000AE2  0E1C               	movlw	28
  2760   000AE4  EC3D  F006         	call	i2_i2c_data_tx
  2761   000AE8                     
  2762                           ;main.c: 366:     delay(1);
  2763   000AE8  0E01               	movlw	1
  2764   000AEA  6E0D               	movwf	i2delay@milliseconds^0,c
  2765   000AEC  0E00               	movlw	0
  2766   000AEE  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  2767   000AF0  0E00               	movlw	0
  2768   000AF2  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  2769   000AF4  0E00               	movlw	0
  2770   000AF6  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  2771   000AF8  EC36  F003         	call	i2_delay	;wreg free
  2772                           
  2773                           ;main.c: 367:     i2c_data_tx(0b00011000);
  2774   000AFC  0E18               	movlw	24
  2775   000AFE  EC3D  F006         	call	i2_i2c_data_tx
  2776   000B02                     
  2777                           ;main.c: 368:     delay(1);
  2778   000B02  0E01               	movlw	1
  2779   000B04  6E0D               	movwf	i2delay@milliseconds^0,c
  2780   000B06  0E00               	movlw	0
  2781   000B08  6E0E               	movwf	(i2delay@milliseconds+1)^0,c
  2782   000B0A  0E00               	movlw	0
  2783   000B0C  6E0F               	movwf	(i2delay@milliseconds+2)^0,c
  2784   000B0E  0E00               	movlw	0
  2785   000B10  6E10               	movwf	(i2delay@milliseconds+3)^0,c
  2786   000B12  EC36  F003         	call	i2_delay	;wreg free
  2787   000B16                     
  2788                           ;main.c: 370:     i2c_stop();
  2789   000B16  EC6D  F006         	call	i2_i2c_stop	;wreg free
  2790   000B1A  0012               	return		;funcret
  2791   000B1C                     __end_ofi2_lcd_clear:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function i2_i2c_stop *****************
  2795 ;; Defined at:
  2796 ;;		line 384 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		None
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1
  2810 ;;      Params:         0       0       0
  2811 ;;      Locals:         0       0       0
  2812 ;;      Temps:          0       0       0
  2813 ;;      Totals:         0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		i2_lcd_clear
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text17
  2824   000CDA                     __ptext17:
  2825                           	callstack 0
  2826   000CDA                     i2_i2c_stop:
  2827                           	callstack 23
  2828   000CDA                     
  2829                           ;main.c: 387:     SSPCON2bits.PEN = 1;
  2830   000CDA  84C5               	bsf	197,2,c	;volatile
  2831   000CDC                     i2l198:
  2832   000CDC  A69E               	btfss	158,3,c	;volatile
  2833   000CDE  EF73  F006         	goto	i2u81_41
  2834   000CE2  EF75  F006         	goto	i2u81_40
  2835   000CE6                     i2u81_41:
  2836   000CE6  EF6E  F006         	goto	i2l198
  2837   000CEA                     i2u81_40:
  2838   000CEA                     
  2839                           ;main.c: 389:     PIR1bits.SSPIF = 0;
  2840   000CEA  969E               	bcf	158,3,c	;volatile
  2841   000CEC  0012               	return		;funcret
  2842   000CEE                     __end_ofi2_i2c_stop:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function i2_i2c_start_and_addr *****************
  2846 ;; Defined at:
  2847 ;;		line 392 in file "main.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  address         1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  address         1    0[COMRAM] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1
  2861 ;;      Params:         0       0       0
  2862 ;;      Locals:         1       0       0
  2863 ;;      Temps:          0       0       0
  2864 ;;      Totals:         1       0       0
  2865 ;;Total ram usage:        1 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		i2_lcd_clear
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text18
  2875   000BD0                     __ptext18:
  2876                           	callstack 0
  2877   000BD0                     i2_i2c_start_and_addr:
  2878                           	callstack 23
  2879                           
  2880                           ;incstack = 0
  2881                           ;i2i2c_start_and_addr@address stored from wreg
  2882   000BD0  6E01               	movwf	i2i2c_start_and_addr@address^0,c
  2883   000BD2                     
  2884                           ;main.c: 392: void i2c_start_and_addr(unsigned char address);main.c: 393: {;main.c: 395:
      +                               SSPCON2bits.SEN = 1;
  2885   000BD2  80C5               	bsf	197,0,c	;volatile
  2886   000BD4                     i2l204:
  2887   000BD4  A69E               	btfss	158,3,c	;volatile
  2888   000BD6  EFEF  F005         	goto	i2u82_41
  2889   000BDA  EFF1  F005         	goto	i2u82_40
  2890   000BDE                     i2u82_41:
  2891   000BDE  EFEA  F005         	goto	i2l204
  2892   000BE2                     i2u82_40:
  2893   000BE2                     
  2894                           ;main.c: 397:     PIR1bits.SSPIF = 0;
  2895   000BE2  969E               	bcf	158,3,c	;volatile
  2896   000BE4                     i2l1493:
  2897                           
  2898                           ;main.c: 399:     {;main.c: 400:         SSPBUF = address;
  2899   000BE4  C001  FFC9         	movff	i2i2c_start_and_addr@address,4041	;volatile
  2900   000BE8                     i2l208:
  2901   000BE8  A69E               	btfss	158,3,c	;volatile
  2902   000BEA  EFF9  F005         	goto	i2u83_41
  2903   000BEE  EFFB  F005         	goto	i2u83_40
  2904   000BF2                     i2u83_41:
  2905   000BF2  EFF4  F005         	goto	i2l208
  2906   000BF6                     i2u83_40:
  2907   000BF6                     
  2908                           ;main.c: 402:         PIR1bits.SSPIF = 0;
  2909   000BF6  969E               	bcf	158,3,c	;volatile
  2910                           
  2911                           ;main.c: 403:     }while(SSPCON2bits.ACKSTAT);
  2912   000BF8  BCC5               	btfsc	197,6,c	;volatile
  2913   000BFA  EF01  F006         	goto	i2u84_41
  2914   000BFE  EF03  F006         	goto	i2u84_40
  2915   000C02                     i2u84_41:
  2916   000C02  EFF2  F005         	goto	i2l1493
  2917   000C06                     i2u84_40:
  2918   000C06  0012               	return		;funcret
  2919   000C08                     __end_ofi2_i2c_start_and_addr:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function i2_i2c_data_tx *****************
  2923 ;; Defined at:
  2924 ;;		line 373 in file "main.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  data            1    wreg     unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  data            1    0[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1
  2938 ;;      Params:         0       0       0
  2939 ;;      Locals:         1       0       0
  2940 ;;      Temps:          0       0       0
  2941 ;;      Totals:         1       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		i2_lcd_clear
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text19
  2952   000C7A                     __ptext19:
  2953                           	callstack 0
  2954   000C7A                     i2_i2c_data_tx:
  2955                           	callstack 23
  2956                           
  2957                           ;incstack = 0
  2958                           ;i2i2c_data_tx@data stored from wreg
  2959   000C7A  6E01               	movwf	i2i2c_data_tx@data^0,c
  2960   000C7C                     i2l190:
  2961   000C7C                     
  2962                           ;main.c: 376:     {;main.c: 377:         SSPBUF = data;
  2963   000C7C  C001  FFC9         	movff	i2i2c_data_tx@data,4041	;volatile
  2964   000C80                     i2l191:
  2965   000C80  A69E               	btfss	158,3,c	;volatile
  2966   000C82  EF45  F006         	goto	i2u79_41
  2967   000C86  EF47  F006         	goto	i2u79_40
  2968   000C8A                     i2u79_41:
  2969   000C8A  EF40  F006         	goto	i2l191
  2970   000C8E                     i2u79_40:
  2971   000C8E                     
  2972                           ;main.c: 379:         PIR1bits.SSPIF = 0;
  2973   000C8E  969E               	bcf	158,3,c	;volatile
  2974                           
  2975                           ;main.c: 381:     }while(SSPCON2bits.ACKSTAT);
  2976   000C90  BCC5               	btfsc	197,6,c	;volatile
  2977   000C92  EF4D  F006         	goto	i2u80_41
  2978   000C96  EF4F  F006         	goto	i2u80_40
  2979   000C9A                     i2u80_41:
  2980   000C9A  EF3E  F006         	goto	i2l190
  2981   000C9E                     i2u80_40:
  2982   000C9E  0012               	return		;funcret
  2983   000CA0                     __end_ofi2_i2c_data_tx:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function i2_delay *****************
  2987 ;; Defined at:
  2988 ;;		line 237 in file "main.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  milliseconds    4   12[COMRAM] unsigned long 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  timer_value     8   16[COMRAM] unsigned long long 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1
  3002 ;;      Params:         4       0       0
  3003 ;;      Locals:         8       0       0
  3004 ;;      Temps:          0       0       0
  3005 ;;      Totals:        12       0       0
  3006 ;;Total ram usage:       12 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 1
  3009 ;; This function calls:
  3010 ;;		i2___lmul
  3011 ;; This function is called by:
  3012 ;;		i2_lcd_clear
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text20
  3017   00066C                     __ptext20:
  3018                           	callstack 0
  3019   00066C                     i2_delay:
  3020                           	callstack 22
  3021   00066C                     
  3022                           ;main.c: 237: void delay(unsigned long milliseconds);main.c: 238: {;main.c: 239:     T1C
      +                          ON = 0b10110000;
  3023   00066C  0EB0               	movlw	176
  3024   00066E  6ECD               	movwf	205,c	;volatile
  3025   000670                     
  3026                           ;main.c: 240:     PIE1bits.TMR1IE = 0;
  3027   000670  909D               	bcf	157,0,c	;volatile
  3028   000672                     
  3029                           ;main.c: 241:     unsigned long long timer_value = (milliseconds) * 1000 ;
  3030   000672  C00D  F001         	movff	i2delay@milliseconds,i2___lmul@multiplier
  3031   000676  C00E  F002         	movff	i2delay@milliseconds+1,i2___lmul@multiplier+1
  3032   00067A  C00F  F003         	movff	i2delay@milliseconds+2,i2___lmul@multiplier+2
  3033   00067E  C010  F004         	movff	i2delay@milliseconds+3,i2___lmul@multiplier+3
  3034   000682  0EE8               	movlw	232
  3035   000684  6E05               	movwf	i2___lmul@multiplicand^0,c
  3036   000686  0E03               	movlw	3
  3037   000688  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  3038   00068A  0E00               	movlw	0
  3039   00068C  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  3040   00068E  0E00               	movlw	0
  3041   000690  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  3042   000692  ECC5  F004         	call	i2___lmul	;wreg free
  3043   000696  5001               	movf	?i2___lmul^0,w,c
  3044   000698  6E11               	movwf	i2delay@timer_value^0,c
  3045   00069A  5002               	movf	(?i2___lmul+1)^0,w,c
  3046   00069C  6E12               	movwf	(i2delay@timer_value+1)^0,c
  3047   00069E  5003               	movf	(?i2___lmul+2)^0,w,c
  3048   0006A0  6E13               	movwf	(i2delay@timer_value+2)^0,c
  3049   0006A2  5004               	movf	(?i2___lmul+3)^0,w,c
  3050   0006A4  6E14               	movwf	(i2delay@timer_value+3)^0,c
  3051   0006A6  6A15               	clrf	(i2delay@timer_value+4)^0,c
  3052   0006A8  6A16               	clrf	(i2delay@timer_value+5)^0,c
  3053   0006AA  6A17               	clrf	(i2delay@timer_value+6)^0,c
  3054   0006AC  6A18               	clrf	(i2delay@timer_value+7)^0,c
  3055                           
  3056                           ;main.c: 242:     while(timer_value > 65535)
  3057   0006AE  EF77  F003         	goto	i2l1477
  3058   0006B2                     i2l1469:
  3059                           
  3060                           ;main.c: 243:     {;main.c: 244:         timer_value -= 65535;
  3061   0006B2  0EFF               	movlw	255
  3062   0006B4  5E11               	subwf	i2delay@timer_value^0,f,c
  3063   0006B6  0EFF               	movlw	255
  3064   0006B8  5A12               	subwfb	(i2delay@timer_value+1)^0,f,c
  3065   0006BA  0E00               	movlw	0
  3066   0006BC  5A13               	subwfb	(i2delay@timer_value+2)^0,f,c
  3067   0006BE  0E00               	movlw	0
  3068   0006C0  5A14               	subwfb	(i2delay@timer_value+3)^0,f,c
  3069   0006C2  0E00               	movlw	0
  3070   0006C4  5A15               	subwfb	(i2delay@timer_value+4)^0,f,c
  3071   0006C6  0E00               	movlw	0
  3072   0006C8  5A16               	subwfb	(i2delay@timer_value+5)^0,f,c
  3073   0006CA  0E00               	movlw	0
  3074   0006CC  5A17               	subwfb	(i2delay@timer_value+6)^0,f,c
  3075   0006CE  0E00               	movlw	0
  3076   0006D0  5A18               	subwfb	(i2delay@timer_value+7)^0,f,c
  3077   0006D2                     
  3078                           ;main.c: 245:         TMR1H = 0;
  3079   0006D2  0E00               	movlw	0
  3080   0006D4  6ECF               	movwf	207,c	;volatile
  3081   0006D6                     
  3082                           ;main.c: 246:         TMR1L = 0;
  3083   0006D6  0E00               	movlw	0
  3084   0006D8  6ECE               	movwf	206,c	;volatile
  3085   0006DA                     
  3086                           ;main.c: 247:         T1CONbits.TMR1ON = 1;
  3087   0006DA  80CD               	bsf	205,0,c	;volatile
  3088   0006DC                     i2l154:
  3089   0006DC  A09E               	btfss	158,0,c	;volatile
  3090   0006DE  EF73  F003         	goto	i2u76_41
  3091   0006E2  EF75  F003         	goto	i2u76_40
  3092   0006E6                     i2u76_41:
  3093   0006E6  EF6E  F003         	goto	i2l154
  3094   0006EA                     i2u76_40:
  3095   0006EA                     
  3096                           ;main.c: 249:         T1CONbits.TMR1ON = 0;
  3097   0006EA  90CD               	bcf	205,0,c	;volatile
  3098                           
  3099                           ;main.c: 250:         PIR1bits.TMR1IF = 0;
  3100   0006EC  909E               	bcf	158,0,c	;volatile
  3101   0006EE                     i2l1477:
  3102                           
  3103                           ;main.c: 242:     while(timer_value > 65535)
  3104   0006EE  5018               	movf	(i2delay@timer_value+7)^0,w,c
  3105   0006F0  1017               	iorwf	(i2delay@timer_value+6)^0,w,c
  3106   0006F2  1016               	iorwf	(i2delay@timer_value+5)^0,w,c
  3107   0006F4  1015               	iorwf	(i2delay@timer_value+4)^0,w,c
  3108   0006F6  1014               	iorwf	(i2delay@timer_value+3)^0,w,c
  3109   0006F8  E106               	bnz	i2u77_41
  3110   0006FA  0413               	decf	(i2delay@timer_value+2)^0,w,c
  3111   0006FC  B0D8               	btfsc	status,0,c
  3112   0006FE  EF83  F003         	goto	i2u77_41
  3113   000702  EF85  F003         	goto	i2u77_40
  3114   000706                     i2u77_41:
  3115   000706  EF59  F003         	goto	i2l1469
  3116   00070A                     i2u77_40:
  3117   00070A                     
  3118                           ;main.c: 252:     timer_value = 65535 - timer_value + 1;
  3119   00070A  5011               	movf	i2delay@timer_value^0,w,c
  3120   00070C  0800               	sublw	0
  3121   00070E  6E11               	movwf	i2delay@timer_value^0,c
  3122   000710  0E00               	movlw	0
  3123   000712  5412               	subfwb	(i2delay@timer_value+1)^0,w,c
  3124   000714  6E12               	movwf	(i2delay@timer_value+1)^0,c
  3125   000716  0E01               	movlw	1
  3126   000718  5413               	subfwb	(i2delay@timer_value+2)^0,w,c
  3127   00071A  6E13               	movwf	(i2delay@timer_value+2)^0,c
  3128   00071C  0E00               	movlw	0
  3129   00071E  5414               	subfwb	(i2delay@timer_value+3)^0,w,c
  3130   000720  6E14               	movwf	(i2delay@timer_value+3)^0,c
  3131   000722  0E00               	movlw	0
  3132   000724  5415               	subfwb	(i2delay@timer_value+4)^0,w,c
  3133   000726  6E15               	movwf	(i2delay@timer_value+4)^0,c
  3134   000728  0E00               	movlw	0
  3135   00072A  5416               	subfwb	(i2delay@timer_value+5)^0,w,c
  3136   00072C  6E16               	movwf	(i2delay@timer_value+5)^0,c
  3137   00072E  0E00               	movlw	0
  3138   000730  5417               	subfwb	(i2delay@timer_value+6)^0,w,c
  3139   000732  6E17               	movwf	(i2delay@timer_value+6)^0,c
  3140   000734  0E00               	movlw	0
  3141   000736  5418               	subfwb	(i2delay@timer_value+7)^0,w,c
  3142   000738  6E18               	movwf	(i2delay@timer_value+7)^0,c
  3143   00073A                     
  3144                           ;main.c: 253:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  3145   00073A  0E00               	movlw	0
  3146   00073C  6ECF               	movwf	207,c	;volatile
  3147   00073E                     
  3148                           ;main.c: 254:     TMR1L = (unsigned char)(0xFF & timer_value);
  3149   00073E  C011  FFCE         	movff	i2delay@timer_value,4046	;volatile
  3150   000742                     
  3151                           ;main.c: 255:     T1CONbits.TMR1ON = 1;
  3152   000742  80CD               	bsf	205,0,c	;volatile
  3153   000744                     i2l158:
  3154   000744  A09E               	btfss	158,0,c	;volatile
  3155   000746  EFA7  F003         	goto	i2u78_41
  3156   00074A  EFA9  F003         	goto	i2u78_40
  3157   00074E                     i2u78_41:
  3158   00074E  EFA2  F003         	goto	i2l158
  3159   000752                     i2u78_40:
  3160   000752                     
  3161                           ;main.c: 257:     T1CONbits.TMR1ON = 0;
  3162   000752  90CD               	bcf	205,0,c	;volatile
  3163                           
  3164                           ;main.c: 258:     PIR1bits.TMR1IF = 0;
  3165   000754  909E               	bcf	158,0,c	;volatile
  3166   000756  0012               	return		;funcret
  3167   000758                     __end_ofi2_delay:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function i2___lmul *****************
  3171 ;; Defined at:
  3172 ;;		line 15 in file "C:\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  multiplier      4    0[COMRAM] unsigned long 
  3175 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  product         4    8[COMRAM] unsigned long 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  4    0[COMRAM] unsigned long 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1
  3187 ;;      Params:         8       0       0
  3188 ;;      Locals:         4       0       0
  3189 ;;      Temps:          0       0       0
  3190 ;;      Totals:        12       0       0
  3191 ;;Total ram usage:       12 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		i2_delay
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text21
  3201   00098A                     __ptext21:
  3202                           	callstack 0
  3203   00098A                     i2___lmul:
  3204                           	callstack 22
  3205   00098A  0E00               	movlw	0
  3206   00098C  6E09               	movwf	i2___lmul@product^0,c
  3207   00098E  0E00               	movlw	0
  3208   000990  6E0A               	movwf	(i2___lmul@product+1)^0,c
  3209   000992  0E00               	movlw	0
  3210   000994  6E0B               	movwf	(i2___lmul@product+2)^0,c
  3211   000996  0E00               	movlw	0
  3212   000998  6E0C               	movwf	(i2___lmul@product+3)^0,c
  3213   00099A                     i2l1419:
  3214   00099A  A001               	btfss	i2___lmul@multiplier^0,0,c
  3215   00099C  EFD2  F004         	goto	i2u70_41
  3216   0009A0  EFD4  F004         	goto	i2u70_40
  3217   0009A4                     i2u70_41:
  3218   0009A4  EFDC  F004         	goto	i2l1423
  3219   0009A8                     i2u70_40:
  3220   0009A8  5005               	movf	i2___lmul@multiplicand^0,w,c
  3221   0009AA  2609               	addwf	i2___lmul@product^0,f,c
  3222   0009AC  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  3223   0009AE  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  3224   0009B0  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  3225   0009B2  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  3226   0009B4  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  3227   0009B6  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  3228   0009B8                     i2l1423:
  3229   0009B8  90D8               	bcf	status,0,c
  3230   0009BA  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  3231   0009BC  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  3232   0009BE  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  3233   0009C0  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  3234   0009C2  90D8               	bcf	status,0,c
  3235   0009C4  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  3236   0009C6  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  3237   0009C8  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  3238   0009CA  3201               	rrcf	i2___lmul@multiplier^0,f,c
  3239   0009CC  5001               	movf	i2___lmul@multiplier^0,w,c
  3240   0009CE  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  3241   0009D0  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  3242   0009D2  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  3243   0009D4  A4D8               	btfss	status,2,c
  3244   0009D6  EFEF  F004         	goto	i2u71_41
  3245   0009DA  EFF1  F004         	goto	i2u71_40
  3246   0009DE                     i2u71_41:
  3247   0009DE  EFCD  F004         	goto	i2l1419
  3248   0009E2                     i2u71_40:
  3249   0009E2  C009  F001         	movff	i2___lmul@product,?i2___lmul
  3250   0009E6  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  3251   0009EA  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  3252   0009EE  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  3253   0009F2  0012               	return		;funcret
  3254   0009F4                     __end_ofi2___lmul:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function i2___wmul *****************
  3258 ;; Defined at:
  3259 ;;		line 15 in file "C:\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  multiplier      2    0[COMRAM] unsigned int 
  3262 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  product         2    4[COMRAM] unsigned int 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2    0[COMRAM] unsigned int 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, prodl, prodh
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1
  3274 ;;      Params:         4       0       0
  3275 ;;      Locals:         2       0       0
  3276 ;;      Temps:          0       0       0
  3277 ;;      Totals:         6       0       0
  3278 ;;Total ram usage:        6 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_ISR
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text22
  3288   000CA0                     __ptext22:
  3289                           	callstack 0
  3290   000CA0                     i2___wmul:
  3291                           	callstack 24
  3292   000CA0  5001               	movf	i2___wmul@multiplier^0,w,c
  3293   000CA2  0203               	mulwf	i2___wmul@multiplicand^0,c
  3294   000CA4  CFF3 F005          	movff	prodl,i2___wmul@product
  3295   000CA8  CFF4 F006          	movff	prodh,i2___wmul@product+1
  3296   000CAC  5001               	movf	i2___wmul@multiplier^0,w,c
  3297   000CAE  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  3298   000CB0  50F3               	movf	243,w,c
  3299   000CB2  2606               	addwf	(i2___wmul@product+1)^0,f,c
  3300   000CB4  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  3301   000CB6  0203               	mulwf	i2___wmul@multiplicand^0,c
  3302   000CB8  50F3               	movf	243,w,c
  3303   000CBA  2606               	addwf	(i2___wmul@product+1)^0,f,c
  3304   000CBC  C005  F001         	movff	i2___wmul@product,?i2___wmul
  3305   000CC0  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  3306   000CC4  0012               	return		;funcret
  3307   000CC6                     __end_ofi2___wmul:
  3308                           	callstack 0
  3309                           
  3310                           	psect	rparam
  3311   000000                     
  3312                           	psect	temp
  3313   000055                     btemp:
  3314                           	callstack 0
  3315   000055                     	ds	1
  3316   000000                     int$flags	set	btemp
  3317   000000                     wtemp8	set	btemp+1
  3318   000000                     ttemp5	set	btemp+1
  3319   000000                     ttemp6	set	btemp+4
  3320   000000                     ttemp7	set	btemp+8
  3321                           
  3322                           	psect	config
  3323                           
  3324                           ; Padding undefined space
  3325   300000                     	org	3145728
  3326   300000  FF                 	db	255
  3327                           
  3328                           ;Config register CONFIG1H @ 0x300001
  3329                           ;	Oscillator
  3330                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  3331                           ;	Fail-Safe Clock Monitor Enable bit
  3332                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3333                           ;	Internal/External Oscillator Switchover bit
  3334                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3335   300001                     	org	3145729
  3336   300001  08                 	db	8
  3337                           
  3338                           ;Config register CONFIG2L @ 0x300002
  3339                           ;	Power-up Timer Enable bit
  3340                           ;	PWRT = OFF, PWRT disabled
  3341                           ;	Brown-out Reset Enable bits
  3342                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3343                           ;	Brown-out Reset Voltage bits
  3344                           ;	BORV = 3, Minimum Setting
  3345   300002                     	org	3145730
  3346   300002  1F                 	db	31
  3347                           
  3348                           ;Config register CONFIG2H @ 0x300003
  3349                           ;	Watchdog Timer Enable bit
  3350                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3351                           ;	Watchdog Timer Postscale Select bits
  3352                           ;	WDTPS = 32768, 1:32768
  3353   300003                     	org	3145731
  3354   300003  1E                 	db	30
  3355                           
  3356                           ; Padding undefined space
  3357   300004                     	org	3145732
  3358   300004  FF                 	db	255
  3359                           
  3360                           ;Config register CONFIG3H @ 0x300005
  3361                           ;	CCP2 MUX bit
  3362                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  3363                           ;	PORTB A/D Enable bit
  3364                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  3365                           ;	Low-Power Timer1 Oscillator Enable bit
  3366                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3367                           ;	MCLR Pin Enable bit
  3368                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3369   300005                     	org	3145733
  3370   300005  83                 	db	131
  3371                           
  3372                           ;Config register CONFIG4L @ 0x300006
  3373                           ;	Stack Full/Underflow Reset Enable bit
  3374                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3375                           ;	Single-Supply ICSP Enable bit
  3376                           ;	LVP = OFF, Single-Supply ICSP disabled
  3377                           ;	Boot Block Size Select bits
  3378                           ;	BBSIZ = BB256, 256 Word
  3379                           ;	Extended Instruction Set Enable bit
  3380                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3381                           ;	Background Debugger Enable bit
  3382                           ;	DEBUG = 0x1, unprogrammed default
  3383   300006                     	org	3145734
  3384   300006  81                 	db	129
  3385                           
  3386                           ; Padding undefined space
  3387   300007                     	org	3145735
  3388   300007  FF                 	db	255
  3389                           
  3390                           ;Config register CONFIG5L @ 0x300008
  3391                           ;	Code Protection bit
  3392                           ;	CP0 = OFF, Block 0 not code-protected
  3393                           ;	Code Protection bit
  3394                           ;	CP1 = OFF, Block 1 not code-protected
  3395   300008                     	org	3145736
  3396   300008  03                 	db	3
  3397                           
  3398                           ;Config register CONFIG5H @ 0x300009
  3399                           ;	Boot Block Code Protection bitProtect Boot
  3400                           ;	CPB = OFF, Boot block not code-protected
  3401                           ;	Data EEPROM Code Protection bit
  3402                           ;	CPD = OFF, Data EEPROM not code-protected
  3403   300009                     	org	3145737
  3404   300009  C0                 	db	192
  3405                           
  3406                           ;Config register CONFIG6L @ 0x30000A
  3407                           ;	Write Protection bit
  3408                           ;	WRT0 = OFF, Block 0 not write-protected
  3409                           ;	Write Protection bit
  3410                           ;	WRT1 = OFF, Block 1 not write-protected
  3411   30000A                     	org	3145738
  3412   30000A  03                 	db	3
  3413                           
  3414                           ;Config register CONFIG6H @ 0x30000B
  3415                           ;	Configuration Register Write Protection bit
  3416                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3417                           ;	Boot Block Write Protection bit
  3418                           ;	WRTB = OFF, Boot block not write-protected
  3419                           ;	Data EEPROM Write Protection bit
  3420                           ;	WRTD = OFF, Data EEPROM not write-protected
  3421   30000B                     	org	3145739
  3422   30000B  E0                 	db	224
  3423                           
  3424                           ;Config register CONFIG7L @ 0x30000C
  3425                           ;	Table Read Protection bit
  3426                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  3427                           ;	Table Read Protection bit
  3428                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  3429   30000C                     	org	3145740
  3430   30000C  03                 	db	3
  3431                           
  3432                           ;Config register CONFIG7H @ 0x30000D
  3433                           ;	Boot Block Table Read Protection bit
  3434                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  3435   30000D                     	org	3145741
  3436   30000D  40                 	db	64
  3437                           tosu	equ	0xFFF
  3438                           tosh	equ	0xFFE
  3439                           tosl	equ	0xFFD
  3440                           stkptr	equ	0xFFC
  3441                           pclatu	equ	0xFFB
  3442                           pclath	equ	0xFFA
  3443                           pcl	equ	0xFF9
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           prodh	equ	0xFF4
  3449                           prodl	equ	0xFF3
  3450                           indf0	equ	0xFEF
  3451                           postinc0	equ	0xFEE
  3452                           postdec0	equ	0xFED
  3453                           preinc0	equ	0xFEC
  3454                           plusw0	equ	0xFEB
  3455                           fsr0h	equ	0xFEA
  3456                           fsr0l	equ	0xFE9
  3457                           wreg	equ	0xFE8
  3458                           indf1	equ	0xFE7
  3459                           postinc1	equ	0xFE6
  3460                           postdec1	equ	0xFE5
  3461                           preinc1	equ	0xFE4
  3462                           plusw1	equ	0xFE3
  3463                           fsr1h	equ	0xFE2
  3464                           fsr1l	equ	0xFE1
  3465                           bsr	equ	0xFE0
  3466                           indf2	equ	0xFDF
  3467                           postinc2	equ	0xFDE
  3468                           postdec2	equ	0xFDD
  3469                           preinc2	equ	0xFDC
  3470                           plusw2	equ	0xFDB
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     75      84
    BANK0           128      6      61
    BANK1           256      0       0

Pointer List with Targets:

    lcd_message@message	PTR unsigned char  size(2) Largest target is 55
		 -> STR_3(CODE[2]), STR_2(CODE[9]), STR_1(CODE[7]), Receiver_buffer(BANK0[55]), 


Critical Paths under _main in COMRAM

    _system_init->___wmul
    _lcd_init->_lcd_move_cursor
    _lcd_move_cursor->_lcd_command
    _lcd_command->_delay
    _lcd_message->_lcd_char
    _lcd_char->_i2c_data_tx
    _lcd_clear->_delay
    _delay->___lmul
    _check_strings->___wmul

Critical Paths under _ISR in COMRAM

    i2_lcd_clear->i2_delay
    i2_delay->i2___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   14168
                                              0 BANK0      6     6      0
                             ___wmul
                      _check_strings
                           _lcd_init
                        _lcd_message
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          6     6      0    1630
                                             48 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    8587
                          _lcd_clear
                        _lcd_command
                        _lcd_message
                    _lcd_move_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1    3574
                                             73 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          7     4      3    3301
                                             66 COMRAM     7     4      3
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _lcd_message                                          2     0      2     611
                                             45 COMRAM     2     0      2
                 _i2c_start_and_addr
                           _i2c_stop
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             2     2      0     155
                                             43 COMRAM     2     2      0
                        _i2c_data_tx
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    1101
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start_and_addr                                   1     1      0      31
                                             42 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_data_tx                                          1     1      0      31
                                             42 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _delay                                               12     8      4    1039
                                             54 COMRAM    12     8      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                             42 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _check_strings                                       11    11      0    1707
                                             48 COMRAM    11    11      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1432
                                             42 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 18    18      0    1080
                                             24 COMRAM    18    18      0
                           i2___wmul
                        i2_lcd_clear
 ---------------------------------------------------------------------------------
 (7) i2_lcd_clear                                          0     0      0     357
                            i2_delay
                      i2_i2c_data_tx
               i2_i2c_start_and_addr
                         i2_i2c_stop
 ---------------------------------------------------------------------------------
 (8) i2_i2c_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_i2c_start_and_addr                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_i2c_data_tx                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_delay                                             12     8      4     313
                                             12 COMRAM    12     8      4
                           i2___lmul
 ---------------------------------------------------------------------------------
 (9) i2___lmul                                            12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     315
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _check_strings
     ___wmul
   _lcd_init
     _lcd_clear
       _delay
         ___lmul
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_command
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_message
       _i2c_start_and_addr
       _i2c_stop
       _lcd_char
         _i2c_data_tx
     _lcd_move_cursor
       _lcd_command
   _lcd_message
   _system_init
     ___wmul

 _ISR (ROOT)
   i2___wmul
   i2_lcd_clear
     i2_delay
       i2___lmul
     i2_i2c_data_tx
     i2_i2c_start_and_addr
     i2_i2c_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      6      3D       5       47.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4B      54       1       66.7%
BITBIGSFRlhlhll     22      0       0      14        0.0%
BITBIGSFRhlh        19      0       0       9        0.0%
BITBIGSFRlhllll     11      0       0      17        0.0%
BITBIGSFRhh          D      0       0       8        0.0%
BITBIGSFRlhlllh      6      0       0      16        0.0%
BITBIGSFRlhlhll      3      0       0      13        0.0%
BITBIGSFRlhlhh       3      0       0      12        0.0%
BITBIGSFRlhhhl       2      0       0      11        0.0%
BITBIGSFRlhllh       1      0       0      15        0.0%
BITBIGSFRlhhhh       1      0       0      10        0.0%
BITBIGSFRll          1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      91      19        0.0%
DATA                 0      0      91       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Mar 22 19:18:13 2024

                 _SSPSTATbits 0FC7           ___wmul@multiplicand 002D           __end_of_system_init 0816  
                         l200 0CD6                           l201 0CD8                           l210 0BBE  
                         l140 0502                           l212 0BCE                           l204 0B9C  
                         l222 0C78                           l206 0BAA                           l160 0666  
                         l208 0BB0                           l233 0978                           l161 066A  
                         l234 0988                           l154 05F0                           l219 0814  
                         l156 05FE                           l172 0B5A                           l164 091E  
                         l149 057E                           l181 0A5A                           l158 0658  
                         l190 0C30                           l191 0C34                           l175 08B2  
                         l184 0B96                           l193 0C42                           l195 0C52  
                         l187 0ABA                           l198 0CC8                           _ISR 0008  
                         prod 0FF3                           wreg 0FE8                lcd_char@letter 002D  
                        ?_ISR 0001                          ISR@i 001F                          ISR@j 0021  
                        l2001 035C                          l2011 036E                          l2003 0360  
                        l2021 039E                          l2013 0370                          l2005 0364  
                        l2031 03C8                          l2023 03A4                          l2015 0372  
                        l2007 0366                          l2041 03EC                          l2033 03DC  
                        l2025 03A8                          l2017 0382                          l2009 036A  
                        l2043 03F0                          l2035 03E0                          l2027 03B8  
                        l2019 0392                          l2061 040E                          l2045 03F4  
                        l2037 03E4                          l2029 03C8                          l2063 043E  
                        l2055 0406                          l2047 03F8                          l2039 03E8  
                        l2065 0442                          l2049 03FC                          l2067 045E  
                        l2069 0462                          l1821 0930                          l1901 0AB6  
                        l1911 0C70                          l1823 093E                          l1831 0584  
                        l1903 0B1E                          l1825 094E                          l1841 05EE  
                        l1833 0586                          l1905 0B2E                          l1921 0764  
                        l1827 0958                          l1819 0920                          l1851 0656  
                        l1835 05C6                          l1843 0602                          l1907 0B46  
                        l1931 0776                          l1923 0766                          l1915 0758  
                        l1909 0C54                          l1845 061E                          l1837 05E6  
                        l1829 0580                          l1853 0B9A                          l1861 0818  
                        l1941 0788                          l1933 077C                          l1925 0768  
                        l1917 075C                          l1847 064E                          l1839 05EA  
                        l1855 0BAC                          l1871 0890                          l1863 081E  
                        l1951 079E                          l1943 0792                          l1935 077E  
                        l1927 076E                          l1919 0762                          l1849 0652  
                        l1857 0C30                          l1881 09FE                          l1873 08A4  
                        l1865 0844                          l1961 07D8                          l1945 0794  
                        l1937 0780                          l1929 0770                          l1859 0CC6  
                        l1891 0A68                          l1883 0A22                          l1875 08AE  
                        l1867 0858                          l1971 0904                          l1963 07F4  
                        l1939 0782                          l1981 04FE                          l1893 0A7C  
                        l1877 0B5E                          l1885 0A26                          l1869 0862  
                        l1973 091A                          l1965 07F8                          l1957 07A6  
                        l1991 0554                          l1983 0512                          l1975 0486  
                        l1895 0A82                          l1887 0A56                          l1879 09F4  
                        l1967 08B4                          l1959 07D4                          l1985 053E  
                        l1977 049E                          l1993 0558                          l1897 0A88  
                        l1889 0A5C                          l1969 08F8                          l1995 057C  
                        l1987 054E                          l1979 04F8                          l1899 0AA2  
                        l1989 0550                          l1999 0358                          STR_1 034E  
                        STR_2 0345                          STR_3 0355                          u1200 061E  
                        u1201 061A                          u1210 0666                          u1211 0662  
                        u1220 0BAA                          u1300 0A56                          u1221 0BA6  
                        u1301 0A52               ??i2_i2c_data_tx 0001                          u1230 0BBE  
                        u1310 0B2E                          u1231 0BBA                          u1311 0B2A  
                        u1240 0BCE                          u1320 07F4                          u1400 0392  
                        u1241 0BCA                          u1321 07F0                          u1401 038E  
                        u1170 093E                          u1250 0C42                          u1330 0814  
                        u1410 03B8                          u1171 093A                          u1251 0C3E  
                        u1331 0810                          u1411 03B4                          u1340 04F8  
                        u1180 0978                          u1260 0C52                          u1420 03C8  
                        u1341 04F4                          u1181 0974                          u1261 0C4E  
                        u1421 03C4                          u1350 0512                          u1190 05FE  
                        u1270 0CD6                          u1430 045E                          u1351 050E  
                        u1191 05FA                          u1271 0CD2                          u1431 045A  
                        u1360 053E                          u1280 0A1E                          u1440 047E  
                        u1361 053A                          u1441 047A                          u1370 054E  
                        u1290 0A46                          u1371 054A                          u1380 057C  
                        u1381 0578                          u1390 0382                          u1287 0A14  
                        u1391 037E                          u1297 0A3C                 ??_i2c_data_tx 002B  
                        _main 0358                          fsr0h 0FEA                          indf0 0FEF  
                        fsr2h 0FDA                          fsr0l 0FE9                          indf2 0FDF  
                        fsr1l 0FE1                          fsr2l 0FD9                          btemp 0055  
                        prodh 0FF4                          prodl 0FF3               __end_ofi2_delay 0758  
                        start 0340         __end_of_check_strings 0580     i2c_start_and_addr@address 002B  
            ?_lcd_move_cursor 004A                  ___param_bank 0000                         ??_ISR 0019  
               lcd_command@lt 0043                 lcd_command@rs 0045                 lcd_command@rw 0044  
                 i2_lcd_clear 0ABC                         ?_main 0001                         _T0CON 0FD5  
                       _T1CON 0FCD                         i2l111 024C                         i2l200 0CEA  
                       i2l120 032C                         i2l112 011C                         i2l201 0CEC  
                       i2l113 0036                         i2l210 0BF6                         i2l212 0C06  
                       i2l204 0BD4                         i2l222 0CC4                         i2l206 0BE2  
                       i2l160 0752                         i2l208 0BE8                         i2l233 09E2  
                       i2l161 0756                         i2l234 09F2                         i2l154 06DC  
                       i2l156 06EA                         i2l158 0744                         i2l190 0C7C  
                       i2l191 0C80                         i2l193 0C8E                         i2l195 0C9E  
                       i2l187 0B1A                         i2l198 0CDC                         _TMR0H 0FD7  
                       _TMR1H 0FCF                         _TMR0L 0FD6                         _TMR1L 0FCE  
                       _PORTB 0F81                         _TRISB 0F93           ___lmul@multiplicand 002F  
                       _delay 0580              _Buffer_col_index 004F               i2c_data_tx@data 002B  
                       main@j 00BB                         tablat 0FF5              __end_ofi2___lmul 09F4  
            __end_ofi2___wmul 0CC6                   ?i2_i2c_stop 0001                         ttemp5 0056  
                       ttemp6 0059                         ttemp7 005D                         status 0FD8  
                       wtemp8 0056               _Receiver_buffer 0080           _character_match_cnt 0050  
         __end_of_i2c_data_tx 0C54               __initialization 0C08                   _system_init 0758  
                __end_of_main 0486              __end_of_i2c_stop 0CDA                        ??_main 00B7  
               __activetblptr 0002            _i2c_start_and_addr 0B98                        ?_delay 0037  
         ?_i2c_start_and_addr 0001                     ??i2_delay 0011                        i2l1421 09A8  
                      i2l1423 09B8                        i2l1425 09C2                        i2l1417 098A  
                      i2l1419 099A                        i2l1701 0096                        i2l1471 06D2  
                      i2l1463 066C                        i2l1703 009A                        i2l1481 073A  
                      i2l1473 06D6                        i2l1465 0670                        i2l1721 00F8  
                      i2l1483 073E                        i2l1475 06DA                        i2l1467 0672  
                      i2l1491 0BD2                        i2l1811 0310                        i2l1803 02BE  
                      i2l1731 0168                        i2l1723 00FC                        i2l1715 00AA  
                      i2l1485 0742                        i2l1469 06B2                        i2l1477 06EE  
                      i2l1493 0BE4                        i2l1581 0AC8                        i2l1805 02EC  
                      i2l1741 01A6                        i2l1733 0188                        i2l1725 012A  
                      i2l1717 00D8                        i2l1709 00A2                        i2l1479 070A  
                      i2l1487 0C7C                        i2l1591 0B16                        i2l1583 0ADC  
                      i2l1807 02F0                        i2l1743 01AE                        i2l1735 018E  
                      i2l1727 0142                        i2l1719 00DC                        i2l1671 001A  
                      i2l1593 0CA0                        i2l1489 0CDA                        i2l1585 0AE2  
                      i2l1809 030C                        i2l1761 022C                        i2l1737 01A0  
                      i2l1729 0156                        i2l1681 0048                        i2l1673 0028  
                      i2l1595 0CBC                        i2l1587 0AE8                        i2l1579 0ABC  
                      i2l1771 026E                        i2l1763 0230                        i2l1755 01DE  
                      i2l1739 01A2                        i2l1691 0082                        i2l1683 005A  
                      i2l1675 0030                        i2l1589 0B02                        i2l1781 029A  
                      i2l1773 027E                        i2l1765 025A                        i2l1757 020C  
                      i2l1749 01D6                        i2l1693 0086                        i2l1685 006A  
                      i2l1677 0044                        i2l1791 02AE                        i2l1783 029E  
                      i2l1775 028E                        i2l1767 025C                        i2l1759 0210  
                      i2l1695 008A                        i2l1687 007A                        i2l1679 0046  
                      i2l1785 02A2                        i2l1777 0292                        i2l1769 025E  
                      i2l1697 008E                        i2l1689 007E                        i2l1787 02A6  
                      i2l1779 0296                        i2l1699 0092                        i2l1797 02B6  
                      i2l1789 02AA              _Buffer_row_index 004E              i2___lmul@product 0009  
                      _SSPADD 0FC8                        _SSPBUF 0FC9              __end_of_lcd_char 0B98  
            __end_of_lcd_init 0920                        ___lmul 0920                        ___wmul 0C54  
        ??_i2c_start_and_addr 002B                        clear_0 0C0E                        clear_1 0C1A  
                      isa$std 0001                  __mediumconst 0000                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8       lcd_move_cursor@position 004A  
                  __accesstop 0080       __end_of__initialization 0C20                   _i2c_data_tx 0C2E  
               ___rparam_used 0001                __pcstackCOMRAM 0001                 __end_of_delay 066C  
                   ?i2___lmul 0001                     ?i2___wmul 0001                       ??_delay 003B  
                  __pbssBANK0 0080                     ?_i2c_stop 0001               lcd_command@data 0049  
                     ?___lmul 002B                       ?___wmul 002B                  ?i2_lcd_clear 0001  
              ___lmul@product 0033                    ??i2___lmul 0009                    ??i2___wmul 0005  
                     i2u70_40 09A8                       i2u70_41 09A4                       i2u71_40 09E2  
                     i2u71_41 09DE                       i2u80_40 0C9E                       i2u80_41 0C9A  
                     i2u81_40 0CEA                       i2u81_41 0CE6                       i2u82_40 0BE2  
                     i2u82_41 0BDE                       i2u83_40 0BF6                       i2u83_41 0BF2  
                     i2u76_40 06EA                       i2u84_40 0C06                       i2u76_41 06E6  
                     i2u84_41 0C02                       i2u77_40 070A                       i2u77_41 0706  
                     i2u78_40 0752                       i2u78_41 074E                       i2u79_40 0C8E  
                     i2u79_41 0C8A                       i2u98_40 0028                       i2u98_41 0024  
                     i2u99_40 0044                       i2u99_41 0040                     ?_lcd_char 0001  
                   ?_lcd_init 0001                       i2_delay 066C                  ??i2_i2c_stop 0001  
                  ??_i2c_stop 002B         __end_ofi2_i2c_data_tx 0CA0           lcd_move_cursor@line 004B  
__end_ofi2_i2c_start_and_addr 0C08                       __Hparam 0000                       __Lparam 0000  
           __end_of_lcd_clear 0ABC                  ?_system_init 0001                  __psmallconst 0344  
                     __pcinit 0C08                       __ramtop 0200                       __ptext0 0358  
                     __ptext1 0758                       __ptext2 08B4                       __ptext3 0B1C  
                     __ptext4 0816                       __ptext5 09F4                       __ptext6 0B5C  
                     __ptext7 0A5C                       __ptext8 0CC6                       __ptext9 0B98  
                   _T0CONbits 0FD5                     _T1CONbits 0FCD            __end_ofi2_i2c_stop 0CEE  
                  ??_lcd_char 002C                    ??_lcd_init 004C          end_of_initialization 0C20  
               __Lmediumconst 0000           i2___wmul@multiplier 0001                       postinc0 0FEE  
                     postinc1 0FE6                       postinc2 0FDE           i2___lmul@multiplier 0001  
                   _TRISCbits 0F94            lcd_message@message 002E                  ?_i2c_data_tx 0001  
               ??_lcd_command 0046   i2i2c_start_and_addr@address 0001               _has_prior_check 0052  
               ??_lcd_message 0030                 _check_strings 0486           _has_printed_message 0054  
              __end_of___lmul 098A                __end_of___wmul 0C7A              delay@timer_value 003B  
            i2___wmul@product 0005          i2_i2c_start_and_addr 0BD0           start_initialization 0C08  
                 __end_of_ISR 0340             ??_lcd_move_cursor 004B           i2delay@milliseconds 000D  
              ?_check_strings 0001                      ??___lmul 0033                      ??___wmul 002F  
         __end_of_lcd_command 08B4           __end_of_lcd_message 0A5C         ?i2_i2c_start_and_addr 0001  
                 __pbssCOMRAM 004C                 __pcstackBANK0 00B7               _screen_has_text 004C  
                    ?i2_delay 000D                      ISR@i_740 0023                      ISR@i_742 0027  
                    ISR@j_741 0025                      ISR@j_743 0029                check_strings@i 0038  
              check_strings@j 003B                     __pintcode 0008                     _lcd_clear 0A5C  
                system_init@i 0033                  system_init@j 0035                   __smallconst 0344  
                   _new_input 0051                ___wmul@product 002F               ??_check_strings 0031  
                    _PIE1bits 0F9D                   _lcd_command 0816                      i2u100_40 005A  
                    i2u100_41 0056                      i2u101_40 006A                      i2u101_41 0066  
                    i2u110_40 024C                      i2u102_40 007A                      i2u110_41 0248  
                    i2u102_41 0076                      i2u111_40 025A                      i2u103_40 00F8  
                    i2u111_41 0256                      i2u103_41 00F4                      i2u112_40 026E  
                    i2u104_40 0118                      i2u112_41 026A                      i2u104_41 0114  
                    i2u113_40 027E                      i2u105_40 012A                      i2u113_41 027A  
                    i2u105_41 0126                      i2u114_40 028E                      i2u106_40 0156  
                    i2u114_41 028A                      i2u106_41 0152                      i2u115_40 030C  
                    i2u107_40 0168                      i2u115_41 0308                      i2u107_41 0164  
                    i2u116_40 032C                      i2u108_40 01A0                      i2u116_41 0328  
                    i2u108_41 019C                      i2u109_40 022C                      i2u109_41 0228  
                    _PIR1bits 0F9E                   _lcd_message 09F4                      _RCONbits 0FD0  
      check_strings@match_cnt 0037                    ?_lcd_clear 0001        ??i2_i2c_start_and_addr 0001  
                  _ADCON1bits 0FC1                     main@i_731 00B9             ___wmul@multiplier 002B  
                    i2___lmul 098A                      i2___wmul 0CA0             ___lmul@multiplier 002B  
                 _INTCON2bits 0FF1             i2i2c_data_tx@data 0001                      _i2c_stop 0CC6  
                    __Hrparam 0000                      __Lrparam 0000                      _Time_out 004D  
       i2___wmul@multiplicand 0003               _lcd_move_cursor 0B1C                      __ptext10 0C2E  
                    __ptext11 0580                      __ptext20 066C                      __ptext12 0920  
                    __ptext21 098A                      __ptext13 0486                      __ptext22 0CA0  
                    __ptext14 0C54                      __ptext16 0ABC                      __ptext17 0CDA  
                    __ptext18 0BD0                      __ptext19 0C7A                      _lcd_char 0B5C  
                    _lcd_init 08B4  check_strings@currently_match 003A                 i2_i2c_data_tx 0C7A  
  __end_of_i2c_start_and_addr 0BD0                      isa$xinst 0000                      int$flags 0055  
           delay@milliseconds 0037                 ??i2_lcd_clear 0019                   ??_lcd_clear 0043  
                 _OSCTUNEbits 0F9B                    _INTCONbits 0FF2         i2___lmul@multiplicand 0005  
          i2delay@timer_value 0011                      intlevel2 0000                ?i2_i2c_data_tx 0001  
                  _OSCCONbits 0FD3       __end_of_lcd_move_cursor 0B5C                 ??_system_init 0031  
         __end_ofi2_lcd_clear 0B1C             _current_character 0053                   _SSPCON1bits 0FC6  
                 _SSPCON2bits 0FC5                    i2_i2c_stop 0CDA                  ?_lcd_command 0043  
                ?_lcd_message 002E  
