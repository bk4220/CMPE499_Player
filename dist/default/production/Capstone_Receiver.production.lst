

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 10 19:30:57 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 17/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F2221 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _SSPCON1bits	set	4038
    60   000000                     _SSPADD	set	4040
    61   000000                     _SSPSTATbits	set	4039
    62   000000                     _TMR3L	set	4018
    63   000000                     _TMR3H	set	4019
    64   000000                     _TMR1L	set	4046
    65   000000                     _TMR1H	set	4047
    66   000000                     _T3CONbits	set	4017
    67   000000                     _T1CONbits	set	4045
    68   000000                     _PORTB	set	3969
    69   000000                     _LATA	set	3977
    70   000000                     _PIE1bits	set	3997
    71   000000                     _T1CON	set	4045
    72   000000                     _PIE2bits	set	4000
    73   000000                     _T3CON	set	4017
    74   000000                     _SSPCON2bits	set	4037
    75   000000                     _SSPBUF	set	4041
    76   000000                     _PIR1bits	set	3998
    77   000000                     _RCONbits	set	4048
    78   000000                     _OSCCONbits	set	4051
    79   000000                     _TRISCbits	set	3988
    80   000000                     _OSCTUNEbits	set	3995
    81   000000                     _PIR2bits	set	4001
    82   000000                     _INTCON2bits	set	4081
    83   000000                     _INTCONbits	set	4082
    84                           
    85                           	psect	smallconst
    86   000200                     __psmallconst:
    87                           	callstack 0
    88   000200  00                 	db	0
    89   000201                     STR_3:
    90   000201  42                 	db	66	;'B'
    91   000202  79                 	db	121	;'y'
    92   000203  20                 	db	32
    93   000204  41                 	db	65	;'A'
    94   000205  69                 	db	105	;'i'
    95   000206  64                 	db	100	;'d'
    96   000207  61                 	db	97	;'a'
    97   000208  6E                 	db	110	;'n'
    98   000209  2C                 	db	44
    99   00020A  20                 	db	32
   100   00020B  42                 	db	66	;'B'
   101   00020C  72                 	db	114	;'r'
   102   00020D  65                 	db	101	;'e'
   103   00020E  74                 	db	116	;'t'
   104   00020F  74                 	db	116	;'t'
   105   000210  2C                 	db	44
   106   000211  00                 	db	0
   107   000212                     STR_4:
   108   000212  43                 	db	67	;'C'
   109   000213  68                 	db	104	;'h'
   110   000214  72                 	db	114	;'r'
   111   000215  69                 	db	105	;'i'
   112   000216  73                 	db	115	;'s'
   113   000217  2C                 	db	44
   114   000218  20                 	db	32
   115   000219  61                 	db	97	;'a'
   116   00021A  6E                 	db	110	;'n'
   117   00021B  64                 	db	100	;'d'
   118   00021C  20                 	db	32
   119   00021D  47                 	db	71	;'G'
   120   00021E  61                 	db	97	;'a'
   121   00021F  62                 	db	98	;'b'
   122   000220  65                 	db	101	;'e'
   123   000221  00                 	db	0
   124   000222                     STR_2:
   125   000222  43                 	db	67	;'C'
   126   000223  61                 	db	97	;'a'
   127   000224  70                 	db	112	;'p'
   128   000225  73                 	db	115	;'s'
   129   000226  74                 	db	116	;'t'
   130   000227  6F                 	db	111	;'o'
   131   000228  6E                 	db	110	;'n'
   132   000229  65                 	db	101	;'e'
   133   00022A  00                 	db	0
   134   00022B                     STR_1:
   135   00022B  53                 	db	83	;'S'
   136   00022C  65                 	db	101	;'e'
   137   00022D  6E                 	db	110	;'n'
   138   00022E  69                 	db	105	;'i'
   139   00022F  6F                 	db	111	;'o'
   140   000230  72                 	db	114	;'r'
   141   000231  00                 	db	0
   142   000232  20                 	db	32
   143   000233  00                 	db	0
   144   000234  00                 	db	0	; dummy byte at the end
   145   000000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149   0006A8                     __pcinit:
   150                           	callstack 0
   151   0006A8                     start_initialization:
   152                           	callstack 0
   153   0006A8                     __initialization:
   154                           	callstack 0
   155   0006A8                     end_of_initialization:
   156                           	callstack 0
   157   0006A8                     __end_of__initialization:
   158                           	callstack 0
   159   0006A8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   160   0006AA  6EF8               	movwf	tblptru,c
   161   0006AC  0E02               	movlw	high __Lsmallconst
   162   0006AE  6EF7               	movwf	tblptrh,c
   163   0006B0  0100               	movlb	0
   164   0006B2  EF4C  F003         	goto	_main	;jump to C main() function
   165                           
   166                           	psect	cstackCOMRAM
   167   000001                     __pcstackCOMRAM:
   168                           	callstack 0
   169   000001                     ?___lmul:
   170                           	callstack 0
   171   000001                     i2c_data_tx@data:
   172                           	callstack 0
   173   000001                     i2c_start_and_addr@address:
   174                           	callstack 0
   175   000001                     ___lmul@multiplier:
   176                           	callstack 0
   177                           
   178                           ; 4 bytes @ 0x0
   179   000001                     	ds	4
   180   000005                     ___lmul@multiplicand:
   181                           	callstack 0
   182                           
   183                           ; 4 bytes @ 0x4
   184   000005                     	ds	4
   185   000009                     ___lmul@product:
   186                           	callstack 0
   187                           
   188                           ; 4 bytes @ 0x8
   189   000009                     	ds	4
   190   00000D                     delay@milliseconds:
   191                           	callstack 0
   192                           
   193                           ; 4 bytes @ 0xC
   194   00000D                     	ds	4
   195   000011                     delay@timer_value:
   196                           	callstack 0
   197                           
   198                           ; 8 bytes @ 0x10
   199   000011                     	ds	8
   200   000019                     ??_lcd_char:
   201   000019                     lcd_command@lt:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x18
   205   000019                     	ds	1
   206   00001A                     lcd_command@rw:
   207                           	callstack 0
   208   00001A                     lcd_char@letter:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x19
   212   00001A                     	ds	1
   213   00001B                     lcd_command@rs:
   214                           	callstack 0
   215   00001B                     lcd_message@message:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x1A
   219   00001B                     	ds	1
   220   00001C                     ??_lcd_command:
   221   00001C                     
   222                           ; 1 bytes @ 0x1B
   223   00001C                     	ds	3
   224   00001F                     lcd_command@data:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x1E
   228   00001F                     	ds	1
   229   000020                     lcd_move_cursor@position:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x1F
   233   000020                     	ds	1
   234   000021                     lcd_move_cursor@line:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x20
   238   000021                     	ds	1
   239   000022                     
   240                           ; 1 bytes @ 0x21
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 31 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1
   260 ;;      Params:         0       0       0
   261 ;;      Locals:         0       0       0
   262 ;;      Temps:          0       0       0
   263 ;;      Totals:         0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels required when called: 5
   266 ;; This function calls:
   267 ;;		_lcd_init
   268 ;;		_system_init
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text0
   275   000698                     __ptext0:
   276                           	callstack 0
   277   000698                     _main:
   278                           	callstack 26
   279   000698                     
   280                           ;main.c: 35:     system_init();
   281   000698  EC19  F003         	call	_system_init	;wreg free
   282   00069C                     
   283                           ;main.c: 37:     lcd_init();
   284   00069C  EC91  F001         	call	_lcd_init	;wreg free
   285   0006A0                     l75:
   286   0006A0  EF50  F003         	goto	l75
   287   0006A4  EF00  F000         	goto	start
   288   0006A8                     __end_of_main:
   289                           	callstack 0
   290                           
   291 ;; *************** function _system_init *****************
   292 ;; Defined at:
   293 ;;		line 259 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1
   307 ;;      Params:         0       0       0
   308 ;;      Locals:         0       0       0
   309 ;;      Temps:          0       0       0
   310 ;;      Totals:         0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used: 1
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text1
   321   000632                     __ptext1:
   322                           	callstack 0
   323   000632                     _system_init:
   324                           	callstack 30
   325   000632                     
   326                           ;main.c: 262:     OSCCONbits.SCS = 0;
   327   000632  0EFC               	movlw	-4
   328   000634  16D3               	andwf	211,f,c	;volatile
   329   000636                     
   330                           ;main.c: 263:     OSCCONbits.IDLEN = 1;
   331   000636  8ED3               	bsf	211,7,c	;volatile
   332                           
   333                           ;main.c: 264:     OSCCONbits.IRCF = 7;
   334   000638  0E70               	movlw	112
   335   00063A  12D3               	iorwf	211,f,c	;volatile
   336   00063C                     
   337                           ;main.c: 265:     OSCTUNEbits.PLLEN = 1;
   338   00063C  8C9B               	bsf	155,6,c	;volatile
   339   00063E                     
   340                           ;main.c: 268:     INTCONbits.GIE = 1;
   341   00063E  8EF2               	bsf	242,7,c	;volatile
   342   000640                     
   343                           ;main.c: 269:     INTCONbits.PEIE = 1;
   344   000640  8CF2               	bsf	242,6,c	;volatile
   345   000642                     
   346                           ;main.c: 271:     INTCON2bits.RBPU = 0;
   347   000642  9EF1               	bcf	241,7,c	;volatile
   348   000644                     
   349                           ;main.c: 275:     RCONbits.IPEN = 0;
   350   000644  9ED0               	bcf	208,7,c	;volatile
   351   000646                     
   352                           ;main.c: 278:     SSPSTATbits.SMP = 1;
   353   000646  8EC7               	bsf	199,7,c	;volatile
   354   000648                     
   355                           ;main.c: 279:     SSPSTATbits.CKE = 0;
   356   000648  9CC7               	bcf	199,6,c	;volatile
   357                           
   358                           ;main.c: 280:     SSPADD = 0x50;
   359   00064A  0E50               	movlw	80
   360   00064C  6EC8               	movwf	200,c	;volatile
   361   00064E                     
   362                           ;main.c: 281:     SSPCON1bits.SSPEN = 1;
   363   00064E  8AC6               	bsf	198,5,c	;volatile
   364                           
   365                           ;main.c: 282:     SSPCON1bits.SSPM = 0b1000;
   366   000650  50C6               	movf	198,w,c	;volatile
   367   000652  0BF0               	andlw	-16
   368   000654  0908               	iorlw	8
   369   000656  6EC6               	movwf	198,c	;volatile
   370   000658                     
   371                           ;main.c: 283:     TRISCbits.RC3 = 1;
   372   000658  8694               	bsf	148,3,c	;volatile
   373   00065A                     
   374                           ;main.c: 284:     TRISCbits.RC4 = 1;
   375   00065A  8894               	bsf	148,4,c	;volatile
   376   00065C  0012               	return		;funcret
   377   00065E                     __end_of_system_init:
   378                           	callstack 0
   379                           
   380 ;; *************** function _lcd_init *****************
   381 ;; Defined at:
   382 ;;		line 74 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1
   396 ;;      Params:         0       0       0
   397 ;;      Locals:         0       0       0
   398 ;;      Temps:          0       0       0
   399 ;;      Totals:         0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; Hardware stack levels required when called: 4
   403 ;; This function calls:
   404 ;;		_delay
   405 ;;		_lcd_clear
   406 ;;		_lcd_command
   407 ;;		_lcd_message
   408 ;;		_lcd_move_cursor
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text2
   415   000322                     __ptext2:
   416                           	callstack 0
   417   000322                     _lcd_init:
   418                           	callstack 26
   419   000322                     
   420                           ;main.c: 81:     lcd_command(0x02, 1, 0, 0);
   421   000322  0E01               	movlw	1
   422   000324  6E19               	movwf	lcd_command@lt^0,c
   423   000326  0E00               	movlw	0
   424   000328  6E1A               	movwf	lcd_command@rw^0,c
   425   00032A  0E00               	movlw	0
   426   00032C  6E1B               	movwf	lcd_command@rs^0,c
   427   00032E  0E02               	movlw	2
   428   000330  ECE6  F001         	call	_lcd_command
   429                           
   430                           ;main.c: 82:     lcd_command(0x28, 1, 0, 0);
   431   000334  0E01               	movlw	1
   432   000336  6E19               	movwf	lcd_command@lt^0,c
   433   000338  0E00               	movlw	0
   434   00033A  6E1A               	movwf	lcd_command@rw^0,c
   435   00033C  0E00               	movlw	0
   436   00033E  6E1B               	movwf	lcd_command@rs^0,c
   437   000340  0E28               	movlw	40
   438   000342  ECE6  F001         	call	_lcd_command
   439                           
   440                           ;main.c: 84:     lcd_clear();
   441   000346  EC6A  F002         	call	_lcd_clear	;wreg free
   442                           
   443                           ;main.c: 87:     lcd_command(0x0F, 1, 0, 0);
   444   00034A  0E01               	movlw	1
   445   00034C  6E19               	movwf	lcd_command@lt^0,c
   446   00034E  0E00               	movlw	0
   447   000350  6E1A               	movwf	lcd_command@rw^0,c
   448   000352  0E00               	movlw	0
   449   000354  6E1B               	movwf	lcd_command@rs^0,c
   450   000356  0E0F               	movlw	15
   451   000358  ECE6  F001         	call	_lcd_command
   452                           
   453                           ;main.c: 92:     lcd_move_cursor(0, 5);
   454   00035C  0E05               	movlw	5
   455   00035E  6E20               	movwf	lcd_move_cursor@position^0,c
   456   000360  0E00               	movlw	0
   457   000362  ECC2  F002         	call	_lcd_move_cursor
   458   000366                     
   459                           ;main.c: 93:     lcd_message("Senior");
   460   000366  0E2B               	movlw	low STR_1
   461   000368  6E1B               	movwf	lcd_message@message^0,c
   462   00036A  ECFE  F002         	call	_lcd_message	;wreg free
   463   00036E                     
   464                           ;main.c: 94:     lcd_move_cursor(1, 4);
   465   00036E  0E04               	movlw	4
   466   000370  6E20               	movwf	lcd_move_cursor@position^0,c
   467   000372  0E01               	movlw	1
   468   000374  ECC2  F002         	call	_lcd_move_cursor
   469                           
   470                           ;main.c: 95:     lcd_message("Capstone");
   471   000378  0E22               	movlw	low STR_2
   472   00037A  6E1B               	movwf	lcd_message@message^0,c
   473   00037C  ECFE  F002         	call	_lcd_message	;wreg free
   474   000380                     
   475                           ;main.c: 96:     delay(1000);
   476   000380  0EE8               	movlw	232
   477   000382  6E0D               	movwf	delay@milliseconds^0,c
   478   000384  0E03               	movlw	3
   479   000386  6E0E               	movwf	(delay@milliseconds+1)^0,c
   480   000388  0E00               	movlw	0
   481   00038A  6E0F               	movwf	(delay@milliseconds+2)^0,c
   482   00038C  0E00               	movlw	0
   483   00038E  6E10               	movwf	(delay@milliseconds+3)^0,c
   484   000390  EC1B  F001         	call	_delay	;wreg free
   485   000394                     
   486                           ;main.c: 97:     lcd_clear();
   487   000394  EC6A  F002         	call	_lcd_clear	;wreg free
   488                           
   489                           ;main.c: 98:     lcd_message("By Aidan, Brett,");
   490   000398  0E01               	movlw	low STR_3
   491   00039A  6E1B               	movwf	lcd_message@message^0,c
   492   00039C  ECFE  F002         	call	_lcd_message	;wreg free
   493   0003A0                     
   494                           ;main.c: 99:     lcd_move_cursor(1, 0);
   495   0003A0  0E00               	movlw	0
   496   0003A2  6E20               	movwf	lcd_move_cursor@position^0,c
   497   0003A4  0E01               	movlw	1
   498   0003A6  ECC2  F002         	call	_lcd_move_cursor
   499   0003AA                     
   500                           ;main.c: 100:     lcd_message("Chris, and Gabe");
   501   0003AA  0E12               	movlw	low STR_4
   502   0003AC  6E1B               	movwf	lcd_message@message^0,c
   503   0003AE  ECFE  F002         	call	_lcd_message	;wreg free
   504                           
   505                           ;main.c: 101:     delay(1000);
   506   0003B2  0EE8               	movlw	232
   507   0003B4  6E0D               	movwf	delay@milliseconds^0,c
   508   0003B6  0E03               	movlw	3
   509   0003B8  6E0E               	movwf	(delay@milliseconds+1)^0,c
   510   0003BA  0E00               	movlw	0
   511   0003BC  6E0F               	movwf	(delay@milliseconds+2)^0,c
   512   0003BE  0E00               	movlw	0
   513   0003C0  6E10               	movwf	(delay@milliseconds+3)^0,c
   514   0003C2  EC1B  F001         	call	_delay	;wreg free
   515                           
   516                           ;main.c: 102:     lcd_clear();
   517   0003C6  EC6A  F002         	call	_lcd_clear	;wreg free
   518   0003CA  0012               	return		;funcret
   519   0003CC                     __end_of_lcd_init:
   520                           	callstack 0
   521                           
   522 ;; *************** function _lcd_move_cursor *****************
   523 ;; Defined at:
   524 ;;		line 115 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  line            1    wreg     unsigned char 
   527 ;;  position        1   31[COMRAM] unsigned char 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  line            1   32[COMRAM] unsigned char 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1
   539 ;;      Params:         1       0       0
   540 ;;      Locals:         1       0       0
   541 ;;      Temps:          0       0       0
   542 ;;      Totals:         2       0       0
   543 ;;Total ram usage:        2 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 3
   546 ;; This function calls:
   547 ;;		_lcd_command
   548 ;; This function is called by:
   549 ;;		_lcd_init
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text3
   554   000584                     __ptext3:
   555                           	callstack 0
   556   000584                     _lcd_move_cursor:
   557                           	callstack 26
   558                           
   559                           ;incstack = 0
   560                           ;lcd_move_cursor@line stored from wreg
   561   000584  6E21               	movwf	lcd_move_cursor@line^0,c
   562   000586                     
   563                           ;main.c: 115: void lcd_move_cursor(char line, char position);main.c: 116: {;main.c: 117:
      +                               if(!line)
   564   000586  5021               	movf	lcd_move_cursor@line^0,w,c
   565   000588  A4D8               	btfss	status,2,c
   566   00058A  EFC9  F002         	goto	u301
   567   00058E  EFCB  F002         	goto	u300
   568   000592                     u301:
   569   000592  EFD7  F002         	goto	l1078
   570   000596                     u300:
   571   000596                     
   572                           ;main.c: 118:     {;main.c: 119:         lcd_command(0x80 | position, 1, 0, 0);
   573   000596  0E01               	movlw	1
   574   000598  6E19               	movwf	lcd_command@lt^0,c
   575   00059A  0E00               	movlw	0
   576   00059C  6E1A               	movwf	lcd_command@rw^0,c
   577   00059E  0E00               	movlw	0
   578   0005A0  6E1B               	movwf	lcd_command@rs^0,c
   579   0005A2  5020               	movf	lcd_move_cursor@position^0,w,c
   580   0005A4  0980               	iorlw	128
   581   0005A6  ECE6  F001         	call	_lcd_command
   582                           
   583                           ;main.c: 120:     }
   584   0005AA  EFE1  F002         	goto	l101
   585   0005AE                     l1078:
   586                           
   587                           ;main.c: 122:     {;main.c: 123:         lcd_command(0xC0 | position, 1, 0, 0);
   588   0005AE  0E01               	movlw	1
   589   0005B0  6E19               	movwf	lcd_command@lt^0,c
   590   0005B2  0E00               	movlw	0
   591   0005B4  6E1A               	movwf	lcd_command@rw^0,c
   592   0005B6  0E00               	movlw	0
   593   0005B8  6E1B               	movwf	lcd_command@rs^0,c
   594   0005BA  5020               	movf	lcd_move_cursor@position^0,w,c
   595   0005BC  09C0               	iorlw	192
   596   0005BE  ECE6  F001         	call	_lcd_command
   597   0005C2                     l101:
   598   0005C2  0012               	return		;funcret
   599   0005C4                     __end_of_lcd_move_cursor:
   600                           	callstack 0
   601                           
   602 ;; *************** function _lcd_command *****************
   603 ;; Defined at:
   604 ;;		line 129 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  data            1    wreg     unsigned char 
   607 ;;  lt              1   24[COMRAM] unsigned char 
   608 ;;  rw              1   25[COMRAM] unsigned char 
   609 ;;  rs              1   26[COMRAM] unsigned char 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  data            1   30[COMRAM] unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1
   621 ;;      Params:         3       0       0
   622 ;;      Locals:         1       0       0
   623 ;;      Temps:          3       0       0
   624 ;;      Totals:         7       0       0
   625 ;;Total ram usage:        7 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 2
   628 ;; This function calls:
   629 ;;		_delay
   630 ;;		_i2c_data_tx
   631 ;;		_i2c_start_and_addr
   632 ;;		_i2c_stop
   633 ;; This function is called by:
   634 ;;		_lcd_init
   635 ;;		_lcd_move_cursor
   636 ;;		_lcd_backspace
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text4
   641   0003CC                     __ptext4:
   642                           	callstack 0
   643   0003CC                     _lcd_command:
   644                           	callstack 26
   645                           
   646                           ;incstack = 0
   647                           ;lcd_command@data stored from wreg
   648   0003CC  6E1F               	movwf	lcd_command@data^0,c
   649   0003CE                     
   650                           ;main.c: 129: void lcd_command(char data, char lt, char rw, char rs);main.c: 130: {;main
      +                          .c: 131:     i2c_start_and_addr(0x4E);
   651   0003CE  0E4E               	movlw	78
   652   0003D0  ECE2  F002         	call	_i2c_start_and_addr
   653   0003D4                     
   654                           ;main.c: 133:     i2c_data_tx((data & 0xF0) | (lt << 3) | 4 | (rw <<1) | rs);
   655   0003D4  90D8               	bcf	status,0,c
   656   0003D6  341A               	rlcf	lcd_command@rw^0,w,c
   657   0003D8  6E1C               	movwf	??_lcd_command^0,c
   658   0003DA  C019  F01D         	movff	lcd_command@lt,??_lcd_command+1
   659   0003DE  90D8               	bcf	status,0,c
   660   0003E0  361D               	rlcf	(??_lcd_command+1)^0,f,c
   661   0003E2  90D8               	bcf	status,0,c
   662   0003E4  361D               	rlcf	(??_lcd_command+1)^0,f,c
   663   0003E6  90D8               	bcf	status,0,c
   664   0003E8  361D               	rlcf	(??_lcd_command+1)^0,f,c
   665   0003EA  501F               	movf	lcd_command@data^0,w,c
   666   0003EC  0BF0               	andlw	240
   667   0003EE  101D               	iorwf	(??_lcd_command+1)^0,w,c
   668   0003F0  101C               	iorwf	??_lcd_command^0,w,c
   669   0003F2  101B               	iorwf	lcd_command@rs^0,w,c
   670   0003F4  0904               	iorlw	4
   671   0003F6  EC2F  F003         	call	_i2c_data_tx
   672   0003FA                     
   673                           ;main.c: 134:     delay(1);
   674   0003FA  0E01               	movlw	1
   675   0003FC  6E0D               	movwf	delay@milliseconds^0,c
   676   0003FE  0E00               	movlw	0
   677   000400  6E0E               	movwf	(delay@milliseconds+1)^0,c
   678   000402  0E00               	movlw	0
   679   000404  6E0F               	movwf	(delay@milliseconds+2)^0,c
   680   000406  0E00               	movlw	0
   681   000408  6E10               	movwf	(delay@milliseconds+3)^0,c
   682   00040A  EC1B  F001         	call	_delay	;wreg free
   683   00040E                     
   684                           ;main.c: 135:     i2c_data_tx(lt<<3);
   685   00040E  3819               	swapf	lcd_command@lt^0,w,c
   686   000410  42E8               	rrncf	wreg,f,c
   687   000412  0BF8               	andlw	248
   688   000414  EC2F  F003         	call	_i2c_data_tx
   689   000418                     
   690                           ;main.c: 138:     i2c_data_tx(((data & 0x0F) <<4) | (lt << 3) | 4 | (rw <<1) | rs);
   691   000418  90D8               	bcf	status,0,c
   692   00041A  341A               	rlcf	lcd_command@rw^0,w,c
   693   00041C  6E1C               	movwf	??_lcd_command^0,c
   694   00041E  C019  F01D         	movff	lcd_command@lt,??_lcd_command+1
   695   000422  90D8               	bcf	status,0,c
   696   000424  361D               	rlcf	(??_lcd_command+1)^0,f,c
   697   000426  90D8               	bcf	status,0,c
   698   000428  361D               	rlcf	(??_lcd_command+1)^0,f,c
   699   00042A  90D8               	bcf	status,0,c
   700   00042C  361D               	rlcf	(??_lcd_command+1)^0,f,c
   701   00042E  C01F  F01E         	movff	lcd_command@data,??_lcd_command+2
   702   000432  0E0F               	movlw	15
   703   000434  161E               	andwf	(??_lcd_command+2)^0,f,c
   704   000436  381E               	swapf	(??_lcd_command+2)^0,w,c
   705   000438  0BF0               	andlw	240
   706   00043A  101D               	iorwf	(??_lcd_command+1)^0,w,c
   707   00043C  101C               	iorwf	??_lcd_command^0,w,c
   708   00043E  101B               	iorwf	lcd_command@rs^0,w,c
   709   000440  0904               	iorlw	4
   710   000442  EC2F  F003         	call	_i2c_data_tx
   711   000446                     
   712                           ;main.c: 139:     delay(1);
   713   000446  0E01               	movlw	1
   714   000448  6E0D               	movwf	delay@milliseconds^0,c
   715   00044A  0E00               	movlw	0
   716   00044C  6E0E               	movwf	(delay@milliseconds+1)^0,c
   717   00044E  0E00               	movlw	0
   718   000450  6E0F               	movwf	(delay@milliseconds+2)^0,c
   719   000452  0E00               	movlw	0
   720   000454  6E10               	movwf	(delay@milliseconds+3)^0,c
   721   000456  EC1B  F001         	call	_delay	;wreg free
   722   00045A                     
   723                           ;main.c: 140:     i2c_data_tx(lt<<3);
   724   00045A  3819               	swapf	lcd_command@lt^0,w,c
   725   00045C  42E8               	rrncf	wreg,f,c
   726   00045E  0BF8               	andlw	248
   727   000460  EC2F  F003         	call	_i2c_data_tx
   728   000464                     
   729                           ;main.c: 142:     i2c_stop();
   730   000464  EC42  F003         	call	_i2c_stop	;wreg free
   731   000468  0012               	return		;funcret
   732   00046A                     __end_of_lcd_command:
   733                           	callstack 0
   734                           
   735 ;; *************** function _lcd_message *****************
   736 ;; Defined at:
   737 ;;		line 145 in file "main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  message         1   26[COMRAM] PTR unsigned char 
   740 ;;		 -> STR_5(2), STR_4(16), STR_3(17), STR_2(9), 
   741 ;;		 -> STR_1(7), 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1
   753 ;;      Params:         1       0       0
   754 ;;      Locals:         0       0       0
   755 ;;      Temps:          0       0       0
   756 ;;      Totals:         1       0       0
   757 ;;Total ram usage:        1 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 3
   760 ;; This function calls:
   761 ;;		_i2c_start_and_addr
   762 ;;		_i2c_stop
   763 ;;		_lcd_char
   764 ;; This function is called by:
   765 ;;		_lcd_init
   766 ;;		_lcd_backspace
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text5
   771   0005FC                     __ptext5:
   772                           	callstack 0
   773   0005FC                     _lcd_message:
   774                           	callstack 26
   775   0005FC                     
   776                           ;main.c: 145: void lcd_message(char* message);main.c: 146: {;main.c: 147:     i2c_start_
      +                          and_addr(0x4E);
   777   0005FC  0E4E               	movlw	78
   778   0005FE  ECE2  F002         	call	_i2c_start_and_addr
   779                           
   780                           ;main.c: 148:     while(*message != 0)
   781   000602  EF0A  F003         	goto	l1086
   782   000606                     l1082:
   783                           
   784                           ;main.c: 149:     {;main.c: 150:         lcd_char(*message);
   785   000606  C01B  FFF6         	movff	lcd_message@message,tblptrl
   786   00060A                     	if	0	;There is only one active tblptr byte
   787   00060A                     	endif
   788   00060A                     	if	0	;tblptru may be non-zero
   789   00060A                     	endif
   790   00060A                     	if	0	;tblptru may be non-zero
   791   00060A                     	endif
   792   00060A  0008               	tblrd		*
   793   00060C  50F5               	movf	tablat,w,c
   794   00060E  EC9A  F002         	call	_lcd_char
   795   000612                     
   796                           ;main.c: 151:         message++;
   797   000612  2A1B               	incf	lcd_message@message^0,f,c
   798   000614                     l1086:
   799                           
   800                           ;main.c: 148:     while(*message != 0)
   801   000614  C01B  FFF6         	movff	lcd_message@message,tblptrl
   802   000618                     	if	0	;There is only one active tblptr byte
   803   000618                     	endif
   804   000618                     	if	0	;tblptru may be non-zero
   805   000618                     	endif
   806   000618                     	if	0	;tblptru may be non-zero
   807   000618                     	endif
   808   000618  0008               	tblrd		*
   809   00061A  50F5               	movf	tablat,w,c
   810   00061C  0900               	iorlw	0
   811   00061E  A4D8               	btfss	status,2,c
   812   000620  EF14  F003         	goto	u311
   813   000624  EF16  F003         	goto	u310
   814   000628                     u311:
   815   000628  EF03  F003         	goto	l1082
   816   00062C                     u310:
   817   00062C                     
   818                           ;main.c: 153:     i2c_stop();
   819   00062C  EC42  F003         	call	_i2c_stop	;wreg free
   820   000630  0012               	return		;funcret
   821   000632                     __end_of_lcd_message:
   822                           	callstack 0
   823                           
   824 ;; *************** function _lcd_char *****************
   825 ;; Defined at:
   826 ;;		line 156 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  letter          1    wreg     unsigned char 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  letter          1   25[COMRAM] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1
   840 ;;      Params:         0       0       0
   841 ;;      Locals:         1       0       0
   842 ;;      Temps:          1       0       0
   843 ;;      Totals:         2       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used: 1
   846 ;; Hardware stack levels required when called: 2
   847 ;; This function calls:
   848 ;;		_delay
   849 ;;		_i2c_data_tx
   850 ;; This function is called by:
   851 ;;		_lcd_message
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text6
   856   000534                     __ptext6:
   857                           	callstack 0
   858   000534                     _lcd_char:
   859                           	callstack 26
   860                           
   861                           ;incstack = 0
   862                           ;lcd_char@letter stored from wreg
   863   000534  6E1A               	movwf	lcd_char@letter^0,c
   864   000536                     
   865                           ;main.c: 156: void lcd_char(char letter);main.c: 157: {;main.c: 158:     i2c_data_tx((le
      +                          tter & 0xF0) | 0b1101);
   866   000536  501A               	movf	lcd_char@letter^0,w,c
   867   000538  0BF0               	andlw	240
   868   00053A  090D               	iorlw	13
   869   00053C  EC2F  F003         	call	_i2c_data_tx
   870                           
   871                           ;main.c: 159:     i2c_data_tx((letter & 0xF0) | 8);
   872   000540  501A               	movf	lcd_char@letter^0,w,c
   873   000542  0BF0               	andlw	240
   874   000544  0908               	iorlw	8
   875   000546  EC2F  F003         	call	_i2c_data_tx
   876                           
   877                           ;main.c: 163:     i2c_data_tx(((letter & 0x0F) << 4) | 0b1101);
   878   00054A  C01A  F019         	movff	lcd_char@letter,??_lcd_char
   879   00054E  0E0F               	movlw	15
   880   000550  1619               	andwf	??_lcd_char^0,f,c
   881   000552  3819               	swapf	??_lcd_char^0,w,c
   882   000554  0BF0               	andlw	240
   883   000556  090D               	iorlw	13
   884   000558  EC2F  F003         	call	_i2c_data_tx
   885                           
   886                           ;main.c: 164:     i2c_data_tx(((letter & 0x0F) << 4) | 8);
   887   00055C  C01A  F019         	movff	lcd_char@letter,??_lcd_char
   888   000560  0E0F               	movlw	15
   889   000562  1619               	andwf	??_lcd_char^0,f,c
   890   000564  3819               	swapf	??_lcd_char^0,w,c
   891   000566  0BF0               	andlw	240
   892   000568  0908               	iorlw	8
   893   00056A  EC2F  F003         	call	_i2c_data_tx
   894                           
   895                           ;main.c: 165:     delay(1);
   896   00056E  0E01               	movlw	1
   897   000570  6E0D               	movwf	delay@milliseconds^0,c
   898   000572  0E00               	movlw	0
   899   000574  6E0E               	movwf	(delay@milliseconds+1)^0,c
   900   000576  0E00               	movlw	0
   901   000578  6E0F               	movwf	(delay@milliseconds+2)^0,c
   902   00057A  0E00               	movlw	0
   903   00057C  6E10               	movwf	(delay@milliseconds+3)^0,c
   904   00057E  EC1B  F001         	call	_delay	;wreg free
   905   000582  0012               	return		;funcret
   906   000584                     __end_of_lcd_char:
   907                           	callstack 0
   908                           
   909 ;; *************** function _lcd_clear *****************
   910 ;; Defined at:
   911 ;;		line 168 in file "main.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1
   925 ;;      Params:         0       0       0
   926 ;;      Locals:         0       0       0
   927 ;;      Temps:          0       0       0
   928 ;;      Totals:         0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 2
   932 ;; This function calls:
   933 ;;		_delay
   934 ;;		_i2c_data_tx
   935 ;;		_i2c_start_and_addr
   936 ;;		_i2c_stop
   937 ;; This function is called by:
   938 ;;		_lcd_init
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text7
   943   0004D4                     __ptext7:
   944                           	callstack 0
   945   0004D4                     _lcd_clear:
   946                           	callstack 27
   947   0004D4                     
   948                           ;main.c: 170:     i2c_start_and_addr(0x4E);
   949   0004D4  0E4E               	movlw	78
   950   0004D6  ECE2  F002         	call	_i2c_start_and_addr
   951                           
   952                           ;main.c: 173:     i2c_data_tx(0b00001100);
   953   0004DA  0E0C               	movlw	12
   954   0004DC  EC2F  F003         	call	_i2c_data_tx
   955   0004E0                     
   956                           ;main.c: 174:     delay(1);
   957   0004E0  0E01               	movlw	1
   958   0004E2  6E0D               	movwf	delay@milliseconds^0,c
   959   0004E4  0E00               	movlw	0
   960   0004E6  6E0E               	movwf	(delay@milliseconds+1)^0,c
   961   0004E8  0E00               	movlw	0
   962   0004EA  6E0F               	movwf	(delay@milliseconds+2)^0,c
   963   0004EC  0E00               	movlw	0
   964   0004EE  6E10               	movwf	(delay@milliseconds+3)^0,c
   965   0004F0  EC1B  F001         	call	_delay	;wreg free
   966   0004F4                     
   967                           ;main.c: 175:     i2c_data_tx(0b00001000);
   968   0004F4  0E08               	movlw	8
   969   0004F6  EC2F  F003         	call	_i2c_data_tx
   970   0004FA                     
   971                           ;main.c: 178:     i2c_data_tx(0b00011100);
   972   0004FA  0E1C               	movlw	28
   973   0004FC  EC2F  F003         	call	_i2c_data_tx
   974   000500                     
   975                           ;main.c: 179:     delay(1);
   976   000500  0E01               	movlw	1
   977   000502  6E0D               	movwf	delay@milliseconds^0,c
   978   000504  0E00               	movlw	0
   979   000506  6E0E               	movwf	(delay@milliseconds+1)^0,c
   980   000508  0E00               	movlw	0
   981   00050A  6E0F               	movwf	(delay@milliseconds+2)^0,c
   982   00050C  0E00               	movlw	0
   983   00050E  6E10               	movwf	(delay@milliseconds+3)^0,c
   984   000510  EC1B  F001         	call	_delay	;wreg free
   985                           
   986                           ;main.c: 180:     i2c_data_tx(0b00011000);
   987   000514  0E18               	movlw	24
   988   000516  EC2F  F003         	call	_i2c_data_tx
   989   00051A                     
   990                           ;main.c: 181:     delay(1);
   991   00051A  0E01               	movlw	1
   992   00051C  6E0D               	movwf	delay@milliseconds^0,c
   993   00051E  0E00               	movlw	0
   994   000520  6E0E               	movwf	(delay@milliseconds+1)^0,c
   995   000522  0E00               	movlw	0
   996   000524  6E0F               	movwf	(delay@milliseconds+2)^0,c
   997   000526  0E00               	movlw	0
   998   000528  6E10               	movwf	(delay@milliseconds+3)^0,c
   999   00052A  EC1B  F001         	call	_delay	;wreg free
  1000   00052E                     
  1001                           ;main.c: 183:     i2c_stop();
  1002   00052E  EC42  F003         	call	_i2c_stop	;wreg free
  1003   000532  0012               	return		;funcret
  1004   000534                     __end_of_lcd_clear:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _i2c_stop *****************
  1008 ;; Defined at:
  1009 ;;		line 197 in file "main.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		None
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1
  1023 ;;      Params:         0       0       0
  1024 ;;      Locals:         0       0       0
  1025 ;;      Temps:          0       0       0
  1026 ;;      Totals:         0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_lcd_command
  1033 ;;		_lcd_message
  1034 ;;		_lcd_clear
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text8
  1039   000684                     __ptext8:
  1040                           	callstack 0
  1041   000684                     _i2c_stop:
  1042                           	callstack 27
  1043   000684                     
  1044                           ;main.c: 200:     SSPCON2bits.PEN = 1;
  1045   000684  84C5               	bsf	197,2,c	;volatile
  1046   000686                     l127:
  1047   000686  A69E               	btfss	158,3,c	;volatile
  1048   000688  EF48  F003         	goto	u111
  1049   00068C  EF4A  F003         	goto	u110
  1050   000690                     u111:
  1051   000690  EF43  F003         	goto	l127
  1052   000694                     u110:
  1053   000694                     
  1054                           ;main.c: 202:     PIR1bits.SSPIF = 0;
  1055   000694  969E               	bcf	158,3,c	;volatile
  1056   000696  0012               	return		;funcret
  1057   000698                     __end_of_i2c_stop:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _i2c_start_and_addr *****************
  1061 ;; Defined at:
  1062 ;;		line 205 in file "main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  address         1    wreg     unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  address         1    0[COMRAM] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1
  1076 ;;      Params:         0       0       0
  1077 ;;      Locals:         1       0       0
  1078 ;;      Temps:          0       0       0
  1079 ;;      Totals:         1       0       0
  1080 ;;Total ram usage:        1 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_lcd_command
  1086 ;;		_lcd_message
  1087 ;;		_lcd_clear
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text9
  1092   0005C4                     __ptext9:
  1093                           	callstack 0
  1094   0005C4                     _i2c_start_and_addr:
  1095                           	callstack 27
  1096                           
  1097                           ;incstack = 0
  1098                           ;i2c_start_and_addr@address stored from wreg
  1099   0005C4  6E01               	movwf	i2c_start_and_addr@address^0,c
  1100   0005C6                     
  1101                           ;main.c: 205: void i2c_start_and_addr(unsigned char address);main.c: 206: {;main.c: 208:
      +                               SSPCON2bits.SEN = 1;
  1102   0005C6  80C5               	bsf	197,0,c	;volatile
  1103   0005C8                     l133:
  1104   0005C8  A69E               	btfss	158,3,c	;volatile
  1105   0005CA  EFE9  F002         	goto	u61
  1106   0005CE  EFEB  F002         	goto	u60
  1107   0005D2                     u61:
  1108   0005D2  EFE4  F002         	goto	l133
  1109   0005D6                     u60:
  1110   0005D6                     
  1111                           ;main.c: 210:     PIR1bits.SSPIF = 0;
  1112   0005D6  969E               	bcf	158,3,c	;volatile
  1113   0005D8                     l872:
  1114                           
  1115                           ;main.c: 212:     {;main.c: 213:         SSPBUF = address;
  1116   0005D8  C001  FFC9         	movff	i2c_start_and_addr@address,4041	;volatile
  1117   0005DC                     l137:
  1118   0005DC  A69E               	btfss	158,3,c	;volatile
  1119   0005DE  EFF3  F002         	goto	u71
  1120   0005E2  EFF5  F002         	goto	u70
  1121   0005E6                     u71:
  1122   0005E6  EFEE  F002         	goto	l137
  1123   0005EA                     u70:
  1124   0005EA                     
  1125                           ;main.c: 215:         PIR1bits.SSPIF = 0;
  1126   0005EA  969E               	bcf	158,3,c	;volatile
  1127                           
  1128                           ;main.c: 216:     }while(SSPCON2bits.ACKSTAT);
  1129   0005EC  BCC5               	btfsc	197,6,c	;volatile
  1130   0005EE  EFFB  F002         	goto	u81
  1131   0005F2  EFFD  F002         	goto	u80
  1132   0005F6                     u81:
  1133   0005F6  EFEC  F002         	goto	l872
  1134   0005FA                     u80:
  1135   0005FA  0012               	return		;funcret
  1136   0005FC                     __end_of_i2c_start_and_addr:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _i2c_data_tx *****************
  1140 ;; Defined at:
  1141 ;;		line 186 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  data            1    wreg     unsigned char 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  data            1    0[COMRAM] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1
  1155 ;;      Params:         0       0       0
  1156 ;;      Locals:         1       0       0
  1157 ;;      Temps:          0       0       0
  1158 ;;      Totals:         1       0       0
  1159 ;;Total ram usage:        1 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_lcd_command
  1165 ;;		_lcd_char
  1166 ;;		_lcd_clear
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text10
  1171   00065E                     __ptext10:
  1172                           	callstack 0
  1173   00065E                     _i2c_data_tx:
  1174                           	callstack 27
  1175                           
  1176                           ;incstack = 0
  1177                           ;i2c_data_tx@data stored from wreg
  1178   00065E  6E01               	movwf	i2c_data_tx@data^0,c
  1179   000660                     l119:
  1180   000660                     
  1181                           ;main.c: 189:     {;main.c: 190:         SSPBUF = data;
  1182   000660  C001  FFC9         	movff	i2c_data_tx@data,4041	;volatile
  1183   000664                     l120:
  1184   000664  A69E               	btfss	158,3,c	;volatile
  1185   000666  EF37  F003         	goto	u91
  1186   00066A  EF39  F003         	goto	u90
  1187   00066E                     u91:
  1188   00066E  EF32  F003         	goto	l120
  1189   000672                     u90:
  1190   000672                     
  1191                           ;main.c: 192:         PIR1bits.SSPIF = 0;
  1192   000672  969E               	bcf	158,3,c	;volatile
  1193                           
  1194                           ;main.c: 194:     }while(SSPCON2bits.ACKSTAT);
  1195   000674  BCC5               	btfsc	197,6,c	;volatile
  1196   000676  EF3F  F003         	goto	u101
  1197   00067A  EF41  F003         	goto	u100
  1198   00067E                     u101:
  1199   00067E  EF30  F003         	goto	l119
  1200   000682                     u100:
  1201   000682  0012               	return		;funcret
  1202   000684                     __end_of_i2c_data_tx:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _delay *****************
  1206 ;; Defined at:
  1207 ;;		line 50 in file "main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  milliseconds    4   12[COMRAM] unsigned long 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  timer_value     8   16[COMRAM] unsigned long long 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1
  1221 ;;      Params:         4       0       0
  1222 ;;      Locals:         8       0       0
  1223 ;;      Temps:          0       0       0
  1224 ;;      Totals:        12       0       0
  1225 ;;Total ram usage:       12 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 1
  1228 ;; This function calls:
  1229 ;;		___lmul
  1230 ;; This function is called by:
  1231 ;;		_lcd_init
  1232 ;;		_lcd_command
  1233 ;;		_lcd_char
  1234 ;;		_lcd_clear
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text11
  1239   000236                     __ptext11:
  1240                           	callstack 0
  1241   000236                     _delay:
  1242                           	callstack 26
  1243   000236                     
  1244                           ;main.c: 50: void delay(unsigned long milliseconds);main.c: 51: {;main.c: 52:     T1CON 
      +                          = 0b10110000;
  1245   000236  0EB0               	movlw	176
  1246   000238  6ECD               	movwf	205,c	;volatile
  1247   00023A                     
  1248                           ;main.c: 53:     PIE1bits.TMR1IE = 0;
  1249   00023A  909D               	bcf	157,0,c	;volatile
  1250   00023C                     
  1251                           ;main.c: 54:     unsigned long long timer_value = (milliseconds) * 1000 ;
  1252   00023C  C00D  F001         	movff	delay@milliseconds,___lmul@multiplier
  1253   000240  C00E  F002         	movff	delay@milliseconds+1,___lmul@multiplier+1
  1254   000244  C00F  F003         	movff	delay@milliseconds+2,___lmul@multiplier+2
  1255   000248  C010  F004         	movff	delay@milliseconds+3,___lmul@multiplier+3
  1256   00024C  0EE8               	movlw	232
  1257   00024E  6E05               	movwf	___lmul@multiplicand^0,c
  1258   000250  0E03               	movlw	3
  1259   000252  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1260   000254  0E00               	movlw	0
  1261   000256  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1262   000258  0E00               	movlw	0
  1263   00025A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1264   00025C  EC35  F002         	call	___lmul	;wreg free
  1265   000260  5001               	movf	?___lmul^0,w,c
  1266   000262  6E11               	movwf	delay@timer_value^0,c
  1267   000264  5002               	movf	(?___lmul+1)^0,w,c
  1268   000266  6E12               	movwf	(delay@timer_value+1)^0,c
  1269   000268  5003               	movf	(?___lmul+2)^0,w,c
  1270   00026A  6E13               	movwf	(delay@timer_value+2)^0,c
  1271   00026C  5004               	movf	(?___lmul+3)^0,w,c
  1272   00026E  6E14               	movwf	(delay@timer_value+3)^0,c
  1273   000270  6A15               	clrf	(delay@timer_value+4)^0,c
  1274   000272  6A16               	clrf	(delay@timer_value+5)^0,c
  1275   000274  6A17               	clrf	(delay@timer_value+6)^0,c
  1276   000276  6A18               	clrf	(delay@timer_value+7)^0,c
  1277                           
  1278                           ;main.c: 55:     while(timer_value > 65535)
  1279   000278  EF5C  F001         	goto	l1032
  1280   00027C                     l1024:
  1281                           
  1282                           ;main.c: 56:     {;main.c: 57:         timer_value -= 65535;
  1283   00027C  0EFF               	movlw	255
  1284   00027E  5E11               	subwf	delay@timer_value^0,f,c
  1285   000280  0EFF               	movlw	255
  1286   000282  5A12               	subwfb	(delay@timer_value+1)^0,f,c
  1287   000284  0E00               	movlw	0
  1288   000286  5A13               	subwfb	(delay@timer_value+2)^0,f,c
  1289   000288  0E00               	movlw	0
  1290   00028A  5A14               	subwfb	(delay@timer_value+3)^0,f,c
  1291   00028C  0E00               	movlw	0
  1292   00028E  5A15               	subwfb	(delay@timer_value+4)^0,f,c
  1293   000290  0E00               	movlw	0
  1294   000292  5A16               	subwfb	(delay@timer_value+5)^0,f,c
  1295   000294  0E00               	movlw	0
  1296   000296  5A17               	subwfb	(delay@timer_value+6)^0,f,c
  1297   000298  0E00               	movlw	0
  1298   00029A  5A18               	subwfb	(delay@timer_value+7)^0,f,c
  1299   00029C                     
  1300                           ;main.c: 58:         TMR1H = 0;
  1301   00029C  0E00               	movlw	0
  1302   00029E  6ECF               	movwf	207,c	;volatile
  1303   0002A0                     
  1304                           ;main.c: 59:         TMR1L = 0;
  1305   0002A0  0E00               	movlw	0
  1306   0002A2  6ECE               	movwf	206,c	;volatile
  1307   0002A4                     
  1308                           ;main.c: 60:         T1CONbits.TMR1ON = 1;
  1309   0002A4  80CD               	bsf	205,0,c	;volatile
  1310   0002A6                     l83:
  1311   0002A6  A09E               	btfss	158,0,c	;volatile
  1312   0002A8  EF58  F001         	goto	u271
  1313   0002AC  EF5A  F001         	goto	u270
  1314   0002B0                     u271:
  1315   0002B0  EF53  F001         	goto	l83
  1316   0002B4                     u270:
  1317   0002B4                     
  1318                           ;main.c: 62:         T1CONbits.TMR1ON = 0;
  1319   0002B4  90CD               	bcf	205,0,c	;volatile
  1320                           
  1321                           ;main.c: 63:         PIR1bits.TMR1IF = 0;
  1322   0002B6  909E               	bcf	158,0,c	;volatile
  1323   0002B8                     l1032:
  1324                           
  1325                           ;main.c: 55:     while(timer_value > 65535)
  1326   0002B8  5018               	movf	(delay@timer_value+7)^0,w,c
  1327   0002BA  1017               	iorwf	(delay@timer_value+6)^0,w,c
  1328   0002BC  1016               	iorwf	(delay@timer_value+5)^0,w,c
  1329   0002BE  1015               	iorwf	(delay@timer_value+4)^0,w,c
  1330   0002C0  1014               	iorwf	(delay@timer_value+3)^0,w,c
  1331   0002C2  E106               	bnz	u281
  1332   0002C4  0413               	decf	(delay@timer_value+2)^0,w,c
  1333   0002C6  B0D8               	btfsc	status,0,c
  1334   0002C8  EF68  F001         	goto	u281
  1335   0002CC  EF6A  F001         	goto	u280
  1336   0002D0                     u281:
  1337   0002D0  EF3E  F001         	goto	l1024
  1338   0002D4                     u280:
  1339   0002D4                     
  1340                           ;main.c: 65:     timer_value = 65535 - timer_value + 1;
  1341   0002D4  5011               	movf	delay@timer_value^0,w,c
  1342   0002D6  0800               	sublw	0
  1343   0002D8  6E11               	movwf	delay@timer_value^0,c
  1344   0002DA  0E00               	movlw	0
  1345   0002DC  5412               	subfwb	(delay@timer_value+1)^0,w,c
  1346   0002DE  6E12               	movwf	(delay@timer_value+1)^0,c
  1347   0002E0  0E01               	movlw	1
  1348   0002E2  5413               	subfwb	(delay@timer_value+2)^0,w,c
  1349   0002E4  6E13               	movwf	(delay@timer_value+2)^0,c
  1350   0002E6  0E00               	movlw	0
  1351   0002E8  5414               	subfwb	(delay@timer_value+3)^0,w,c
  1352   0002EA  6E14               	movwf	(delay@timer_value+3)^0,c
  1353   0002EC  0E00               	movlw	0
  1354   0002EE  5415               	subfwb	(delay@timer_value+4)^0,w,c
  1355   0002F0  6E15               	movwf	(delay@timer_value+4)^0,c
  1356   0002F2  0E00               	movlw	0
  1357   0002F4  5416               	subfwb	(delay@timer_value+5)^0,w,c
  1358   0002F6  6E16               	movwf	(delay@timer_value+5)^0,c
  1359   0002F8  0E00               	movlw	0
  1360   0002FA  5417               	subfwb	(delay@timer_value+6)^0,w,c
  1361   0002FC  6E17               	movwf	(delay@timer_value+6)^0,c
  1362   0002FE  0E00               	movlw	0
  1363   000300  5418               	subfwb	(delay@timer_value+7)^0,w,c
  1364   000302  6E18               	movwf	(delay@timer_value+7)^0,c
  1365   000304                     
  1366                           ;main.c: 66:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  1367   000304  0E00               	movlw	0
  1368   000306  6ECF               	movwf	207,c	;volatile
  1369   000308                     
  1370                           ;main.c: 67:     TMR1L = (unsigned char)(0xFF & timer_value);
  1371   000308  C011  FFCE         	movff	delay@timer_value,4046	;volatile
  1372   00030C                     
  1373                           ;main.c: 68:     T1CONbits.TMR1ON = 1;
  1374   00030C  80CD               	bsf	205,0,c	;volatile
  1375   00030E                     l87:
  1376   00030E  A09E               	btfss	158,0,c	;volatile
  1377   000310  EF8C  F001         	goto	u291
  1378   000314  EF8E  F001         	goto	u290
  1379   000318                     u291:
  1380   000318  EF87  F001         	goto	l87
  1381   00031C                     u290:
  1382   00031C                     
  1383                           ;main.c: 70:     T1CONbits.TMR1ON = 0;
  1384   00031C  90CD               	bcf	205,0,c	;volatile
  1385                           
  1386                           ;main.c: 71:     PIR1bits.TMR1IF = 0;
  1387   00031E  909E               	bcf	158,0,c	;volatile
  1388   000320  0012               	return		;funcret
  1389   000322                     __end_of_delay:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function ___lmul *****************
  1393 ;; Defined at:
  1394 ;;		line 15 in file "F:\Program Files\MicroChip\XC8\v2.45\pic\sources\c99\common\Umul32.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  multiplier      4    0[COMRAM] unsigned long 
  1397 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  product         4    8[COMRAM] unsigned long 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  4    0[COMRAM] unsigned long 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1
  1409 ;;      Params:         8       0       0
  1410 ;;      Locals:         4       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:        12       0       0
  1413 ;;Total ram usage:       12 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_delay
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text12
  1423   00046A                     __ptext12:
  1424                           	callstack 0
  1425   00046A                     ___lmul:
  1426                           	callstack 26
  1427   00046A  0E00               	movlw	0
  1428   00046C  6E09               	movwf	___lmul@product^0,c
  1429   00046E  0E00               	movlw	0
  1430   000470  6E0A               	movwf	(___lmul@product+1)^0,c
  1431   000472  0E00               	movlw	0
  1432   000474  6E0B               	movwf	(___lmul@product+2)^0,c
  1433   000476  0E00               	movlw	0
  1434   000478  6E0C               	movwf	(___lmul@product+3)^0,c
  1435   00047A                     l1010:
  1436   00047A  A001               	btfss	___lmul@multiplier^0,0,c
  1437   00047C  EF42  F002         	goto	u251
  1438   000480  EF44  F002         	goto	u250
  1439   000484                     u251:
  1440   000484  EF4C  F002         	goto	l1014
  1441   000488                     u250:
  1442   000488  5005               	movf	___lmul@multiplicand^0,w,c
  1443   00048A  2609               	addwf	___lmul@product^0,f,c
  1444   00048C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1445   00048E  220A               	addwfc	(___lmul@product+1)^0,f,c
  1446   000490  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1447   000492  220B               	addwfc	(___lmul@product+2)^0,f,c
  1448   000494  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1449   000496  220C               	addwfc	(___lmul@product+3)^0,f,c
  1450   000498                     l1014:
  1451   000498  90D8               	bcf	status,0,c
  1452   00049A  3605               	rlcf	___lmul@multiplicand^0,f,c
  1453   00049C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1454   00049E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1455   0004A0  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1456   0004A2  90D8               	bcf	status,0,c
  1457   0004A4  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1458   0004A6  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1459   0004A8  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1460   0004AA  3201               	rrcf	___lmul@multiplier^0,f,c
  1461   0004AC  5001               	movf	___lmul@multiplier^0,w,c
  1462   0004AE  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1463   0004B0  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1464   0004B2  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1465   0004B4  A4D8               	btfss	status,2,c
  1466   0004B6  EF5F  F002         	goto	u261
  1467   0004BA  EF61  F002         	goto	u260
  1468   0004BE                     u261:
  1469   0004BE  EF3D  F002         	goto	l1010
  1470   0004C2                     u260:
  1471   0004C2  C009  F001         	movff	___lmul@product,?___lmul
  1472   0004C6  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1473   0004CA  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1474   0004CE  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1475   0004D2  0012               	return		;funcret
  1476   0004D4                     __end_of___lmul:
  1477                           	callstack 0
  1478                           
  1479                           	psect	rparam
  1480   000000                     
  1481                           	psect	config
  1482                           
  1483                           ; Padding undefined space
  1484   300000                     	org	3145728
  1485   300000  FF                 	db	255
  1486                           
  1487                           ;Config register CONFIG1H @ 0x300001
  1488                           ;	Oscillator
  1489                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  1490                           ;	Fail-Safe Clock Monitor Enable bit
  1491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1492                           ;	Internal/External Oscillator Switchover bit
  1493                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1494   300001                     	org	3145729
  1495   300001  08                 	db	8
  1496                           
  1497                           ;Config register CONFIG2L @ 0x300002
  1498                           ;	Power-up Timer Enable bit
  1499                           ;	PWRT = OFF, PWRT disabled
  1500                           ;	Brown-out Reset Enable bits
  1501                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1502                           ;	Brown-out Reset Voltage bits
  1503                           ;	BORV = 3, Minimum Setting
  1504   300002                     	org	3145730
  1505   300002  1F                 	db	31
  1506                           
  1507                           ;Config register CONFIG2H @ 0x300003
  1508                           ;	Watchdog Timer Enable bit
  1509                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1510                           ;	Watchdog Timer Postscale Select bits
  1511                           ;	WDTPS = 32768, 1:32768
  1512   300003                     	org	3145731
  1513   300003  1E                 	db	30
  1514                           
  1515                           ; Padding undefined space
  1516   300004                     	org	3145732
  1517   300004  FF                 	db	255
  1518                           
  1519                           ;Config register CONFIG3H @ 0x300005
  1520                           ;	CCP2 MUX bit
  1521                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1522                           ;	PORTB A/D Enable bit
  1523                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  1524                           ;	Low-Power Timer1 Oscillator Enable bit
  1525                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1526                           ;	MCLR Pin Enable bit
  1527                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1528   300005                     	org	3145733
  1529   300005  83                 	db	131
  1530                           
  1531                           ;Config register CONFIG4L @ 0x300006
  1532                           ;	Stack Full/Underflow Reset Enable bit
  1533                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1534                           ;	Single-Supply ICSP Enable bit
  1535                           ;	LVP = OFF, Single-Supply ICSP disabled
  1536                           ;	Boot Block Size Select bits
  1537                           ;	BBSIZ = BB256, 256 Word
  1538                           ;	Extended Instruction Set Enable bit
  1539                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1540                           ;	Background Debugger Enable bit
  1541                           ;	DEBUG = 0x1, unprogrammed default
  1542   300006                     	org	3145734
  1543   300006  81                 	db	129
  1544                           
  1545                           ; Padding undefined space
  1546   300007                     	org	3145735
  1547   300007  FF                 	db	255
  1548                           
  1549                           ;Config register CONFIG5L @ 0x300008
  1550                           ;	Code Protection bit
  1551                           ;	CP0 = OFF, Block 0 not code-protected
  1552                           ;	Code Protection bit
  1553                           ;	CP1 = OFF, Block 1 not code-protected
  1554   300008                     	org	3145736
  1555   300008  03                 	db	3
  1556                           
  1557                           ;Config register CONFIG5H @ 0x300009
  1558                           ;	Boot Block Code Protection bitProtect Boot
  1559                           ;	CPB = OFF, Boot block not code-protected
  1560                           ;	Data EEPROM Code Protection bit
  1561                           ;	CPD = OFF, Data EEPROM not code-protected
  1562   300009                     	org	3145737
  1563   300009  C0                 	db	192
  1564                           
  1565                           ;Config register CONFIG6L @ 0x30000A
  1566                           ;	Write Protection bit
  1567                           ;	WRT0 = OFF, Block 0 not write-protected
  1568                           ;	Write Protection bit
  1569                           ;	WRT1 = OFF, Block 1 not write-protected
  1570   30000A                     	org	3145738
  1571   30000A  03                 	db	3
  1572                           
  1573                           ;Config register CONFIG6H @ 0x30000B
  1574                           ;	Configuration Register Write Protection bit
  1575                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1576                           ;	Boot Block Write Protection bit
  1577                           ;	WRTB = OFF, Boot block not write-protected
  1578                           ;	Data EEPROM Write Protection bit
  1579                           ;	WRTD = OFF, Data EEPROM not write-protected
  1580   30000B                     	org	3145739
  1581   30000B  E0                 	db	224
  1582                           
  1583                           ;Config register CONFIG7L @ 0x30000C
  1584                           ;	Table Read Protection bit
  1585                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  1586                           ;	Table Read Protection bit
  1587                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  1588   30000C                     	org	3145740
  1589   30000C  03                 	db	3
  1590                           
  1591                           ;Config register CONFIG7H @ 0x30000D
  1592                           ;	Boot Block Table Read Protection bit
  1593                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  1594   30000D                     	org	3145741
  1595   30000D  40                 	db	64
  1596                           tosu	equ	0xFFF
  1597                           tosh	equ	0xFFE
  1598                           tosl	equ	0xFFD
  1599                           stkptr	equ	0xFFC
  1600                           pclatu	equ	0xFFB
  1601                           pclath	equ	0xFFA
  1602                           pcl	equ	0xFF9
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           prodh	equ	0xFF4
  1608                           prodl	equ	0xFF3
  1609                           indf0	equ	0xFEF
  1610                           postinc0	equ	0xFEE
  1611                           postdec0	equ	0xFED
  1612                           preinc0	equ	0xFEC
  1613                           plusw0	equ	0xFEB
  1614                           fsr0h	equ	0xFEA
  1615                           fsr0l	equ	0xFE9
  1616                           wreg	equ	0xFE8
  1617                           indf1	equ	0xFE7
  1618                           postinc1	equ	0xFE6
  1619                           postdec1	equ	0xFE5
  1620                           preinc1	equ	0xFE4
  1621                           plusw1	equ	0xFE3
  1622                           fsr1h	equ	0xFE2
  1623                           fsr1l	equ	0xFE1
  1624                           bsr	equ	0xFE0
  1625                           indf2	equ	0xFDF
  1626                           postinc2	equ	0xFDE
  1627                           postdec2	equ	0xFDD
  1628                           preinc2	equ	0xFDC
  1629                           plusw2	equ	0xFDB
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33      33
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    lcd_message@message	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[7]), STR_2(CODE[9]), STR_3(CODE[17]), STR_4(CODE[16]), 
		 -> STR_5(CODE[2]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_move_cursor
    _lcd_move_cursor->_lcd_command
    _lcd_command->_delay
    _lcd_message->_lcd_char
    _lcd_char->_delay
    _lcd_clear->_delay
    _delay->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9904
                           _lcd_init
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    9904
                              _delay
                          _lcd_clear
                        _lcd_command
                        _lcd_message
                    _lcd_move_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1    3209
                                             31 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          7     4      3    2915
                                             24 COMRAM     7     4      3
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _lcd_message                                          1     0      1    1612
                                             26 COMRAM     1     0      1
                 _i2c_start_and_addr
                           _i2c_stop
                           _lcd_char
 ---------------------------------------------------------------------------------
 (3) _lcd_char                                             2     2      0    1172
                                             24 COMRAM     2     2      0
                              _delay
                        _i2c_data_tx
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    1099
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start_and_addr                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_data_tx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _delay                                               12     8      4    1069
                                             12 COMRAM    12     8      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _delay
       ___lmul
     _lcd_clear
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_command
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_message
       _i2c_start_and_addr
       _i2c_stop
       _lcd_char
         _delay
         _i2c_data_tx
     _lcd_move_cursor
       _lcd_command
   _system_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     21      21       1       26.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhh        D      0       0       8        0.0%
BITBIGSFRhhhl       1D      0       0       9        0.0%
BITBIGSFRhhl         2      0       0      10        0.0%
BITBIGSFRlhh         3      0       0      11        0.0%
BITBIGSFRlhllhh     11      0       0      12        0.0%
BITBIGSFRlhlllh      F      0       0      13        0.0%
BITBIGSFRlhllll      1      0       0      14        0.0%
BITBIGSFRllhh        1      0       0      15        0.0%
BITBIGSFRllhlh       6      0       0      16        0.0%
BITBIGSFRllhll       A      0       0      17        0.0%
BITBIGSFRlllh        7      0       0      18        0.0%
BITBIGSFRllll        1      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             1FF      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 10 19:30:57 2024

               _SSPSTATbits 0FC7                          l90 0320                          l83 02A6  
                        l75 06A0                          l76 06A0                          l85 02B4  
                        l93 03CA                          l87 030E                          l89 031C  
                        u60 05D6                          u61 05D2                          u70 05EA  
                        u71 05E6                          u80 05FA                          u81 05F6  
                        u90 0672                          u91 066E         __end_of_system_init 065E  
                       l101 05C2                         l110 0630                         l120 0664  
                       l104 0468                         l113 0582                         l122 0672  
                       l130 0696                         l124 0682                         l116 0532  
                       l141 05FA                         l133 05C8                         l119 0660  
                       l135 05D6                         l127 0686                         l160 065C  
                       l137 05DC                         l129 0694                         l139 05EA  
                       l174 04C2                         l175 04D2                         l930 063C  
                       l940 0646                         l932 063E                         l870 05C6  
                       l942 0648                         l934 0640                         l926 0632  
                       l872 05D8                         l944 064E                         l936 0642  
                       l928 0636                         l874 0660                         l946 0658  
                       l938 0644                         l876 0684                         l948 065A  
                       u100 0682                         u101 067E                         u110 0694  
                       u111 0690                         u300 0596                         u301 0592  
                       u310 062C                         u311 0628                         u250 0488  
                       u251 0484                         u260 04C2                         u261 04BE  
                       u270 02B4                         u271 02B0                         u280 02D4  
                       u281 02D0                         u290 031C                         u291 0318  
                       wreg 0FE8              lcd_char@letter 001A                        l1010 047A  
                      l1012 0488                        l1020 023A                        l1100 03A0  
                      l1014 0498                        l1030 02A4                        l1022 023C  
                      l1102 03AA                        l1016 04A2                        l1008 046A  
                      l1040 030C                        l1024 027C                        l1032 02B8  
                      l1104 0698                        l1034 02D4                        l1026 029C  
                      l1018 0236                        l1050 0418                        l1042 03CE  
                      l1106 069C                        l1036 0304                        l1028 02A0  
                      l1060 04D4                        l1052 0446                        l1044 03D4  
                      l1038 0308                        l1070 051A                        l1062 04E0  
                      l1054 045A                        l1046 03FA                        l1072 052E  
                      l1064 04F4                        l1080 05FC                        l1056 0464  
                      l1048 040E                        l1066 04FA                        l1058 0536  
                      l1082 0606                        l1074 0586                        l1090 0322  
                      l1068 0500                        l1084 0612                        l1076 0596  
                      l1092 0366                        l1086 0614                        l1078 05AE  
                      l1094 036E                        l1088 062C                        l1096 0380  
                      l1098 0394                        STR_1 022B                        STR_2 0222  
                      STR_3 0201                        STR_4 0212                        STR_5 0232  
                      _LATA 0F89               ??_i2c_data_tx 0001                        _main 0698  
                      start 0000   i2c_start_and_addr@address 0001            ?_lcd_move_cursor 0020  
              ___param_bank 0000               lcd_command@lt 0019               lcd_command@rs 001B  
             lcd_command@rw 001A                       ?_main 0001                       _T1CON 0FCD  
                     _T3CON 0FB1                       _TMR1H 0FCF                       _TMR1L 0FCE  
                     _TMR3H 0FB3                       _TMR3L 0FB2                       _PORTB 0F81  
       ___lmul@multiplicand 0005                       _delay 0236             i2c_data_tx@data 0001  
                     tablat 0FF5                       status 0FD8         __end_of_i2c_data_tx 0684  
           __initialization 06A8                 _system_init 0632                __end_of_main 06A8  
          __end_of_i2c_stop 0698                      ??_main 0022               __activetblptr 0001  
        _i2c_start_and_addr 05C4                      ?_delay 000D         ?_i2c_start_and_addr 0001  
                    _SSPADD 0FC8                      _SSPBUF 0FC9            __end_of_lcd_char 0584  
          __end_of_lcd_init 03CC                      ___lmul 046A        ??_i2c_start_and_addr 0001  
                    isa$std 0001                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8     lcd_move_cursor@position 0020  
                __accesstop 0080     __end_of__initialization 06A8                 _i2c_data_tx 065E  
             ___rparam_used 0001              __pcstackCOMRAM 0001               __end_of_delay 0322  
                   ??_delay 0011                   ?_i2c_stop 0001             lcd_command@data 001F  
                   ?___lmul 0001              ___lmul@product 0009                   ?_lcd_char 0001  
                 ?_lcd_init 0001                  ??_i2c_stop 0001         lcd_move_cursor@line 0021  
                   __Hparam 0000                     __Lparam 0000           __end_of_lcd_clear 0534  
              ?_system_init 0001                __psmallconst 0200                     __pcinit 06A8  
                   __ramtop 0200                     __ptext0 0698                     __ptext1 0632  
                   __ptext2 0322                     __ptext3 0584                     __ptext4 03CC  
                   __ptext5 05FC                     __ptext6 0534                     __ptext7 04D4  
                   __ptext8 0684                     __ptext9 05C4                   _T1CONbits 0FCD  
                 _T3CONbits 0FB1                  ??_lcd_char 0019                  ??_lcd_init 0022  
      end_of_initialization 06A8                   _TRISCbits 0F94          lcd_message@message 001B  
              ?_i2c_data_tx 0001               ??_lcd_command 001C               ??_lcd_message 001C  
            __end_of___lmul 04D4            delay@timer_value 0011         start_initialization 06A8  
         ??_lcd_move_cursor 0021                    ??___lmul 0009         __end_of_lcd_command 046A  
       __end_of_lcd_message 0632                   _lcd_clear 04D4                 __smallconst 0200  
                  _PIE1bits 0F9D                    _PIE2bits 0FA0                 _lcd_command 03CC  
                  _PIR1bits 0F9E                    _PIR2bits 0FA1                 _lcd_message 05FC  
                  _RCONbits 0FD0                  ?_lcd_clear 0001           ___lmul@multiplier 0001  
               _INTCON2bits 0FF1                    _i2c_stop 0684                    __Hrparam 0000  
                  __Lrparam 0000                __Lsmallconst 0200             _lcd_move_cursor 0584  
                  __ptext10 065E                    __ptext11 0236                    __ptext12 046A  
                  _lcd_char 0534                    _lcd_init 0322  __end_of_i2c_start_and_addr 05FC  
                  isa$xinst 0000           delay@milliseconds 000D                 ??_lcd_clear 0019  
               _OSCTUNEbits 0F9B                  _INTCONbits 0FF2                  _OSCCONbits 0FD3  
   __end_of_lcd_move_cursor 05C4               ??_system_init 0001                 _SSPCON1bits 0FC6  
               _SSPCON2bits 0FC5                ?_lcd_command 0019                ?_lcd_message 001B  
