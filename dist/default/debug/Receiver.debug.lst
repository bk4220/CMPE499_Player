

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 13 10:43:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 17/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F2221 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _SSPCON1bits	set	4038
    63   000000                     _SSPADD	set	4040
    64   000000                     _SSPSTATbits	set	4039
    65   000000                     _TMR1L	set	4046
    66   000000                     _TMR1H	set	4047
    67   000000                     _T1CONbits	set	4045
    68   000000                     _PORTB	set	3969
    69   000000                     _LATB	set	3978
    70   000000                     _ADCON1bits	set	4033
    71   000000                     _SSPCON2bits	set	4037
    72   000000                     _SSPBUF	set	4041
    73   000000                     _PIR1bits	set	3998
    74   000000                     _PIE1bits	set	3997
    75   000000                     _T1CON	set	4045
    76   000000                     _INTCON2bits	set	4081
    77   000000                     _INTCONbits	set	4082
    78   000000                     _TRISB	set	3987
    79   000000                     _OSCTUNEbits	set	3995
    80   000000                     _RCONbits	set	4048
    81   000000                     _OSCCONbits	set	4051
    82   000000                     _TRISCbits	set	3988
    83                           
    84                           	psect	smallconst
    85   000200                     __psmallconst:
    86                           	callstack 0
    87   000200  00                 	db	0
    88   000201                     STR_3:
    89   000201  42                 	db	66	;'B'
    90   000202  79                 	db	121	;'y'
    91   000203  20                 	db	32
    92   000204  41                 	db	65	;'A'
    93   000205  69                 	db	105	;'i'
    94   000206  64                 	db	100	;'d'
    95   000207  61                 	db	97	;'a'
    96   000208  6E                 	db	110	;'n'
    97   000209  2C                 	db	44
    98   00020A  20                 	db	32
    99   00020B  42                 	db	66	;'B'
   100   00020C  72                 	db	114	;'r'
   101   00020D  65                 	db	101	;'e'
   102   00020E  74                 	db	116	;'t'
   103   00020F  74                 	db	116	;'t'
   104   000210  2C                 	db	44
   105   000211  00                 	db	0
   106   000212                     STR_4:
   107   000212  43                 	db	67	;'C'
   108   000213  68                 	db	104	;'h'
   109   000214  72                 	db	114	;'r'
   110   000215  69                 	db	105	;'i'
   111   000216  73                 	db	115	;'s'
   112   000217  2C                 	db	44
   113   000218  20                 	db	32
   114   000219  61                 	db	97	;'a'
   115   00021A  6E                 	db	110	;'n'
   116   00021B  64                 	db	100	;'d'
   117   00021C  20                 	db	32
   118   00021D  47                 	db	71	;'G'
   119   00021E  61                 	db	97	;'a'
   120   00021F  62                 	db	98	;'b'
   121   000220  65                 	db	101	;'e'
   122   000221  00                 	db	0
   123   000222                     STR_2:
   124   000222  43                 	db	67	;'C'
   125   000223  61                 	db	97	;'a'
   126   000224  70                 	db	112	;'p'
   127   000225  73                 	db	115	;'s'
   128   000226  74                 	db	116	;'t'
   129   000227  6F                 	db	111	;'o'
   130   000228  6E                 	db	110	;'n'
   131   000229  65                 	db	101	;'e'
   132   00022A  00                 	db	0
   133   00022B                     STR_1:
   134   00022B  53                 	db	83	;'S'
   135   00022C  65                 	db	101	;'e'
   136   00022D  6E                 	db	110	;'n'
   137   00022E  69                 	db	105	;'i'
   138   00022F  6F                 	db	111	;'o'
   139   000230  72                 	db	114	;'r'
   140   000231  00                 	db	0
   141   000232  20                 	db	32
   142   000233  00                 	db	0
   143   000234  00                 	db	0	; dummy byte at the end
   144   000000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148   00072C                     __pcinit:
   149                           	callstack 0
   150   00072C                     start_initialization:
   151                           	callstack 0
   152   00072C                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Clear objects allocated to COMRAM (2 bytes)
   156   00072C  6A24               	clrf	(__pbssCOMRAM+1)& (0+255),c
   157   00072E  6A23               	clrf	__pbssCOMRAM& (0+255),c
   158   000730                     end_of_initialization:
   159                           	callstack 0
   160   000730                     __end_of__initialization:
   161                           	callstack 0
   162   000730  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   163   000732  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   164   000734  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   000736  6EF8               	movwf	tblptru,c
   166   000738  0100               	movlb	0
   167   00073A  EF62  F003         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170   000023                     __pbssCOMRAM:
   171                           	callstack 0
   172   000023                     _new_input:
   173                           	callstack 0
   174   000023                     	ds	1
   175   000024                     _character:
   176                           	callstack 0
   177   000024                     	ds	1
   178                           
   179                           	psect	cstackCOMRAM
   180   000001                     __pcstackCOMRAM:
   181                           	callstack 0
   182   000001                     ??_ISR:
   183                           
   184                           ; 1 bytes @ 0x0
   185   000001                     	ds	1
   186   000002                     ?___lmul:
   187                           	callstack 0
   188   000002                     i2c_data_tx@data:
   189                           	callstack 0
   190   000002                     i2c_start_and_addr@address:
   191                           	callstack 0
   192   000002                     ___lmul@multiplier:
   193                           	callstack 0
   194                           
   195                           ; 4 bytes @ 0x1
   196   000002                     	ds	4
   197   000006                     ___lmul@multiplicand:
   198                           	callstack 0
   199                           
   200                           ; 4 bytes @ 0x5
   201   000006                     	ds	4
   202   00000A                     ___lmul@product:
   203                           	callstack 0
   204                           
   205                           ; 4 bytes @ 0x9
   206   00000A                     	ds	4
   207   00000E                     delay@milliseconds:
   208                           	callstack 0
   209                           
   210                           ; 4 bytes @ 0xD
   211   00000E                     	ds	4
   212   000012                     delay@timer_value:
   213                           	callstack 0
   214                           
   215                           ; 8 bytes @ 0x11
   216   000012                     	ds	8
   217   00001A                     ??_lcd_char:
   218   00001A                     lcd_command@lt:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x19
   222   00001A                     	ds	1
   223   00001B                     lcd_command@rw:
   224                           	callstack 0
   225   00001B                     lcd_char@letter:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x1A
   229   00001B                     	ds	1
   230   00001C                     lcd_command@rs:
   231                           	callstack 0
   232   00001C                     lcd_message@message:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x1B
   236   00001C                     	ds	1
   237   00001D                     ??_lcd_command:
   238                           
   239                           ; 1 bytes @ 0x1C
   240   00001D                     	ds	1
   241   00001E                     
   242                           ; 1 bytes @ 0x1D
   243   00001E                     	ds	2
   244   000020                     lcd_command@data:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x1F
   248   000020                     	ds	1
   249   000021                     lcd_move_cursor@position:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x20
   253   000021                     	ds	1
   254   000022                     lcd_move_cursor@line:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x21
   258   000022                     	ds	1
   259   000023                     
   260                           ; 1 bytes @ 0x22
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 30 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1
   280 ;;      Params:         0       0       0
   281 ;;      Locals:         0       0       0
   282 ;;      Temps:          0       0       0
   283 ;;      Totals:         0       0       0
   284 ;;Total ram usage:        0 bytes
   285 ;; Hardware stack levels required when called: 6
   286 ;; This function calls:
   287 ;;		_lcd_init
   288 ;;		_lcd_message
   289 ;;		_system_init
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296   0006C4                     __ptext0:
   297                           	callstack 0
   298   0006C4                     _main:
   299                           	callstack 25
   300   0006C4                     
   301                           ;main.c: 34:     system_init();
   302   0006C4  EC06  F003         	call	_system_init	;wreg free
   303   0006C8                     
   304                           ;main.c: 36:     lcd_init();
   305   0006C8  EC91  F001         	call	_lcd_init	;wreg free
   306   0006CC                     l1092:
   307                           
   308                           ;main.c: 39:     {;main.c: 40:        if(new_input)
   309   0006CC  5023               	movf	_new_input^0,w,c
   310   0006CE  B4D8               	btfsc	status,2,c
   311   0006D0  EF6C  F003         	goto	u281
   312   0006D4  EF6E  F003         	goto	u280
   313   0006D8                     u281:
   314   0006D8  EF66  F003         	goto	l1092
   315   0006DC                     u280:
   316   0006DC                     
   317                           ;main.c: 41:        {;main.c: 42:            lcd_message(&character);
   318   0006DC  0E24               	movlw	low _character
   319   0006DE  6E1C               	movwf	lcd_message@message^0,c
   320   0006E0  6A1D               	clrf	(lcd_message@message+1)^0,c
   321   0006E2  EC7A  F002         	call	_lcd_message	;wreg free
   322   0006E6                     
   323                           ;main.c: 43:            new_input = 0;
   324   0006E6  0E00               	movlw	0
   325   0006E8  6E23               	movwf	_new_input^0,c
   326   0006EA  EF66  F003         	goto	l1092
   327   0006EE  EF29  F000         	goto	start
   328   0006F2                     __end_of_main:
   329                           	callstack 0
   330                           
   331 ;; *************** function _system_init *****************
   332 ;; Defined at:
   333 ;;		line 235 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1
   347 ;;      Params:         0       0       0
   348 ;;      Locals:         0       0       0
   349 ;;      Temps:          0       0       0
   350 ;;      Totals:         0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used: 1
   353 ;; Hardware stack levels required when called: 1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text1
   362   00060C                     __ptext1:
   363                           	callstack 0
   364   00060C                     _system_init:
   365                           	callstack 29
   366   00060C                     
   367                           ;main.c: 238:     OSCCONbits.SCS = 0;
   368   00060C  0EFC               	movlw	-4
   369   00060E  16D3               	andwf	211,f,c	;volatile
   370   000610                     
   371                           ;main.c: 239:     OSCCONbits.IDLEN = 1;
   372   000610  8ED3               	bsf	211,7,c	;volatile
   373                           
   374                           ;main.c: 240:     OSCCONbits.IRCF = 7;
   375   000612  0E70               	movlw	112
   376   000614  12D3               	iorwf	211,f,c	;volatile
   377   000616                     
   378                           ;main.c: 241:     OSCTUNEbits.PLLEN = 1;
   379   000616  8C9B               	bsf	155,6,c	;volatile
   380   000618                     
   381                           ;main.c: 244:     INTCONbits.GIE = 1;
   382   000618  8EF2               	bsf	242,7,c	;volatile
   383   00061A                     
   384                           ;main.c: 245:     INTCONbits.PEIE = 1;
   385   00061A  8CF2               	bsf	242,6,c	;volatile
   386   00061C                     
   387                           ;main.c: 247:     INTCON2bits.RBPU = 0;
   388   00061C  9EF1               	bcf	241,7,c	;volatile
   389                           
   390                           ;main.c: 250:     ADCON1bits.PCFG = 15;
   391   00061E  0E0F               	movlw	15
   392   000620  12C1               	iorwf	193,f,c	;volatile
   393   000622                     
   394                           ;main.c: 253:     RCONbits.IPEN = 0;
   395   000622  9ED0               	bcf	208,7,c	;volatile
   396   000624                     
   397                           ;main.c: 256:     TRISB = TRISB | 0x1F;
   398   000624  5093               	movf	147,w,c	;volatile
   399   000626  091F               	iorlw	31
   400   000628  6E93               	movwf	147,c	;volatile
   401   00062A                     
   402                           ;main.c: 257:     PORTB = PORTB & 0xE0;
   403   00062A  5081               	movf	129,w,c	;volatile
   404   00062C  0BE0               	andlw	224
   405   00062E  6E81               	movwf	129,c	;volatile
   406   000630                     
   407                           ;main.c: 258:     INTCONbits.INT0IE = 1;
   408   000630  88F2               	bsf	242,4,c	;volatile
   409   000632                     
   410                           ;main.c: 259:     INTCON2bits.INTEDG0 = 1;
   411   000632  8CF1               	bsf	241,6,c	;volatile
   412   000634                     
   413                           ;main.c: 262:     SSPSTATbits.SMP = 1;
   414   000634  8EC7               	bsf	199,7,c	;volatile
   415   000636                     
   416                           ;main.c: 263:     SSPSTATbits.CKE = 0;
   417   000636  9CC7               	bcf	199,6,c	;volatile
   418                           
   419                           ;main.c: 264:     SSPADD = 0x50;
   420   000638  0E50               	movlw	80
   421   00063A  6EC8               	movwf	200,c	;volatile
   422   00063C                     
   423                           ;main.c: 265:     SSPCON1bits.SSPEN = 1;
   424   00063C  8AC6               	bsf	198,5,c	;volatile
   425                           
   426                           ;main.c: 266:     SSPCON1bits.SSPM = 0b1000;
   427   00063E  50C6               	movf	198,w,c	;volatile
   428   000640  0BF0               	andlw	-16
   429   000642  0908               	iorlw	8
   430   000644  6EC6               	movwf	198,c	;volatile
   431   000646                     
   432                           ;main.c: 267:     TRISCbits.RC3 = 1;
   433   000646  8694               	bsf	148,3,c	;volatile
   434   000648                     
   435                           ;main.c: 268:     TRISCbits.RC4 = 1;
   436   000648  8894               	bsf	148,4,c	;volatile
   437   00064A  0012               	return		;funcret
   438   00064C                     __end_of_system_init:
   439                           	callstack 0
   440                           
   441 ;; *************** function _lcd_init *****************
   442 ;; Defined at:
   443 ;;		line 89 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1
   457 ;;      Params:         0       0       0
   458 ;;      Locals:         0       0       0
   459 ;;      Temps:          0       0       0
   460 ;;      Totals:         0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used: 1
   463 ;; Hardware stack levels required when called: 5
   464 ;; This function calls:
   465 ;;		_delay
   466 ;;		_lcd_clear
   467 ;;		_lcd_command
   468 ;;		_lcd_message
   469 ;;		_lcd_move_cursor
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476   000322                     __ptext2:
   477                           	callstack 0
   478   000322                     _lcd_init:
   479                           	callstack 25
   480   000322                     
   481                           ;main.c: 96:     lcd_command(0x02, 1, 0, 0);
   482   000322  0E01               	movlw	1
   483   000324  6E1A               	movwf	lcd_command@lt^0,c
   484   000326  0E00               	movlw	0
   485   000328  6E1B               	movwf	lcd_command@rw^0,c
   486   00032A  0E00               	movlw	0
   487   00032C  6E1C               	movwf	lcd_command@rs^0,c
   488   00032E  0E02               	movlw	2
   489   000330  ECF6  F001         	call	_lcd_command
   490                           
   491                           ;main.c: 97:     lcd_command(0x28, 1, 0, 0);
   492   000334  0E01               	movlw	1
   493   000336  6E1A               	movwf	lcd_command@lt^0,c
   494   000338  0E00               	movlw	0
   495   00033A  6E1B               	movwf	lcd_command@rw^0,c
   496   00033C  0E00               	movlw	0
   497   00033E  6E1C               	movwf	lcd_command@rs^0,c
   498   000340  0E28               	movlw	40
   499   000342  ECF6  F001         	call	_lcd_command
   500                           
   501                           ;main.c: 99:     lcd_clear();
   502   000346  ECAE  F002         	call	_lcd_clear	;wreg free
   503                           
   504                           ;main.c: 102:     lcd_command(0x0F, 1, 0, 0);
   505   00034A  0E01               	movlw	1
   506   00034C  6E1A               	movwf	lcd_command@lt^0,c
   507   00034E  0E00               	movlw	0
   508   000350  6E1B               	movwf	lcd_command@rw^0,c
   509   000352  0E00               	movlw	0
   510   000354  6E1C               	movwf	lcd_command@rs^0,c
   511   000356  0E0F               	movlw	15
   512   000358  ECF6  F001         	call	_lcd_command
   513                           
   514                           ;main.c: 107:     lcd_move_cursor(0, 5);
   515   00035C  0E05               	movlw	5
   516   00035E  6E21               	movwf	lcd_move_cursor@position^0,c
   517   000360  0E00               	movlw	0
   518   000362  EC26  F003         	call	_lcd_move_cursor
   519   000366                     
   520                           ;main.c: 108:     lcd_message("Senior");
   521   000366  0E2B               	movlw	low STR_1
   522   000368  6E1C               	movwf	lcd_message@message^0,c
   523   00036A  501C               	movf	lcd_message@message^0,w,c
   524   00036C  A4D8               	btfss	status,2,c
   525   00036E  0E02               	movlw	high __smallconst
   526   000370  6E1D               	movwf	(lcd_message@message+1)^0,c
   527   000372  EC7A  F002         	call	_lcd_message	;wreg free
   528   000376                     
   529                           ;main.c: 109:     lcd_move_cursor(1, 4);
   530   000376  0E04               	movlw	4
   531   000378  6E21               	movwf	lcd_move_cursor@position^0,c
   532   00037A  0E01               	movlw	1
   533   00037C  EC26  F003         	call	_lcd_move_cursor
   534                           
   535                           ;main.c: 110:     lcd_message("Capstone");
   536   000380  0E22               	movlw	low STR_2
   537   000382  6E1C               	movwf	lcd_message@message^0,c
   538   000384  501C               	movf	lcd_message@message^0,w,c
   539   000386  A4D8               	btfss	status,2,c
   540   000388  0E02               	movlw	high __smallconst
   541   00038A  6E1D               	movwf	(lcd_message@message+1)^0,c
   542   00038C  EC7A  F002         	call	_lcd_message	;wreg free
   543   000390                     
   544                           ;main.c: 111:     delay(1000);
   545   000390  0EE8               	movlw	232
   546   000392  6E0E               	movwf	delay@milliseconds^0,c
   547   000394  0E03               	movlw	3
   548   000396  6E0F               	movwf	(delay@milliseconds+1)^0,c
   549   000398  0E00               	movlw	0
   550   00039A  6E10               	movwf	(delay@milliseconds+2)^0,c
   551   00039C  0E00               	movlw	0
   552   00039E  6E11               	movwf	(delay@milliseconds+3)^0,c
   553   0003A0  EC1B  F001         	call	_delay	;wreg free
   554   0003A4                     
   555                           ;main.c: 112:     lcd_clear();
   556   0003A4  ECAE  F002         	call	_lcd_clear	;wreg free
   557                           
   558                           ;main.c: 113:     lcd_message("By Aidan, Brett,");
   559   0003A8  0E01               	movlw	low STR_3
   560   0003AA  6E1C               	movwf	lcd_message@message^0,c
   561   0003AC  501C               	movf	lcd_message@message^0,w,c
   562   0003AE  A4D8               	btfss	status,2,c
   563   0003B0  0E02               	movlw	high __smallconst
   564   0003B2  6E1D               	movwf	(lcd_message@message+1)^0,c
   565   0003B4  EC7A  F002         	call	_lcd_message	;wreg free
   566   0003B8                     
   567                           ;main.c: 114:     lcd_move_cursor(1, 0);
   568   0003B8  0E00               	movlw	0
   569   0003BA  6E21               	movwf	lcd_move_cursor@position^0,c
   570   0003BC  0E01               	movlw	1
   571   0003BE  EC26  F003         	call	_lcd_move_cursor
   572   0003C2                     
   573                           ;main.c: 115:     lcd_message("Chris, and Gabe");
   574   0003C2  0E12               	movlw	low STR_4
   575   0003C4  6E1C               	movwf	lcd_message@message^0,c
   576   0003C6  501C               	movf	lcd_message@message^0,w,c
   577   0003C8  A4D8               	btfss	status,2,c
   578   0003CA  0E02               	movlw	high __smallconst
   579   0003CC  6E1D               	movwf	(lcd_message@message+1)^0,c
   580   0003CE  EC7A  F002         	call	_lcd_message	;wreg free
   581                           
   582                           ;main.c: 116:     delay(1000);
   583   0003D2  0EE8               	movlw	232
   584   0003D4  6E0E               	movwf	delay@milliseconds^0,c
   585   0003D6  0E03               	movlw	3
   586   0003D8  6E0F               	movwf	(delay@milliseconds+1)^0,c
   587   0003DA  0E00               	movlw	0
   588   0003DC  6E10               	movwf	(delay@milliseconds+2)^0,c
   589   0003DE  0E00               	movlw	0
   590   0003E0  6E11               	movwf	(delay@milliseconds+3)^0,c
   591   0003E2  EC1B  F001         	call	_delay	;wreg free
   592                           
   593                           ;main.c: 117:     lcd_clear();
   594   0003E6  ECAE  F002         	call	_lcd_clear	;wreg free
   595   0003EA  0012               	return		;funcret
   596   0003EC                     __end_of_lcd_init:
   597                           	callstack 0
   598                           
   599 ;; *************** function _lcd_move_cursor *****************
   600 ;; Defined at:
   601 ;;		line 130 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  line            1    wreg     unsigned char 
   604 ;;  position        1   32[COMRAM] unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  line            1   33[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1
   616 ;;      Params:         1       0       0
   617 ;;      Locals:         1       0       0
   618 ;;      Temps:          0       0       0
   619 ;;      Totals:         2       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 4
   623 ;; This function calls:
   624 ;;		_lcd_command
   625 ;; This function is called by:
   626 ;;		_lcd_init
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text3
   631   00064C                     __ptext3:
   632                           	callstack 0
   633   00064C                     _lcd_move_cursor:
   634                           	callstack 25
   635                           
   636                           ;incstack = 0
   637                           ;lcd_move_cursor@line stored from wreg
   638   00064C  6E22               	movwf	lcd_move_cursor@line^0,c
   639   00064E                     
   640                           ;main.c: 130: void lcd_move_cursor(char line, char position);main.c: 131: {;main.c: 132:
      +                               if(!line)
   641   00064E  5022               	movf	lcd_move_cursor@line^0,w,c
   642   000650  A4D8               	btfss	status,2,c
   643   000652  EF2D  F003         	goto	u271
   644   000656  EF2F  F003         	goto	u270
   645   00065A                     u271:
   646   00065A  EF3B  F003         	goto	l1072
   647   00065E                     u270:
   648   00065E                     
   649                           ;main.c: 133:     {;main.c: 134:         lcd_command(0x80 | position, 1, 0, 0);
   650   00065E  0E01               	movlw	1
   651   000660  6E1A               	movwf	lcd_command@lt^0,c
   652   000662  0E00               	movlw	0
   653   000664  6E1B               	movwf	lcd_command@rw^0,c
   654   000666  0E00               	movlw	0
   655   000668  6E1C               	movwf	lcd_command@rs^0,c
   656   00066A  5021               	movf	lcd_move_cursor@position^0,w,c
   657   00066C  0980               	iorlw	128
   658   00066E  ECF6  F001         	call	_lcd_command
   659                           
   660                           ;main.c: 135:     }
   661   000672  EF45  F003         	goto	l107
   662   000676                     l1072:
   663                           
   664                           ;main.c: 137:     {;main.c: 138:         lcd_command(0xC0 | position, 1, 0, 0);
   665   000676  0E01               	movlw	1
   666   000678  6E1A               	movwf	lcd_command@lt^0,c
   667   00067A  0E00               	movlw	0
   668   00067C  6E1B               	movwf	lcd_command@rw^0,c
   669   00067E  0E00               	movlw	0
   670   000680  6E1C               	movwf	lcd_command@rs^0,c
   671   000682  5021               	movf	lcd_move_cursor@position^0,w,c
   672   000684  09C0               	iorlw	192
   673   000686  ECF6  F001         	call	_lcd_command
   674   00068A                     l107:
   675   00068A  0012               	return		;funcret
   676   00068C                     __end_of_lcd_move_cursor:
   677                           	callstack 0
   678                           
   679 ;; *************** function _lcd_command *****************
   680 ;; Defined at:
   681 ;;		line 144 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  data            1    wreg     unsigned char 
   684 ;;  lt              1   25[COMRAM] unsigned char 
   685 ;;  rw              1   26[COMRAM] unsigned char 
   686 ;;  rs              1   27[COMRAM] unsigned char 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  data            1   31[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1
   698 ;;      Params:         3       0       0
   699 ;;      Locals:         1       0       0
   700 ;;      Temps:          3       0       0
   701 ;;      Totals:         7       0       0
   702 ;;Total ram usage:        7 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 3
   705 ;; This function calls:
   706 ;;		_delay
   707 ;;		_i2c_data_tx
   708 ;;		_i2c_start_and_addr
   709 ;;		_i2c_stop
   710 ;; This function is called by:
   711 ;;		_lcd_init
   712 ;;		_lcd_move_cursor
   713 ;;		_lcd_backspace
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text4
   718   0003EC                     __ptext4:
   719                           	callstack 0
   720   0003EC                     _lcd_command:
   721                           	callstack 25
   722                           
   723                           ;incstack = 0
   724                           ;lcd_command@data stored from wreg
   725   0003EC  6E20               	movwf	lcd_command@data^0,c
   726   0003EE                     
   727                           ;main.c: 144: void lcd_command(char data, char lt, char rw, char rs);main.c: 145: {;main
      +                          .c: 146:     i2c_start_and_addr(0x4E);
   728   0003EE  0E4E               	movlw	78
   729   0003F0  EC46  F003         	call	_i2c_start_and_addr
   730   0003F4                     
   731                           ;main.c: 148:     i2c_data_tx((data & 0xF0) | (lt << 3) | 4 | (rw <<1) | rs);
   732   0003F4  90D8               	bcf	status,0,c
   733   0003F6  341B               	rlcf	lcd_command@rw^0,w,c
   734   0003F8  6E1D               	movwf	??_lcd_command^0,c
   735   0003FA  C01A  F01E         	movff	lcd_command@lt,??_lcd_command+1
   736   0003FE  90D8               	bcf	status,0,c
   737   000400  361E               	rlcf	(??_lcd_command+1)^0,f,c
   738   000402  90D8               	bcf	status,0,c
   739   000404  361E               	rlcf	(??_lcd_command+1)^0,f,c
   740   000406  90D8               	bcf	status,0,c
   741   000408  361E               	rlcf	(??_lcd_command+1)^0,f,c
   742   00040A  5020               	movf	lcd_command@data^0,w,c
   743   00040C  0BF0               	andlw	240
   744   00040E  101E               	iorwf	(??_lcd_command+1)^0,w,c
   745   000410  101D               	iorwf	??_lcd_command^0,w,c
   746   000412  101C               	iorwf	lcd_command@rs^0,w,c
   747   000414  0904               	iorlw	4
   748   000416  EC79  F003         	call	_i2c_data_tx
   749   00041A                     
   750                           ;main.c: 149:     delay(1);
   751   00041A  0E01               	movlw	1
   752   00041C  6E0E               	movwf	delay@milliseconds^0,c
   753   00041E  0E00               	movlw	0
   754   000420  6E0F               	movwf	(delay@milliseconds+1)^0,c
   755   000422  0E00               	movlw	0
   756   000424  6E10               	movwf	(delay@milliseconds+2)^0,c
   757   000426  0E00               	movlw	0
   758   000428  6E11               	movwf	(delay@milliseconds+3)^0,c
   759   00042A  EC1B  F001         	call	_delay	;wreg free
   760   00042E                     
   761                           ;main.c: 150:     i2c_data_tx(lt<<3);
   762   00042E  381A               	swapf	lcd_command@lt^0,w,c
   763   000430  42E8               	rrncf	wreg,f,c
   764   000432  0BF8               	andlw	248
   765   000434  EC79  F003         	call	_i2c_data_tx
   766   000438                     
   767                           ;main.c: 153:     i2c_data_tx(((data & 0x0F) <<4) | (lt << 3) | 4 | (rw <<1) | rs);
   768   000438  90D8               	bcf	status,0,c
   769   00043A  341B               	rlcf	lcd_command@rw^0,w,c
   770   00043C  6E1D               	movwf	??_lcd_command^0,c
   771   00043E  C01A  F01E         	movff	lcd_command@lt,??_lcd_command+1
   772   000442  90D8               	bcf	status,0,c
   773   000444  361E               	rlcf	(??_lcd_command+1)^0,f,c
   774   000446  90D8               	bcf	status,0,c
   775   000448  361E               	rlcf	(??_lcd_command+1)^0,f,c
   776   00044A  90D8               	bcf	status,0,c
   777   00044C  361E               	rlcf	(??_lcd_command+1)^0,f,c
   778   00044E  C020  F01F         	movff	lcd_command@data,??_lcd_command+2
   779   000452  0E0F               	movlw	15
   780   000454  161F               	andwf	(??_lcd_command+2)^0,f,c
   781   000456  381F               	swapf	(??_lcd_command+2)^0,w,c
   782   000458  0BF0               	andlw	240
   783   00045A  101E               	iorwf	(??_lcd_command+1)^0,w,c
   784   00045C  101D               	iorwf	??_lcd_command^0,w,c
   785   00045E  101C               	iorwf	lcd_command@rs^0,w,c
   786   000460  0904               	iorlw	4
   787   000462  EC79  F003         	call	_i2c_data_tx
   788   000466                     
   789                           ;main.c: 154:     delay(1);
   790   000466  0E01               	movlw	1
   791   000468  6E0E               	movwf	delay@milliseconds^0,c
   792   00046A  0E00               	movlw	0
   793   00046C  6E0F               	movwf	(delay@milliseconds+1)^0,c
   794   00046E  0E00               	movlw	0
   795   000470  6E10               	movwf	(delay@milliseconds+2)^0,c
   796   000472  0E00               	movlw	0
   797   000474  6E11               	movwf	(delay@milliseconds+3)^0,c
   798   000476  EC1B  F001         	call	_delay	;wreg free
   799   00047A                     
   800                           ;main.c: 155:     i2c_data_tx(lt<<3);
   801   00047A  381A               	swapf	lcd_command@lt^0,w,c
   802   00047C  42E8               	rrncf	wreg,f,c
   803   00047E  0BF8               	andlw	248
   804   000480  EC79  F003         	call	_i2c_data_tx
   805   000484                     
   806                           ;main.c: 157:     i2c_stop();
   807   000484  EC8C  F003         	call	_i2c_stop	;wreg free
   808   000488  0012               	return		;funcret
   809   00048A                     __end_of_lcd_command:
   810                           	callstack 0
   811                           
   812 ;; *************** function _lcd_message *****************
   813 ;; Defined at:
   814 ;;		line 160 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  message         2   27[COMRAM] PTR unsigned char 
   817 ;;		 -> STR_5(2), STR_4(16), STR_3(17), STR_2(9), 
   818 ;;		 -> STR_1(7), character(1), 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1
   830 ;;      Params:         2       0       0
   831 ;;      Locals:         0       0       0
   832 ;;      Temps:          0       0       0
   833 ;;      Totals:         2       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 4
   837 ;; This function calls:
   838 ;;		_i2c_start_and_addr
   839 ;;		_i2c_stop
   840 ;;		_lcd_char
   841 ;; This function is called by:
   842 ;;		_main
   843 ;;		_lcd_init
   844 ;;		_lcd_backspace
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text5
   849   0004F4                     __ptext5:
   850                           	callstack 0
   851   0004F4                     _lcd_message:
   852                           	callstack 26
   853   0004F4                     
   854                           ;main.c: 160: void lcd_message(char* message);main.c: 161: {;main.c: 162:     i2c_start_
      +                          and_addr(0x4E);
   855   0004F4  0E4E               	movlw	78
   856   0004F6  EC46  F003         	call	_i2c_start_and_addr
   857                           
   858                           ;main.c: 163:     while(*message != 0)
   859   0004FA  EF93  F002         	goto	l1050
   860   0004FE                     l1046:
   861                           
   862                           ;main.c: 164:     {;main.c: 165:         lcd_char(*message);
   863   0004FE  C01C  FFF6         	movff	lcd_message@message,tblptrl
   864   000502  C01D  FFF7         	movff	lcd_message@message+1,tblptrh
   865   000506  6AF8               	clrf	tblptru,c
   866   000508  0E01               	movlw	(high __ramtop+-1)
   867   00050A  64F7               	cpfsgt	tblptrh,c
   868   00050C  D003               	bra	u247
   869   00050E  0008               	tblrd		*
   870   000510  50F5               	movf	tablat,w,c
   871   000512  D005               	bra	u240
   872   000514                     u247:
   873   000514  CFF6 FFE9          	movff	tblptrl,fsr0l
   874   000518  CFF7 FFEA          	movff	tblptrh,fsr0h
   875   00051C  50EF               	movf	indf0,w,c
   876   00051E                     u240:
   877   00051E  ECDE  F002         	call	_lcd_char
   878   000522                     
   879                           ;main.c: 166:         message++;
   880   000522  4A1C               	infsnz	lcd_message@message^0,f,c
   881   000524  2A1D               	incf	(lcd_message@message+1)^0,f,c
   882   000526                     l1050:
   883                           
   884                           ;main.c: 163:     while(*message != 0)
   885   000526  C01C  FFF6         	movff	lcd_message@message,tblptrl
   886   00052A  C01D  FFF7         	movff	lcd_message@message+1,tblptrh
   887   00052E  6AF8               	clrf	tblptru,c
   888   000530  0E01               	movlw	(high __ramtop+-1)
   889   000532  64F7               	cpfsgt	tblptrh,c
   890   000534  D003               	bra	u257
   891   000536  0008               	tblrd		*
   892   000538  50F5               	movf	tablat,w,c
   893   00053A  D005               	bra	u250
   894   00053C                     u257:
   895   00053C  CFF6 FFE9          	movff	tblptrl,fsr0l
   896   000540  CFF7 FFEA          	movff	tblptrh,fsr0h
   897   000544  50EF               	movf	indf0,w,c
   898   000546                     u250:
   899   000546  0900               	iorlw	0
   900   000548  A4D8               	btfss	status,2,c
   901   00054A  EFA9  F002         	goto	u261
   902   00054E  EFAB  F002         	goto	u260
   903   000552                     u261:
   904   000552  EF7F  F002         	goto	l1046
   905   000556                     u260:
   906   000556                     
   907                           ;main.c: 168:     i2c_stop();
   908   000556  EC8C  F003         	call	_i2c_stop	;wreg free
   909   00055A  0012               	return		;funcret
   910   00055C                     __end_of_lcd_message:
   911                           	callstack 0
   912                           
   913 ;; *************** function _lcd_char *****************
   914 ;; Defined at:
   915 ;;		line 171 in file "main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  letter          1    wreg     unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  letter          1   26[COMRAM] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1
   929 ;;      Params:         0       0       0
   930 ;;      Locals:         1       0       0
   931 ;;      Temps:          1       0       0
   932 ;;      Totals:         2       0       0
   933 ;;Total ram usage:        2 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 3
   936 ;; This function calls:
   937 ;;		_delay
   938 ;;		_i2c_data_tx
   939 ;; This function is called by:
   940 ;;		_lcd_message
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text6
   945   0005BC                     __ptext6:
   946                           	callstack 0
   947   0005BC                     _lcd_char:
   948                           	callstack 26
   949                           
   950                           ;incstack = 0
   951                           ;lcd_char@letter stored from wreg
   952   0005BC  6E1B               	movwf	lcd_char@letter^0,c
   953   0005BE                     
   954                           ;main.c: 171: void lcd_char(char letter);main.c: 172: {;main.c: 173:     i2c_data_tx((le
      +                          tter & 0xF0) | 0b1101);
   955   0005BE  501B               	movf	lcd_char@letter^0,w,c
   956   0005C0  0BF0               	andlw	240
   957   0005C2  090D               	iorlw	13
   958   0005C4  EC79  F003         	call	_i2c_data_tx
   959                           
   960                           ;main.c: 174:     i2c_data_tx((letter & 0xF0) | 8);
   961   0005C8  501B               	movf	lcd_char@letter^0,w,c
   962   0005CA  0BF0               	andlw	240
   963   0005CC  0908               	iorlw	8
   964   0005CE  EC79  F003         	call	_i2c_data_tx
   965                           
   966                           ;main.c: 178:     i2c_data_tx(((letter & 0x0F) << 4) | 0b1101);
   967   0005D2  C01B  F01A         	movff	lcd_char@letter,??_lcd_char
   968   0005D6  0E0F               	movlw	15
   969   0005D8  161A               	andwf	??_lcd_char^0,f,c
   970   0005DA  381A               	swapf	??_lcd_char^0,w,c
   971   0005DC  0BF0               	andlw	240
   972   0005DE  090D               	iorlw	13
   973   0005E0  EC79  F003         	call	_i2c_data_tx
   974                           
   975                           ;main.c: 179:     i2c_data_tx(((letter & 0x0F) << 4) | 8);
   976   0005E4  C01B  F01A         	movff	lcd_char@letter,??_lcd_char
   977   0005E8  0E0F               	movlw	15
   978   0005EA  161A               	andwf	??_lcd_char^0,f,c
   979   0005EC  381A               	swapf	??_lcd_char^0,w,c
   980   0005EE  0BF0               	andlw	240
   981   0005F0  0908               	iorlw	8
   982   0005F2  EC79  F003         	call	_i2c_data_tx
   983                           
   984                           ;main.c: 180:     delay(1);
   985   0005F6  0E01               	movlw	1
   986   0005F8  6E0E               	movwf	delay@milliseconds^0,c
   987   0005FA  0E00               	movlw	0
   988   0005FC  6E0F               	movwf	(delay@milliseconds+1)^0,c
   989   0005FE  0E00               	movlw	0
   990   000600  6E10               	movwf	(delay@milliseconds+2)^0,c
   991   000602  0E00               	movlw	0
   992   000604  6E11               	movwf	(delay@milliseconds+3)^0,c
   993   000606  EC1B  F001         	call	_delay	;wreg free
   994   00060A  0012               	return		;funcret
   995   00060C                     __end_of_lcd_char:
   996                           	callstack 0
   997                           
   998 ;; *************** function _lcd_clear *****************
   999 ;; Defined at:
  1000 ;;		line 183 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1
  1014 ;;      Params:         0       0       0
  1015 ;;      Locals:         0       0       0
  1016 ;;      Temps:          0       0       0
  1017 ;;      Totals:         0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 3
  1021 ;; This function calls:
  1022 ;;		_delay
  1023 ;;		_i2c_data_tx
  1024 ;;		_i2c_start_and_addr
  1025 ;;		_i2c_stop
  1026 ;; This function is called by:
  1027 ;;		_lcd_init
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text7
  1032   00055C                     __ptext7:
  1033                           	callstack 0
  1034   00055C                     _lcd_clear:
  1035                           	callstack 26
  1036   00055C                     
  1037                           ;main.c: 185:     i2c_start_and_addr(0x4E);
  1038   00055C  0E4E               	movlw	78
  1039   00055E  EC46  F003         	call	_i2c_start_and_addr
  1040                           
  1041                           ;main.c: 188:     i2c_data_tx(0b00001100);
  1042   000562  0E0C               	movlw	12
  1043   000564  EC79  F003         	call	_i2c_data_tx
  1044   000568                     
  1045                           ;main.c: 189:     delay(1);
  1046   000568  0E01               	movlw	1
  1047   00056A  6E0E               	movwf	delay@milliseconds^0,c
  1048   00056C  0E00               	movlw	0
  1049   00056E  6E0F               	movwf	(delay@milliseconds+1)^0,c
  1050   000570  0E00               	movlw	0
  1051   000572  6E10               	movwf	(delay@milliseconds+2)^0,c
  1052   000574  0E00               	movlw	0
  1053   000576  6E11               	movwf	(delay@milliseconds+3)^0,c
  1054   000578  EC1B  F001         	call	_delay	;wreg free
  1055   00057C                     
  1056                           ;main.c: 190:     i2c_data_tx(0b00001000);
  1057   00057C  0E08               	movlw	8
  1058   00057E  EC79  F003         	call	_i2c_data_tx
  1059   000582                     
  1060                           ;main.c: 193:     i2c_data_tx(0b00011100);
  1061   000582  0E1C               	movlw	28
  1062   000584  EC79  F003         	call	_i2c_data_tx
  1063   000588                     
  1064                           ;main.c: 194:     delay(1);
  1065   000588  0E01               	movlw	1
  1066   00058A  6E0E               	movwf	delay@milliseconds^0,c
  1067   00058C  0E00               	movlw	0
  1068   00058E  6E0F               	movwf	(delay@milliseconds+1)^0,c
  1069   000590  0E00               	movlw	0
  1070   000592  6E10               	movwf	(delay@milliseconds+2)^0,c
  1071   000594  0E00               	movlw	0
  1072   000596  6E11               	movwf	(delay@milliseconds+3)^0,c
  1073   000598  EC1B  F001         	call	_delay	;wreg free
  1074                           
  1075                           ;main.c: 195:     i2c_data_tx(0b00011000);
  1076   00059C  0E18               	movlw	24
  1077   00059E  EC79  F003         	call	_i2c_data_tx
  1078   0005A2                     
  1079                           ;main.c: 196:     delay(1);
  1080   0005A2  0E01               	movlw	1
  1081   0005A4  6E0E               	movwf	delay@milliseconds^0,c
  1082   0005A6  0E00               	movlw	0
  1083   0005A8  6E0F               	movwf	(delay@milliseconds+1)^0,c
  1084   0005AA  0E00               	movlw	0
  1085   0005AC  6E10               	movwf	(delay@milliseconds+2)^0,c
  1086   0005AE  0E00               	movlw	0
  1087   0005B0  6E11               	movwf	(delay@milliseconds+3)^0,c
  1088   0005B2  EC1B  F001         	call	_delay	;wreg free
  1089   0005B6                     
  1090                           ;main.c: 198:     i2c_stop();
  1091   0005B6  EC8C  F003         	call	_i2c_stop	;wreg free
  1092   0005BA  0012               	return		;funcret
  1093   0005BC                     __end_of_lcd_clear:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _i2c_stop *****************
  1097 ;; Defined at:
  1098 ;;		line 212 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		None
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1
  1112 ;;      Params:         0       0       0
  1113 ;;      Locals:         0       0       0
  1114 ;;      Temps:          0       0       0
  1115 ;;      Totals:         0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_lcd_command
  1123 ;;		_lcd_message
  1124 ;;		_lcd_clear
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text8
  1129   000718                     __ptext8:
  1130                           	callstack 0
  1131   000718                     _i2c_stop:
  1132                           	callstack 28
  1133   000718                     
  1134                           ;main.c: 215:     SSPCON2bits.PEN = 1;
  1135   000718  84C5               	bsf	197,2,c	;volatile
  1136   00071A                     l133:
  1137   00071A  A69E               	btfss	158,3,c	;volatile
  1138   00071C  EF92  F003         	goto	u111
  1139   000720  EF94  F003         	goto	u110
  1140   000724                     u111:
  1141   000724  EF8D  F003         	goto	l133
  1142   000728                     u110:
  1143   000728                     
  1144                           ;main.c: 217:     PIR1bits.SSPIF = 0;
  1145   000728  969E               	bcf	158,3,c	;volatile
  1146   00072A  0012               	return		;funcret
  1147   00072C                     __end_of_i2c_stop:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _i2c_start_and_addr *****************
  1151 ;; Defined at:
  1152 ;;		line 220 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  address         1    wreg     unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  address         1    1[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1
  1166 ;;      Params:         0       0       0
  1167 ;;      Locals:         1       0       0
  1168 ;;      Temps:          0       0       0
  1169 ;;      Totals:         1       0       0
  1170 ;;Total ram usage:        1 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_lcd_command
  1177 ;;		_lcd_message
  1178 ;;		_lcd_clear
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text9
  1183   00068C                     __ptext9:
  1184                           	callstack 0
  1185   00068C                     _i2c_start_and_addr:
  1186                           	callstack 28
  1187                           
  1188                           ;incstack = 0
  1189                           ;i2c_start_and_addr@address stored from wreg
  1190   00068C  6E02               	movwf	i2c_start_and_addr@address^0,c
  1191   00068E                     
  1192                           ;main.c: 220: void i2c_start_and_addr(unsigned char address);main.c: 221: {;main.c: 223:
      +                               SSPCON2bits.SEN = 1;
  1193   00068E  80C5               	bsf	197,0,c	;volatile
  1194   000690                     l139:
  1195   000690  A69E               	btfss	158,3,c	;volatile
  1196   000692  EF4D  F003         	goto	u61
  1197   000696  EF4F  F003         	goto	u60
  1198   00069A                     u61:
  1199   00069A  EF48  F003         	goto	l139
  1200   00069E                     u60:
  1201   00069E                     
  1202                           ;main.c: 225:     PIR1bits.SSPIF = 0;
  1203   00069E  969E               	bcf	158,3,c	;volatile
  1204   0006A0                     l862:
  1205                           
  1206                           ;main.c: 227:     {;main.c: 228:         SSPBUF = address;
  1207   0006A0  C002  FFC9         	movff	i2c_start_and_addr@address,4041	;volatile
  1208   0006A4                     l143:
  1209   0006A4  A69E               	btfss	158,3,c	;volatile
  1210   0006A6  EF57  F003         	goto	u71
  1211   0006AA  EF59  F003         	goto	u70
  1212   0006AE                     u71:
  1213   0006AE  EF52  F003         	goto	l143
  1214   0006B2                     u70:
  1215   0006B2                     
  1216                           ;main.c: 230:         PIR1bits.SSPIF = 0;
  1217   0006B2  969E               	bcf	158,3,c	;volatile
  1218                           
  1219                           ;main.c: 231:     }while(SSPCON2bits.ACKSTAT);
  1220   0006B4  BCC5               	btfsc	197,6,c	;volatile
  1221   0006B6  EF5F  F003         	goto	u81
  1222   0006BA  EF61  F003         	goto	u80
  1223   0006BE                     u81:
  1224   0006BE  EF50  F003         	goto	l862
  1225   0006C2                     u80:
  1226   0006C2  0012               	return		;funcret
  1227   0006C4                     __end_of_i2c_start_and_addr:
  1228                           	callstack 0
  1229                           
  1230 ;; *************** function _i2c_data_tx *****************
  1231 ;; Defined at:
  1232 ;;		line 201 in file "main.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  data            1    wreg     unsigned char 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  data            1    1[COMRAM] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1
  1246 ;;      Params:         0       0       0
  1247 ;;      Locals:         1       0       0
  1248 ;;      Temps:          0       0       0
  1249 ;;      Totals:         1       0       0
  1250 ;;Total ram usage:        1 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_lcd_command
  1257 ;;		_lcd_char
  1258 ;;		_lcd_clear
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text10
  1263   0006F2                     __ptext10:
  1264                           	callstack 0
  1265   0006F2                     _i2c_data_tx:
  1266                           	callstack 27
  1267                           
  1268                           ;incstack = 0
  1269                           ;i2c_data_tx@data stored from wreg
  1270   0006F2  6E02               	movwf	i2c_data_tx@data^0,c
  1271   0006F4                     l125:
  1272   0006F4                     
  1273                           ;main.c: 204:     {;main.c: 205:         SSPBUF = data;
  1274   0006F4  C002  FFC9         	movff	i2c_data_tx@data,4041	;volatile
  1275   0006F8                     l126:
  1276   0006F8  A69E               	btfss	158,3,c	;volatile
  1277   0006FA  EF81  F003         	goto	u91
  1278   0006FE  EF83  F003         	goto	u90
  1279   000702                     u91:
  1280   000702  EF7C  F003         	goto	l126
  1281   000706                     u90:
  1282   000706                     
  1283                           ;main.c: 207:         PIR1bits.SSPIF = 0;
  1284   000706  969E               	bcf	158,3,c	;volatile
  1285                           
  1286                           ;main.c: 209:     }while(SSPCON2bits.ACKSTAT);
  1287   000708  BCC5               	btfsc	197,6,c	;volatile
  1288   00070A  EF89  F003         	goto	u101
  1289   00070E  EF8B  F003         	goto	u100
  1290   000712                     u101:
  1291   000712  EF7A  F003         	goto	l125
  1292   000716                     u100:
  1293   000716  0012               	return		;funcret
  1294   000718                     __end_of_i2c_data_tx:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _delay *****************
  1298 ;; Defined at:
  1299 ;;		line 65 in file "main.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  milliseconds    4   13[COMRAM] unsigned long 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  timer_value     8   17[COMRAM] unsigned long long 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1
  1313 ;;      Params:         4       0       0
  1314 ;;      Locals:         8       0       0
  1315 ;;      Temps:          0       0       0
  1316 ;;      Totals:        12       0       0
  1317 ;;Total ram usage:       12 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 2
  1320 ;; This function calls:
  1321 ;;		___lmul
  1322 ;; This function is called by:
  1323 ;;		_lcd_init
  1324 ;;		_lcd_command
  1325 ;;		_lcd_char
  1326 ;;		_lcd_clear
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text11
  1331   000236                     __ptext11:
  1332                           	callstack 0
  1333   000236                     _delay:
  1334                           	callstack 26
  1335   000236                     
  1336                           ;main.c: 65: void delay(unsigned long milliseconds);main.c: 66: {;main.c: 67:     T1CON 
      +                          = 0b10110000;
  1337   000236  0EB0               	movlw	176
  1338   000238  6ECD               	movwf	205,c	;volatile
  1339   00023A                     
  1340                           ;main.c: 68:     PIE1bits.TMR1IE = 0;
  1341   00023A  909D               	bcf	157,0,c	;volatile
  1342   00023C                     
  1343                           ;main.c: 69:     unsigned long long timer_value = (milliseconds) * 1000 ;
  1344   00023C  C00E  F002         	movff	delay@milliseconds,___lmul@multiplier
  1345   000240  C00F  F003         	movff	delay@milliseconds+1,___lmul@multiplier+1
  1346   000244  C010  F004         	movff	delay@milliseconds+2,___lmul@multiplier+2
  1347   000248  C011  F005         	movff	delay@milliseconds+3,___lmul@multiplier+3
  1348   00024C  0EE8               	movlw	232
  1349   00024E  6E06               	movwf	___lmul@multiplicand^0,c
  1350   000250  0E03               	movlw	3
  1351   000252  6E07               	movwf	(___lmul@multiplicand+1)^0,c
  1352   000254  0E00               	movlw	0
  1353   000256  6E08               	movwf	(___lmul@multiplicand+2)^0,c
  1354   000258  0E00               	movlw	0
  1355   00025A  6E09               	movwf	(___lmul@multiplicand+3)^0,c
  1356   00025C  EC45  F002         	call	___lmul	;wreg free
  1357   000260  5002               	movf	?___lmul^0,w,c
  1358   000262  6E12               	movwf	delay@timer_value^0,c
  1359   000264  5003               	movf	(?___lmul+1)^0,w,c
  1360   000266  6E13               	movwf	(delay@timer_value+1)^0,c
  1361   000268  5004               	movf	(?___lmul+2)^0,w,c
  1362   00026A  6E14               	movwf	(delay@timer_value+2)^0,c
  1363   00026C  5005               	movf	(?___lmul+3)^0,w,c
  1364   00026E  6E15               	movwf	(delay@timer_value+3)^0,c
  1365   000270  6A16               	clrf	(delay@timer_value+4)^0,c
  1366   000272  6A17               	clrf	(delay@timer_value+5)^0,c
  1367   000274  6A18               	clrf	(delay@timer_value+6)^0,c
  1368   000276  6A19               	clrf	(delay@timer_value+7)^0,c
  1369                           
  1370                           ;main.c: 70:     while(timer_value > 65535)
  1371   000278  EF5C  F001         	goto	l1016
  1372   00027C                     l1008:
  1373                           
  1374                           ;main.c: 71:     {;main.c: 72:         timer_value -= 65535;
  1375   00027C  0EFF               	movlw	255
  1376   00027E  5E12               	subwf	delay@timer_value^0,f,c
  1377   000280  0EFF               	movlw	255
  1378   000282  5A13               	subwfb	(delay@timer_value+1)^0,f,c
  1379   000284  0E00               	movlw	0
  1380   000286  5A14               	subwfb	(delay@timer_value+2)^0,f,c
  1381   000288  0E00               	movlw	0
  1382   00028A  5A15               	subwfb	(delay@timer_value+3)^0,f,c
  1383   00028C  0E00               	movlw	0
  1384   00028E  5A16               	subwfb	(delay@timer_value+4)^0,f,c
  1385   000290  0E00               	movlw	0
  1386   000292  5A17               	subwfb	(delay@timer_value+5)^0,f,c
  1387   000294  0E00               	movlw	0
  1388   000296  5A18               	subwfb	(delay@timer_value+6)^0,f,c
  1389   000298  0E00               	movlw	0
  1390   00029A  5A19               	subwfb	(delay@timer_value+7)^0,f,c
  1391   00029C                     
  1392                           ;main.c: 73:         TMR1H = 0;
  1393   00029C  0E00               	movlw	0
  1394   00029E  6ECF               	movwf	207,c	;volatile
  1395   0002A0                     
  1396                           ;main.c: 74:         TMR1L = 0;
  1397   0002A0  0E00               	movlw	0
  1398   0002A2  6ECE               	movwf	206,c	;volatile
  1399   0002A4                     
  1400                           ;main.c: 75:         T1CONbits.TMR1ON = 1;
  1401   0002A4  80CD               	bsf	205,0,c	;volatile
  1402   0002A6                     l89:
  1403   0002A6  A09E               	btfss	158,0,c	;volatile
  1404   0002A8  EF58  F001         	goto	u211
  1405   0002AC  EF5A  F001         	goto	u210
  1406   0002B0                     u211:
  1407   0002B0  EF53  F001         	goto	l89
  1408   0002B4                     u210:
  1409   0002B4                     
  1410                           ;main.c: 77:         T1CONbits.TMR1ON = 0;
  1411   0002B4  90CD               	bcf	205,0,c	;volatile
  1412                           
  1413                           ;main.c: 78:         PIR1bits.TMR1IF = 0;
  1414   0002B6  909E               	bcf	158,0,c	;volatile
  1415   0002B8                     l1016:
  1416                           
  1417                           ;main.c: 70:     while(timer_value > 65535)
  1418   0002B8  5019               	movf	(delay@timer_value+7)^0,w,c
  1419   0002BA  1018               	iorwf	(delay@timer_value+6)^0,w,c
  1420   0002BC  1017               	iorwf	(delay@timer_value+5)^0,w,c
  1421   0002BE  1016               	iorwf	(delay@timer_value+4)^0,w,c
  1422   0002C0  1015               	iorwf	(delay@timer_value+3)^0,w,c
  1423   0002C2  E106               	bnz	u221
  1424   0002C4  0414               	decf	(delay@timer_value+2)^0,w,c
  1425   0002C6  B0D8               	btfsc	status,0,c
  1426   0002C8  EF68  F001         	goto	u221
  1427   0002CC  EF6A  F001         	goto	u220
  1428   0002D0                     u221:
  1429   0002D0  EF3E  F001         	goto	l1008
  1430   0002D4                     u220:
  1431   0002D4                     
  1432                           ;main.c: 80:     timer_value = 65535 - timer_value + 1;
  1433   0002D4  5012               	movf	delay@timer_value^0,w,c
  1434   0002D6  0800               	sublw	0
  1435   0002D8  6E12               	movwf	delay@timer_value^0,c
  1436   0002DA  0E00               	movlw	0
  1437   0002DC  5413               	subfwb	(delay@timer_value+1)^0,w,c
  1438   0002DE  6E13               	movwf	(delay@timer_value+1)^0,c
  1439   0002E0  0E01               	movlw	1
  1440   0002E2  5414               	subfwb	(delay@timer_value+2)^0,w,c
  1441   0002E4  6E14               	movwf	(delay@timer_value+2)^0,c
  1442   0002E6  0E00               	movlw	0
  1443   0002E8  5415               	subfwb	(delay@timer_value+3)^0,w,c
  1444   0002EA  6E15               	movwf	(delay@timer_value+3)^0,c
  1445   0002EC  0E00               	movlw	0
  1446   0002EE  5416               	subfwb	(delay@timer_value+4)^0,w,c
  1447   0002F0  6E16               	movwf	(delay@timer_value+4)^0,c
  1448   0002F2  0E00               	movlw	0
  1449   0002F4  5417               	subfwb	(delay@timer_value+5)^0,w,c
  1450   0002F6  6E17               	movwf	(delay@timer_value+5)^0,c
  1451   0002F8  0E00               	movlw	0
  1452   0002FA  5418               	subfwb	(delay@timer_value+6)^0,w,c
  1453   0002FC  6E18               	movwf	(delay@timer_value+6)^0,c
  1454   0002FE  0E00               	movlw	0
  1455   000300  5419               	subfwb	(delay@timer_value+7)^0,w,c
  1456   000302  6E19               	movwf	(delay@timer_value+7)^0,c
  1457   000304                     
  1458                           ;main.c: 81:     TMR1H = (unsigned char)(0xFF00 & timer_value);
  1459   000304  0E00               	movlw	0
  1460   000306  6ECF               	movwf	207,c	;volatile
  1461   000308                     
  1462                           ;main.c: 82:     TMR1L = (unsigned char)(0xFF & timer_value);
  1463   000308  C012  FFCE         	movff	delay@timer_value,4046	;volatile
  1464   00030C                     
  1465                           ;main.c: 83:     T1CONbits.TMR1ON = 1;
  1466   00030C  80CD               	bsf	205,0,c	;volatile
  1467   00030E                     l93:
  1468   00030E  A09E               	btfss	158,0,c	;volatile
  1469   000310  EF8C  F001         	goto	u231
  1470   000314  EF8E  F001         	goto	u230
  1471   000318                     u231:
  1472   000318  EF87  F001         	goto	l93
  1473   00031C                     u230:
  1474   00031C                     
  1475                           ;main.c: 85:     T1CONbits.TMR1ON = 0;
  1476   00031C  90CD               	bcf	205,0,c	;volatile
  1477                           
  1478                           ;main.c: 86:     PIR1bits.TMR1IF = 0;
  1479   00031E  909E               	bcf	158,0,c	;volatile
  1480   000320  0012               	return		;funcret
  1481   000322                     __end_of_delay:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function ___lmul *****************
  1485 ;; Defined at:
  1486 ;;		line 15 in file "F:\Program Files\MicroChip\XC8\v2.45\pic\sources\c99\common\Umul32.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  multiplier      4    1[COMRAM] unsigned long 
  1489 ;;  multiplicand    4    5[COMRAM] unsigned long 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  product         4    9[COMRAM] unsigned long 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  4    1[COMRAM] unsigned long 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1
  1501 ;;      Params:         8       0       0
  1502 ;;      Locals:         4       0       0
  1503 ;;      Temps:          0       0       0
  1504 ;;      Totals:        12       0       0
  1505 ;;Total ram usage:       12 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_delay
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text12
  1516   00048A                     __ptext12:
  1517                           	callstack 0
  1518   00048A                     ___lmul:
  1519                           	callstack 26
  1520   00048A  0E00               	movlw	0
  1521   00048C  6E0A               	movwf	___lmul@product^0,c
  1522   00048E  0E00               	movlw	0
  1523   000490  6E0B               	movwf	(___lmul@product+1)^0,c
  1524   000492  0E00               	movlw	0
  1525   000494  6E0C               	movwf	(___lmul@product+2)^0,c
  1526   000496  0E00               	movlw	0
  1527   000498  6E0D               	movwf	(___lmul@product+3)^0,c
  1528   00049A                     l994:
  1529   00049A  A002               	btfss	___lmul@multiplier^0,0,c
  1530   00049C  EF52  F002         	goto	u191
  1531   0004A0  EF54  F002         	goto	u190
  1532   0004A4                     u191:
  1533   0004A4  EF5C  F002         	goto	l998
  1534   0004A8                     u190:
  1535   0004A8  5006               	movf	___lmul@multiplicand^0,w,c
  1536   0004AA  260A               	addwf	___lmul@product^0,f,c
  1537   0004AC  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  1538   0004AE  220B               	addwfc	(___lmul@product+1)^0,f,c
  1539   0004B0  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  1540   0004B2  220C               	addwfc	(___lmul@product+2)^0,f,c
  1541   0004B4  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  1542   0004B6  220D               	addwfc	(___lmul@product+3)^0,f,c
  1543   0004B8                     l998:
  1544   0004B8  90D8               	bcf	status,0,c
  1545   0004BA  3606               	rlcf	___lmul@multiplicand^0,f,c
  1546   0004BC  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1547   0004BE  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1548   0004C0  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1549   0004C2  90D8               	bcf	status,0,c
  1550   0004C4  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  1551   0004C6  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  1552   0004C8  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  1553   0004CA  3202               	rrcf	___lmul@multiplier^0,f,c
  1554   0004CC  5002               	movf	___lmul@multiplier^0,w,c
  1555   0004CE  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  1556   0004D0  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  1557   0004D2  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  1558   0004D4  A4D8               	btfss	status,2,c
  1559   0004D6  EF6F  F002         	goto	u201
  1560   0004DA  EF71  F002         	goto	u200
  1561   0004DE                     u201:
  1562   0004DE  EF4D  F002         	goto	l994
  1563   0004E2                     u200:
  1564   0004E2  C00A  F002         	movff	___lmul@product,?___lmul
  1565   0004E6  C00B  F003         	movff	___lmul@product+1,?___lmul+1
  1566   0004EA  C00C  F004         	movff	___lmul@product+2,?___lmul+2
  1567   0004EE  C00D  F005         	movff	___lmul@product+3,?___lmul+3
  1568   0004F2  0012               	return		;funcret
  1569   0004F4                     __end_of___lmul:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _ISR *****************
  1573 ;; Defined at:
  1574 ;;		line 50 in file "main.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1
  1588 ;;      Params:         0       0       0
  1589 ;;      Locals:         0       0       0
  1590 ;;      Temps:          1       0       0
  1591 ;;      Totals:         1       0       0
  1592 ;;Total ram usage:        1 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		Interrupt level 2
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	intcode
  1602   000008                     __pintcode:
  1603                           	callstack 0
  1604   000008                     _ISR:
  1605                           	callstack 25
  1606                           
  1607                           ;incstack = 0
  1608   000008  8225               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1609   00000A                     
  1610                           ;main.c: 52:     if(INTCONbits.INT0IF == 1)
  1611   00000A  A2F2               	btfss	242,1,c	;volatile
  1612   00000C  EF0A  F000         	goto	i2u17_41
  1613   000010  EF0C  F000         	goto	i2u17_40
  1614   000014                     i2u17_41:
  1615   000014  EF27  F000         	goto	i2l84
  1616   000018                     i2u17_40:
  1617   000018                     
  1618                           ;main.c: 53:     {;main.c: 54:         character = (LATB & 0x1F) >> 1;
  1619   000018  90D8               	bcf	status,0,c
  1620   00001A  308A               	rrcf	138,w,c	;volatile
  1621   00001C  0B0F               	andlw	15
  1622   00001E  6E24               	movwf	_character^0,c
  1623   000020                     
  1624                           ;main.c: 56:         INTCONbits.INT0IF = 0;
  1625   000020  92F2               	bcf	242,1,c	;volatile
  1626   000022                     i2l81:
  1627   000022  A2F2               	btfss	242,1,c	;volatile
  1628   000024  EF16  F000         	goto	i2u18_41
  1629   000028  EF18  F000         	goto	i2u18_40
  1630   00002C                     i2u18_41:
  1631   00002C  EF11  F000         	goto	i2l81
  1632   000030                     i2u18_40:
  1633   000030                     
  1634                           ;main.c: 58:         character = character | ((LATB & 0x1E) << 3);
  1635   000030  CF8A F001          	movff	3978,??_ISR	;volatile
  1636   000034  0E1E               	movlw	30
  1637   000036  1601               	andwf	??_ISR^0,f,c
  1638   000038  90D8               	bcf	status,0,c
  1639   00003A  3601               	rlcf	??_ISR^0,f,c
  1640   00003C  90D8               	bcf	status,0,c
  1641   00003E  3601               	rlcf	??_ISR^0,f,c
  1642   000040  90D8               	bcf	status,0,c
  1643   000042  3401               	rlcf	??_ISR^0,w,c
  1644   000044  1024               	iorwf	_character^0,w,c
  1645   000046  6E24               	movwf	_character^0,c
  1646   000048                     
  1647                           ;main.c: 59:         INTCONbits.INT0IF = 0;
  1648   000048  92F2               	bcf	242,1,c	;volatile
  1649   00004A                     
  1650                           ;main.c: 60:         new_input = 1;
  1651   00004A  0E01               	movlw	1
  1652   00004C  6E23               	movwf	_new_input^0,c
  1653   00004E                     i2l84:
  1654   00004E  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1655   000050  0011               	retfie		f
  1656   000052                     __end_of_ISR:
  1657                           	callstack 0
  1658                           
  1659                           	psect	rparam
  1660   000000                     
  1661                           	psect	temp
  1662   000025                     btemp:
  1663                           	callstack 0
  1664   000025                     	ds	1
  1665   000000                     int$flags	set	btemp
  1666   000000                     wtemp8	set	btemp+1
  1667   000000                     ttemp5	set	btemp+1
  1668   000000                     ttemp6	set	btemp+4
  1669   000000                     ttemp7	set	btemp+8
  1670                           
  1671                           	psect	config
  1672                           
  1673                           ; Padding undefined space
  1674   300000                     	org	3145728
  1675   300000  FF                 	db	255
  1676                           
  1677                           ;Config register CONFIG1H @ 0x300001
  1678                           ;	Oscillator
  1679                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
  1680                           ;	Fail-Safe Clock Monitor Enable bit
  1681                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1682                           ;	Internal/External Oscillator Switchover bit
  1683                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1684   300001                     	org	3145729
  1685   300001  08                 	db	8
  1686                           
  1687                           ;Config register CONFIG2L @ 0x300002
  1688                           ;	Power-up Timer Enable bit
  1689                           ;	PWRT = OFF, PWRT disabled
  1690                           ;	Brown-out Reset Enable bits
  1691                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1692                           ;	Brown-out Reset Voltage bits
  1693                           ;	BORV = 3, Minimum Setting
  1694   300002                     	org	3145730
  1695   300002  1F                 	db	31
  1696                           
  1697                           ;Config register CONFIG2H @ 0x300003
  1698                           ;	Watchdog Timer Enable bit
  1699                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1700                           ;	Watchdog Timer Postscale Select bits
  1701                           ;	WDTPS = 32768, 1:32768
  1702   300003                     	org	3145731
  1703   300003  1E                 	db	30
  1704                           
  1705                           ; Padding undefined space
  1706   300004                     	org	3145732
  1707   300004  FF                 	db	255
  1708                           
  1709                           ;Config register CONFIG3H @ 0x300005
  1710                           ;	CCP2 MUX bit
  1711                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1712                           ;	PORTB A/D Enable bit
  1713                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
  1714                           ;	Low-Power Timer1 Oscillator Enable bit
  1715                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1716                           ;	MCLR Pin Enable bit
  1717                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1718   300005                     	org	3145733
  1719   300005  83                 	db	131
  1720                           
  1721                           ;Config register CONFIG4L @ 0x300006
  1722                           ;	Stack Full/Underflow Reset Enable bit
  1723                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1724                           ;	Single-Supply ICSP Enable bit
  1725                           ;	LVP = OFF, Single-Supply ICSP disabled
  1726                           ;	Boot Block Size Select bits
  1727                           ;	BBSIZ = BB256, 256 Word
  1728                           ;	Extended Instruction Set Enable bit
  1729                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1730                           ;	Background Debugger Enable bit
  1731                           ;	DEBUG = 0x1, unprogrammed default
  1732   300006                     	org	3145734
  1733   300006  81                 	db	129
  1734                           
  1735                           ; Padding undefined space
  1736   300007                     	org	3145735
  1737   300007  FF                 	db	255
  1738                           
  1739                           ;Config register CONFIG5L @ 0x300008
  1740                           ;	Code Protection bit
  1741                           ;	CP0 = OFF, Block 0 not code-protected
  1742                           ;	Code Protection bit
  1743                           ;	CP1 = OFF, Block 1 not code-protected
  1744   300008                     	org	3145736
  1745   300008  03                 	db	3
  1746                           
  1747                           ;Config register CONFIG5H @ 0x300009
  1748                           ;	Boot Block Code Protection bitProtect Boot
  1749                           ;	CPB = OFF, Boot block not code-protected
  1750                           ;	Data EEPROM Code Protection bit
  1751                           ;	CPD = OFF, Data EEPROM not code-protected
  1752   300009                     	org	3145737
  1753   300009  C0                 	db	192
  1754                           
  1755                           ;Config register CONFIG6L @ 0x30000A
  1756                           ;	Write Protection bit
  1757                           ;	WRT0 = OFF, Block 0 not write-protected
  1758                           ;	Write Protection bit
  1759                           ;	WRT1 = OFF, Block 1 not write-protected
  1760   30000A                     	org	3145738
  1761   30000A  03                 	db	3
  1762                           
  1763                           ;Config register CONFIG6H @ 0x30000B
  1764                           ;	Configuration Register Write Protection bit
  1765                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1766                           ;	Boot Block Write Protection bit
  1767                           ;	WRTB = OFF, Boot block not write-protected
  1768                           ;	Data EEPROM Write Protection bit
  1769                           ;	WRTD = OFF, Data EEPROM not write-protected
  1770   30000B                     	org	3145739
  1771   30000B  E0                 	db	224
  1772                           
  1773                           ;Config register CONFIG7L @ 0x30000C
  1774                           ;	Table Read Protection bit
  1775                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  1776                           ;	Table Read Protection bit
  1777                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  1778   30000C                     	org	3145740
  1779   30000C  03                 	db	3
  1780                           
  1781                           ;Config register CONFIG7H @ 0x30000D
  1782                           ;	Boot Block Table Read Protection bit
  1783                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  1784   30000D                     	org	3145741
  1785   30000D  40                 	db	64
  1786                           tosu	equ	0xFFF
  1787                           tosh	equ	0xFFE
  1788                           tosl	equ	0xFFD
  1789                           stkptr	equ	0xFFC
  1790                           pclatu	equ	0xFFB
  1791                           pclath	equ	0xFFA
  1792                           pcl	equ	0xFF9
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           prodh	equ	0xFF4
  1798                           prodl	equ	0xFF3
  1799                           indf0	equ	0xFEF
  1800                           postinc0	equ	0xFEE
  1801                           postdec0	equ	0xFED
  1802                           preinc0	equ	0xFEC
  1803                           plusw0	equ	0xFEB
  1804                           fsr0h	equ	0xFEA
  1805                           fsr0l	equ	0xFE9
  1806                           wreg	equ	0xFE8
  1807                           indf1	equ	0xFE7
  1808                           postinc1	equ	0xFE6
  1809                           postdec1	equ	0xFE5
  1810                           preinc1	equ	0xFE4
  1811                           plusw1	equ	0xFE3
  1812                           fsr1h	equ	0xFE2
  1813                           fsr1l	equ	0xFE1
  1814                           bsr	equ	0xFE0
  1815                           indf2	equ	0xFDF
  1816                           postinc2	equ	0xFDE
  1817                           postdec2	equ	0xFDD
  1818                           preinc2	equ	0xFDC
  1819                           plusw2	equ	0xFDB
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     34      36
    BANK0           128      0       0
    BANK1           244      0       0

Pointer List with Targets:

    lcd_message@message	PTR unsigned char  size(2) Largest target is 17
		 -> character(COMRAM[1]), STR_1(CODE[7]), STR_2(CODE[9]), STR_3(CODE[17]), 
		 -> STR_4(CODE[16]), STR_5(CODE[2]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_move_cursor
    _lcd_move_cursor->_lcd_command
    _lcd_command->_delay
    _lcd_message->_lcd_char
    _lcd_char->_delay
    _lcd_clear->_delay
    _delay->___lmul

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11668
                           _lcd_init
                        _lcd_message
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    9980
                              _delay
                          _lcd_clear
                        _lcd_command
                        _lcd_message
                    _lcd_move_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1    3209
                                             32 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          7     4      3    2915
                                             25 COMRAM     7     4      3
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _lcd_message                                          2     0      2    1688
                                             27 COMRAM     2     0      2
                 _i2c_start_and_addr
                           _i2c_stop
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             2     2      0    1172
                                             25 COMRAM     2     2      0
                              _delay
                        _i2c_data_tx
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    1099
                              _delay
                        _i2c_data_tx
                 _i2c_start_and_addr
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start_and_addr                                   1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_data_tx                                          1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _delay                                               12     8      4    1069
                                             13 COMRAM    12     8      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _delay
       ___lmul
     _lcd_clear
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_command
       _delay
       _i2c_data_tx
       _i2c_start_and_addr
       _i2c_stop
     _lcd_message
       _i2c_start_and_addr
       _i2c_stop
       _lcd_char
         _delay
         _i2c_data_tx
     _lcd_move_cursor
       _lcd_command
   _lcd_message
   _system_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       8        0.0%
BANK1               F4      0       0       4        0.0%
BITBANK0            80      0       0       7        0.0%
BANK0               80      0       0       3        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     22      24       1       28.6%
BITBIGSFR_1llll     22      0       0      15        0.0%
BITBIGSFR_5h         A      0       0       5        0.0%
BITBIGSFRlh          8      0       0      18        0.0%
BITBIGSFRhl          8      0       0      17        0.0%
BITBIGSFRhh          6      0       0      16        0.0%
BITBIGSFR_2          6      0       0      11        0.0%
BITBIGSFR_1lllh      3      0       0      14        0.0%
BITBIGSFR_1lh        3      0       0      13        0.0%
BITBIGSFR_4          3      0       0       9        0.0%
BITBIGSFR_3          3      0       0      10        0.0%
BITBIGSFR_1hh        2      0       0      12        0.0%
BITBIGSFR_5l         1      0       0       6        0.0%
BITBIGSFRll          1      0       0      19        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      20        0.0%
DATA                 0      0      24      22        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 13 10:43:50 2024

               _SSPSTATbits 0FC7                          l91 02B4                          l93 030E  
                        l95 031C                          l96 0320                          l89 02A6  
                        l99 03EA                          u60 069E                          u61 069A  
                        u70 06B2                          u71 06AE                          u80 06C2  
                        u81 06BE                          u90 0706                          u91 0702  
       __end_of_system_init 064C                         l110 0488                         l130 0716  
                       l122 05BA                         l107 068A                         l116 055A  
                       l125 06F4                         l141 069E                         l133 071A  
                       l126 06F8                         l150 064A                         l143 06A4  
                       l135 0728                         l119 060A                         l128 0706  
                       l136 072A                         l145 06B2                         l147 06C2  
                       l139 0690                         l164 04E2                         l165 04F2  
                       l920 0616                         l930 0624                         l922 0618  
                       l860 068E                         l940 0636                         l932 062A  
                       l924 061A                         l916 060C                         l862 06A0  
                       l942 063C                         l934 0630                         l926 061C  
                       l918 0610                         l864 06F4                         l944 0646  
                       l936 0632                         l928 0622                         l866 0718  
                       l946 0648                         l938 0634                         l992 048A  
                       l994 049A                         l996 04A8                         l998 04B8  
                       u100 0716                         u101 0712                         u110 0728  
                       u111 0724                         u200 04E2                         u201 04DE  
                       u210 02B4                         u211 02B0                         u220 02D4  
                       u221 02D0                         u230 031C                         u231 0318  
                       u240 051E                         u250 0546                         u260 0556  
                       u261 0552                         u190 04A8                         u270 065E  
                       u191 04A4                         u247 0514                         u271 065A  
                       u280 06DC                         u257 053C                         u281 06D8  
                       _ISR 0008                         wreg 0FE8              lcd_char@letter 001B  
                      ?_ISR 0001                        l1000 04C2                        l1010 029C  
                      l1002 0236                        l1020 0304                        l1012 02A0  
                      l1004 023A                        l1022 0308                        l1014 02A4  
                      l1006 023C                        l1030 041A                        l1024 030C  
                      l1008 027C                        l1016 02B8                        l1040 0484  
                      l1032 042E                        l1018 02D4                        l1042 05BE  
                      l1050 0526                        l1034 0438                        l1026 03EE  
                      l1060 0582                        l1052 0556                        l1044 04F4  
                      l1036 0466                        l1028 03F4                        l1062 0588  
                      l1054 055C                        l1046 04FE                        l1038 047A  
                      l1070 065E                        l1064 05A2                        l1056 0568  
                      l1048 0522                        l1072 0676                        l1080 0390  
                      l1066 05B6                        l1058 057C                        l1082 03A4  
                      l1074 0322                        l1090 06C8                        l1068 064E  
                      l1084 03B8                        l1076 0366                        l1092 06CC  
                      l1086 03C2                        l1078 0376                        l1094 06DC  
                      l1096 06E6                        l1088 06C4                        STR_1 022B  
                      STR_2 0222                        STR_3 0201                        STR_4 0212  
                      STR_5 0232                        _LATB 0F8A                        i2l81 0022  
                      i2l84 004E               ??_i2c_data_tx 0002                        _main 06C4  
                      fsr0h 0FEA                        indf0 0FEF                        fsr0l 0FE9  
                      btemp 0025                        start 0052   i2c_start_and_addr@address 0002  
          ?_lcd_move_cursor 0021                ___param_bank 0000                       ??_ISR 0001  
             lcd_command@lt 001A               lcd_command@rs 001C               lcd_command@rw 001B  
                     ?_main 0001                       _T1CON 0FCD                       i2l980 0048  
                     i2l972 000A                       i2l982 004A                       i2l974 0018  
                     i2l976 0020                       i2l978 0030                       _TMR1H 0FCF  
                     _TMR1L 0FCE                       _PORTB 0F81                       _TRISB 0F93  
       ___lmul@multiplicand 0006                       _delay 0236             i2c_data_tx@data 0002  
                     tablat 0FF5                       ttemp5 0026                       ttemp6 0029  
                     ttemp7 002D                       status 0FD8                       wtemp8 0026  
       __end_of_i2c_data_tx 0718             __initialization 072C                 _system_init 060C  
              __end_of_main 06F2            __end_of_i2c_stop 072C                      ??_main 0023  
             __activetblptr 0002          _i2c_start_and_addr 068C                      ?_delay 000E  
       ?_i2c_start_and_addr 0001                      _SSPADD 0FC8                      _SSPBUF 0FC9  
          __end_of_lcd_char 060C            __end_of_lcd_init 03EC                      ___lmul 048A  
      ??_i2c_start_and_addr 0002                      isa$std 0001                __mediumconst 0000  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
   lcd_move_cursor@position 0021                  __accesstop 0080     __end_of__initialization 0730  
               _i2c_data_tx 06F2               ___rparam_used 0001              __pcstackCOMRAM 0001  
             __end_of_delay 0322                     ??_delay 0012                   ?_i2c_stop 0001  
           lcd_command@data 0020                     ?___lmul 0002              ___lmul@product 000A  
                   i2u17_40 0018                     i2u17_41 0014                     i2u18_40 0030  
                   i2u18_41 002C                   ?_lcd_char 0001                   ?_lcd_init 0001  
                ??_i2c_stop 0002         lcd_move_cursor@line 0022                     __Hparam 0000  
                   __Lparam 0000           __end_of_lcd_clear 05BC                ?_system_init 0001  
              __psmallconst 0200                     __pcinit 072C                     __ramtop 0200  
                   __ptext0 06C4                     __ptext1 060C                     __ptext2 0322  
                   __ptext3 064C                     __ptext4 03EC                     __ptext5 04F4  
                   __ptext6 05BC                     __ptext7 055C                     __ptext8 0718  
                   __ptext9 068C                   _T1CONbits 0FCD                  ??_lcd_char 001A  
                ??_lcd_init 0023        end_of_initialization 0730               __Lmediumconst 0000  
                 _TRISCbits 0F94          lcd_message@message 001C                ?_i2c_data_tx 0001  
             ??_lcd_command 001D               ??_lcd_message 001E              __end_of___lmul 04F4  
          delay@timer_value 0012         start_initialization 072C                 __end_of_ISR 0052  
         ??_lcd_move_cursor 0022                    ??___lmul 000A         __end_of_lcd_command 048A  
       __end_of_lcd_message 055C                 __pbssCOMRAM 0023                   _character 0024  
                 __pintcode 0008                   _lcd_clear 055C                 __smallconst 0200  
                 _new_input 0023                    _PIE1bits 0F9D                 _lcd_command 03EC  
                  _PIR1bits 0F9E                 _lcd_message 04F4                    _RCONbits 0FD0  
                ?_lcd_clear 0001                  _ADCON1bits 0FC1           ___lmul@multiplier 0002  
               _INTCON2bits 0FF1                    _i2c_stop 0718                    __Hrparam 0000  
                  __Lrparam 0000             _lcd_move_cursor 064C                    __ptext10 06F2  
                  __ptext11 0236                    __ptext12 048A                    _lcd_char 05BC  
                  _lcd_init 0322  __end_of_i2c_start_and_addr 06C4                    isa$xinst 0000  
                  int$flags 0025           delay@milliseconds 000E                 ??_lcd_clear 001A  
               _OSCTUNEbits 0F9B                  _INTCONbits 0FF2                    intlevel2 0000  
                _OSCCONbits 0FD3     __end_of_lcd_move_cursor 068C               ??_system_init 0002  
               _SSPCON1bits 0FC6                 _SSPCON2bits 0FC5                ?_lcd_command 001A  
              ?_lcd_message 001C  
